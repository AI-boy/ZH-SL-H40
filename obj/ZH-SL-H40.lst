

Microchip Technology PIC PRO Macro Assembler V1.30 build 55553 
                                                                                               Sat Mar 30 17:23:51 2019

Microchip Technology Omniscient Code Generator (PRO mode) build 55553
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	idataBANK5,global,class=CODE,delta=2
    10                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	inittext,global,class=CODE,delta=2
    29                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text35,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text52,local,class=CODE,merge=1,delta=2
    44                           	psect	pa_nodes,global,class=CODE,delta=2
    45                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
    46                           	psect	text11_split_2,local,class=CODE,merge=1,delta=2
    47                           	psect	text11_split_3,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x620,48
    49                           	dabs	1,0x5A0,80
    50                           	dabs	1,0x2370,0,_adc_buffer
    51                           	dabs	1,0x7E,2
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0097                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  0110                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011A                     	;# 
   114  011B                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020D                     	;# 
   139  0210                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0294                     	;# 
   153  0295                     	;# 
   154  0295                     	;# 
   155  0296                     	;# 
   156  0298                     	;# 
   157  0298                     	;# 
   158  0299                     	;# 
   159  029A                     	;# 
   160  029B                     	;# 
   161  029C                     	;# 
   162  029C                     	;# 
   163  029D                     	;# 
   164  029E                     	;# 
   165  029F                     	;# 
   166  0311                     	;# 
   167  0311                     	;# 
   168  0312                     	;# 
   169  0313                     	;# 
   170  0314                     	;# 
   171  0315                     	;# 
   172  0315                     	;# 
   173  0316                     	;# 
   174  0318                     	;# 
   175  0318                     	;# 
   176  0319                     	;# 
   177  031A                     	;# 
   178  031C                     	;# 
   179  031C                     	;# 
   180  031D                     	;# 
   181  031E                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  0415                     	;# 
   186  0416                     	;# 
   187  0417                     	;# 
   188  041C                     	;# 
   189  041D                     	;# 
   190  041E                     	;# 
   191  0791                     	;# 
   192  0792                     	;# 
   193  0793                     	;# 
   194  0794                     	;# 
   195  0795                     	;# 
   196  0798                     	;# 
   197  0799                     	;# 
   198  07A0                     	;# 
   199  07A1                     	;# 
   200  07A3                     	;# 
   201  07A4                     	;# 
   202  07A6                     	;# 
   203  07A7                     	;# 
   204  07A9                     	;# 
   205  07AA                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  0110                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0194                     	;# 
   290  0195                     	;# 
   291  0196                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019E                     	;# 
   302  019F                     	;# 
   303  020D                     	;# 
   304  0210                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0294                     	;# 
   318  0295                     	;# 
   319  0295                     	;# 
   320  0296                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  029E                     	;# 
   330  029F                     	;# 
   331  0311                     	;# 
   332  0311                     	;# 
   333  0312                     	;# 
   334  0313                     	;# 
   335  0314                     	;# 
   336  0315                     	;# 
   337  0315                     	;# 
   338  0316                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  031C                     	;# 
   344  031C                     	;# 
   345  031D                     	;# 
   346  031E                     	;# 
   347  0394                     	;# 
   348  0395                     	;# 
   349  0396                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0791                     	;# 
   357  0792                     	;# 
   358  0793                     	;# 
   359  0794                     	;# 
   360  0795                     	;# 
   361  0798                     	;# 
   362  0799                     	;# 
   363  07A0                     	;# 
   364  07A1                     	;# 
   365  07A3                     	;# 
   366  07A4                     	;# 
   367  07A6                     	;# 
   368  07A7                     	;# 
   369  07A9                     	;# 
   370  07AA                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020D                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0294                     	;# 
   483  0295                     	;# 
   484  0295                     	;# 
   485  0296                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  029B                     	;# 
   491  029C                     	;# 
   492  029C                     	;# 
   493  029D                     	;# 
   494  029E                     	;# 
   495  029F                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  0314                     	;# 
   501  0315                     	;# 
   502  0315                     	;# 
   503  0316                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  031C                     	;# 
   509  031C                     	;# 
   510  031D                     	;# 
   511  031E                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  0415                     	;# 
   516  0416                     	;# 
   517  0417                     	;# 
   518  041C                     	;# 
   519  041D                     	;# 
   520  041E                     	;# 
   521  0791                     	;# 
   522  0792                     	;# 
   523  0793                     	;# 
   524  0794                     	;# 
   525  0795                     	;# 
   526  0798                     	;# 
   527  0799                     	;# 
   528  07A0                     	;# 
   529  07A1                     	;# 
   530  07A3                     	;# 
   531  07A4                     	;# 
   532  07A6                     	;# 
   533  07A7                     	;# 
   534  07A9                     	;# 
   535  07AA                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0110                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0113                     	;# 
   602  0114                     	;# 
   603  0115                     	;# 
   604  0116                     	;# 
   605  0117                     	;# 
   606  0118                     	;# 
   607  0119                     	;# 
   608  011A                     	;# 
   609  011B                     	;# 
   610  011D                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020D                     	;# 
   634  0210                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0291                     	;# 
   644  0291                     	;# 
   645  0292                     	;# 
   646  0293                     	;# 
   647  0294                     	;# 
   648  0295                     	;# 
   649  0295                     	;# 
   650  0296                     	;# 
   651  0298                     	;# 
   652  0298                     	;# 
   653  0299                     	;# 
   654  029A                     	;# 
   655  029B                     	;# 
   656  029C                     	;# 
   657  029C                     	;# 
   658  029D                     	;# 
   659  029E                     	;# 
   660  029F                     	;# 
   661  0311                     	;# 
   662  0311                     	;# 
   663  0312                     	;# 
   664  0313                     	;# 
   665  0314                     	;# 
   666  0315                     	;# 
   667  0315                     	;# 
   668  0316                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  031C                     	;# 
   674  031C                     	;# 
   675  031D                     	;# 
   676  031E                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0791                     	;# 
   687  0792                     	;# 
   688  0793                     	;# 
   689  0794                     	;# 
   690  0795                     	;# 
   691  0798                     	;# 
   692  0799                     	;# 
   693  07A0                     	;# 
   694  07A1                     	;# 
   695  07A3                     	;# 
   696  07A4                     	;# 
   697  07A6                     	;# 
   698  07A7                     	;# 
   699  07A9                     	;# 
   700  07AA                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712                           
   713                           	psect	eeprom_data
   714  0000  0002 0058 0000     	db	2,88,0,33,100,100,100,100	;# 
      +       0021 0064 0064     
      +       0064 0064          
   715  0008  0064 0001 0001     	db	100,1,1,1,5,5,1,1	;# 
      +       0001 0005 0005     
      +       0001 0001          
   716  0010  0001 0000 0000     	db	1,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   717  0018  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   718  0020  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   719  0028  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   720  0030  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   721  0038  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0008                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  0010                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0016                     	;# 
   744  0017                     	;# 
   745  0018                     	;# 
   746  0019                     	;# 
   747  001A                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0092                     	;# 
   758  0093                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  0110                     	;# 
   774  0111                     	;# 
   775  0112                     	;# 
   776  0113                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0117                     	;# 
   781  0118                     	;# 
   782  0119                     	;# 
   783  011A                     	;# 
   784  011B                     	;# 
   785  011D                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020D                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0291                     	;# 
   819  0291                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0294                     	;# 
   823  0295                     	;# 
   824  0295                     	;# 
   825  0296                     	;# 
   826  0298                     	;# 
   827  0298                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029B                     	;# 
   831  029C                     	;# 
   832  029C                     	;# 
   833  029D                     	;# 
   834  029E                     	;# 
   835  029F                     	;# 
   836  0311                     	;# 
   837  0311                     	;# 
   838  0312                     	;# 
   839  0313                     	;# 
   840  0314                     	;# 
   841  0315                     	;# 
   842  0315                     	;# 
   843  0316                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  031C                     	;# 
   849  031C                     	;# 
   850  031D                     	;# 
   851  031E                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0415                     	;# 
   856  0416                     	;# 
   857  0417                     	;# 
   858  041C                     	;# 
   859  041D                     	;# 
   860  041E                     	;# 
   861  0791                     	;# 
   862  0792                     	;# 
   863  0793                     	;# 
   864  0794                     	;# 
   865  0795                     	;# 
   866  0798                     	;# 
   867  0799                     	;# 
   868  07A0                     	;# 
   869  07A1                     	;# 
   870  07A3                     	;# 
   871  07A4                     	;# 
   872  07A6                     	;# 
   873  07A7                     	;# 
   874  07A9                     	;# 
   875  07AA                     	;# 
   876  0FE4                     	;# 
   877  0FE5                     	;# 
   878  0FE6                     	;# 
   879  0FE7                     	;# 
   880  0FE8                     	;# 
   881  0FE9                     	;# 
   882  0FEA                     	;# 
   883  0FEB                     	;# 
   884  0FED                     	;# 
   885  0FEE                     	;# 
   886  0FEF                     	;# 
   887  0000                     	;# 
   888  0001                     	;# 
   889  0002                     	;# 
   890  0003                     	;# 
   891  0004                     	;# 
   892  0005                     	;# 
   893  0006                     	;# 
   894  0007                     	;# 
   895  0008                     	;# 
   896  0009                     	;# 
   897  000A                     	;# 
   898  000B                     	;# 
   899  000C                     	;# 
   900  000D                     	;# 
   901  000E                     	;# 
   902  0010                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0013                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  001E                     	;# 
   916  001F                     	;# 
   917  008C                     	;# 
   918  008D                     	;# 
   919  008E                     	;# 
   920  0090                     	;# 
   921  0091                     	;# 
   922  0092                     	;# 
   923  0093                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  0110                     	;# 
   939  0111                     	;# 
   940  0112                     	;# 
   941  0113                     	;# 
   942  0114                     	;# 
   943  0115                     	;# 
   944  0116                     	;# 
   945  0117                     	;# 
   946  0118                     	;# 
   947  0119                     	;# 
   948  011A                     	;# 
   949  011B                     	;# 
   950  011D                     	;# 
   951  018C                     	;# 
   952  018D                     	;# 
   953  0191                     	;# 
   954  0191                     	;# 
   955  0192                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0193                     	;# 
   959  0194                     	;# 
   960  0195                     	;# 
   961  0196                     	;# 
   962  0199                     	;# 
   963  019A                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019C                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020D                     	;# 
   974  0210                     	;# 
   975  0211                     	;# 
   976  0212                     	;# 
   977  0213                     	;# 
   978  0214                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0217                     	;# 
   983  0291                     	;# 
   984  0291                     	;# 
   985  0292                     	;# 
   986  0293                     	;# 
   987  0294                     	;# 
   988  0295                     	;# 
   989  0295                     	;# 
   990  0296                     	;# 
   991  0298                     	;# 
   992  0298                     	;# 
   993  0299                     	;# 
   994  029A                     	;# 
   995  029B                     	;# 
   996  029C                     	;# 
   997  029C                     	;# 
   998  029D                     	;# 
   999  029E                     	;# 
  1000  029F                     	;# 
  1001  0311                     	;# 
  1002  0311                     	;# 
  1003  0312                     	;# 
  1004  0313                     	;# 
  1005  0314                     	;# 
  1006  0315                     	;# 
  1007  0315                     	;# 
  1008  0316                     	;# 
  1009  0318                     	;# 
  1010  0318                     	;# 
  1011  0319                     	;# 
  1012  031A                     	;# 
  1013  031C                     	;# 
  1014  031C                     	;# 
  1015  031D                     	;# 
  1016  031E                     	;# 
  1017  0394                     	;# 
  1018  0395                     	;# 
  1019  0396                     	;# 
  1020  0415                     	;# 
  1021  0416                     	;# 
  1022  0417                     	;# 
  1023  041C                     	;# 
  1024  041D                     	;# 
  1025  041E                     	;# 
  1026  0791                     	;# 
  1027  0792                     	;# 
  1028  0793                     	;# 
  1029  0794                     	;# 
  1030  0795                     	;# 
  1031  0798                     	;# 
  1032  0799                     	;# 
  1033  07A0                     	;# 
  1034  07A1                     	;# 
  1035  07A3                     	;# 
  1036  07A4                     	;# 
  1037  07A6                     	;# 
  1038  07A7                     	;# 
  1039  07A9                     	;# 
  1040  07AA                     	;# 
  1041  0FE4                     	;# 
  1042  0FE5                     	;# 
  1043  0FE6                     	;# 
  1044  0FE7                     	;# 
  1045  0FE8                     	;# 
  1046  0FE9                     	;# 
  1047  0FEA                     	;# 
  1048  0FEB                     	;# 
  1049  0FED                     	;# 
  1050  0FEE                     	;# 
  1051  0FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000D                     	;# 
  1066  000E                     	;# 
  1067  0010                     	;# 
  1068  0011                     	;# 
  1069  0012                     	;# 
  1070  0013                     	;# 
  1071  0015                     	;# 
  1072  0016                     	;# 
  1073  0016                     	;# 
  1074  0017                     	;# 
  1075  0018                     	;# 
  1076  0019                     	;# 
  1077  001A                     	;# 
  1078  001B                     	;# 
  1079  001C                     	;# 
  1080  001E                     	;# 
  1081  001F                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0097                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009A                     	;# 
  1095  009B                     	;# 
  1096  009B                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  010E                     	;# 
  1103  0110                     	;# 
  1104  0111                     	;# 
  1105  0112                     	;# 
  1106  0113                     	;# 
  1107  0114                     	;# 
  1108  0115                     	;# 
  1109  0116                     	;# 
  1110  0117                     	;# 
  1111  0118                     	;# 
  1112  0119                     	;# 
  1113  011A                     	;# 
  1114  011B                     	;# 
  1115  011D                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  0191                     	;# 
  1119  0191                     	;# 
  1120  0192                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0194                     	;# 
  1125  0195                     	;# 
  1126  0196                     	;# 
  1127  0199                     	;# 
  1128  019A                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  019C                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019F                     	;# 
  1138  020D                     	;# 
  1139  0210                     	;# 
  1140  0211                     	;# 
  1141  0212                     	;# 
  1142  0213                     	;# 
  1143  0214                     	;# 
  1144  0215                     	;# 
  1145  0215                     	;# 
  1146  0216                     	;# 
  1147  0217                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0298                     	;# 
  1157  0298                     	;# 
  1158  0299                     	;# 
  1159  029A                     	;# 
  1160  029B                     	;# 
  1161  029C                     	;# 
  1162  029C                     	;# 
  1163  029D                     	;# 
  1164  029E                     	;# 
  1165  029F                     	;# 
  1166  0311                     	;# 
  1167  0311                     	;# 
  1168  0312                     	;# 
  1169  0313                     	;# 
  1170  0314                     	;# 
  1171  0315                     	;# 
  1172  0315                     	;# 
  1173  0316                     	;# 
  1174  0318                     	;# 
  1175  0318                     	;# 
  1176  0319                     	;# 
  1177  031A                     	;# 
  1178  031C                     	;# 
  1179  031C                     	;# 
  1180  031D                     	;# 
  1181  031E                     	;# 
  1182  0394                     	;# 
  1183  0395                     	;# 
  1184  0396                     	;# 
  1185  0415                     	;# 
  1186  0416                     	;# 
  1187  0417                     	;# 
  1188  041C                     	;# 
  1189  041D                     	;# 
  1190  041E                     	;# 
  1191  0791                     	;# 
  1192  0792                     	;# 
  1193  0793                     	;# 
  1194  0794                     	;# 
  1195  0795                     	;# 
  1196  0798                     	;# 
  1197  0799                     	;# 
  1198  07A0                     	;# 
  1199  07A1                     	;# 
  1200  07A3                     	;# 
  1201  07A4                     	;# 
  1202  07A6                     	;# 
  1203  07A7                     	;# 
  1204  07A9                     	;# 
  1205  07AA                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000D                     	;# 
  1231  000E                     	;# 
  1232  0010                     	;# 
  1233  0011                     	;# 
  1234  0012                     	;# 
  1235  0013                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  001E                     	;# 
  1246  001F                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  008E                     	;# 
  1250  0090                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0095                     	;# 
  1255  0096                     	;# 
  1256  0097                     	;# 
  1257  0098                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  010C                     	;# 
  1266  010D                     	;# 
  1267  010E                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011A                     	;# 
  1279  011B                     	;# 
  1280  011D                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020D                     	;# 
  1304  0210                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0217                     	;# 
  1313  0291                     	;# 
  1314  0291                     	;# 
  1315  0292                     	;# 
  1316  0293                     	;# 
  1317  0294                     	;# 
  1318  0295                     	;# 
  1319  0295                     	;# 
  1320  0296                     	;# 
  1321  0298                     	;# 
  1322  0298                     	;# 
  1323  0299                     	;# 
  1324  029A                     	;# 
  1325  029B                     	;# 
  1326  029C                     	;# 
  1327  029C                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029F                     	;# 
  1331  0311                     	;# 
  1332  0311                     	;# 
  1333  0312                     	;# 
  1334  0313                     	;# 
  1335  0314                     	;# 
  1336  0315                     	;# 
  1337  0315                     	;# 
  1338  0316                     	;# 
  1339  0318                     	;# 
  1340  0318                     	;# 
  1341  0319                     	;# 
  1342  031A                     	;# 
  1343  031C                     	;# 
  1344  031C                     	;# 
  1345  031D                     	;# 
  1346  031E                     	;# 
  1347  0394                     	;# 
  1348  0395                     	;# 
  1349  0396                     	;# 
  1350  0415                     	;# 
  1351  0416                     	;# 
  1352  0417                     	;# 
  1353  041C                     	;# 
  1354  041D                     	;# 
  1355  041E                     	;# 
  1356  0791                     	;# 
  1357  0792                     	;# 
  1358  0793                     	;# 
  1359  0794                     	;# 
  1360  0795                     	;# 
  1361  0798                     	;# 
  1362  0799                     	;# 
  1363  07A0                     	;# 
  1364  07A1                     	;# 
  1365  07A3                     	;# 
  1366  07A4                     	;# 
  1367  07A6                     	;# 
  1368  07A7                     	;# 
  1369  07A9                     	;# 
  1370  07AA                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0010                     	;# 
  1398  0011                     	;# 
  1399  0012                     	;# 
  1400  0013                     	;# 
  1401  0015                     	;# 
  1402  0016                     	;# 
  1403  0016                     	;# 
  1404  0017                     	;# 
  1405  0018                     	;# 
  1406  0019                     	;# 
  1407  001A                     	;# 
  1408  001B                     	;# 
  1409  001C                     	;# 
  1410  001E                     	;# 
  1411  001F                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0090                     	;# 
  1416  0091                     	;# 
  1417  0092                     	;# 
  1418  0093                     	;# 
  1419  0095                     	;# 
  1420  0096                     	;# 
  1421  0097                     	;# 
  1422  0098                     	;# 
  1423  0099                     	;# 
  1424  009A                     	;# 
  1425  009B                     	;# 
  1426  009B                     	;# 
  1427  009C                     	;# 
  1428  009D                     	;# 
  1429  009E                     	;# 
  1430  010C                     	;# 
  1431  010D                     	;# 
  1432  010E                     	;# 
  1433  0110                     	;# 
  1434  0111                     	;# 
  1435  0112                     	;# 
  1436  0113                     	;# 
  1437  0114                     	;# 
  1438  0115                     	;# 
  1439  0116                     	;# 
  1440  0117                     	;# 
  1441  0118                     	;# 
  1442  0119                     	;# 
  1443  011A                     	;# 
  1444  011B                     	;# 
  1445  011D                     	;# 
  1446  018C                     	;# 
  1447  018D                     	;# 
  1448  0191                     	;# 
  1449  0191                     	;# 
  1450  0192                     	;# 
  1451  0193                     	;# 
  1452  0193                     	;# 
  1453  0193                     	;# 
  1454  0194                     	;# 
  1455  0195                     	;# 
  1456  0196                     	;# 
  1457  0199                     	;# 
  1458  019A                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019B                     	;# 
  1462  019B                     	;# 
  1463  019C                     	;# 
  1464  019C                     	;# 
  1465  019D                     	;# 
  1466  019E                     	;# 
  1467  019F                     	;# 
  1468  020D                     	;# 
  1469  0210                     	;# 
  1470  0211                     	;# 
  1471  0212                     	;# 
  1472  0213                     	;# 
  1473  0214                     	;# 
  1474  0215                     	;# 
  1475  0215                     	;# 
  1476  0216                     	;# 
  1477  0217                     	;# 
  1478  0291                     	;# 
  1479  0291                     	;# 
  1480  0292                     	;# 
  1481  0293                     	;# 
  1482  0294                     	;# 
  1483  0295                     	;# 
  1484  0295                     	;# 
  1485  0296                     	;# 
  1486  0298                     	;# 
  1487  0298                     	;# 
  1488  0299                     	;# 
  1489  029A                     	;# 
  1490  029B                     	;# 
  1491  029C                     	;# 
  1492  029C                     	;# 
  1493  029D                     	;# 
  1494  029E                     	;# 
  1495  029F                     	;# 
  1496  0311                     	;# 
  1497  0311                     	;# 
  1498  0312                     	;# 
  1499  0313                     	;# 
  1500  0314                     	;# 
  1501  0315                     	;# 
  1502  0315                     	;# 
  1503  0316                     	;# 
  1504  0318                     	;# 
  1505  0318                     	;# 
  1506  0319                     	;# 
  1507  031A                     	;# 
  1508  031C                     	;# 
  1509  031C                     	;# 
  1510  031D                     	;# 
  1511  031E                     	;# 
  1512  0394                     	;# 
  1513  0395                     	;# 
  1514  0396                     	;# 
  1515  0415                     	;# 
  1516  0416                     	;# 
  1517  0417                     	;# 
  1518  041C                     	;# 
  1519  041D                     	;# 
  1520  041E                     	;# 
  1521  0791                     	;# 
  1522  0792                     	;# 
  1523  0793                     	;# 
  1524  0794                     	;# 
  1525  0795                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  07A0                     	;# 
  1529  07A1                     	;# 
  1530  07A3                     	;# 
  1531  07A4                     	;# 
  1532  07A6                     	;# 
  1533  07A7                     	;# 
  1534  07A9                     	;# 
  1535  07AA                     	;# 
  1536  0FE4                     	;# 
  1537  0FE5                     	;# 
  1538  0FE6                     	;# 
  1539  0FE7                     	;# 
  1540  0FE8                     	;# 
  1541  0FE9                     	;# 
  1542  0FEA                     	;# 
  1543  0FEB                     	;# 
  1544  0FED                     	;# 
  1545  0FEE                     	;# 
  1546  0FEF                     	;# 
  1547  0000                     	;# 
  1548  0001                     	;# 
  1549  0002                     	;# 
  1550  0003                     	;# 
  1551  0004                     	;# 
  1552  0005                     	;# 
  1553  0006                     	;# 
  1554  0007                     	;# 
  1555  0008                     	;# 
  1556  0009                     	;# 
  1557  000A                     	;# 
  1558  000B                     	;# 
  1559  000C                     	;# 
  1560  000D                     	;# 
  1561  000E                     	;# 
  1562  0010                     	;# 
  1563  0011                     	;# 
  1564  0012                     	;# 
  1565  0013                     	;# 
  1566  0015                     	;# 
  1567  0016                     	;# 
  1568  0016                     	;# 
  1569  0017                     	;# 
  1570  0018                     	;# 
  1571  0019                     	;# 
  1572  001A                     	;# 
  1573  001B                     	;# 
  1574  001C                     	;# 
  1575  001E                     	;# 
  1576  001F                     	;# 
  1577  008C                     	;# 
  1578  008D                     	;# 
  1579  008E                     	;# 
  1580  0090                     	;# 
  1581  0091                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0095                     	;# 
  1585  0096                     	;# 
  1586  0097                     	;# 
  1587  0098                     	;# 
  1588  0099                     	;# 
  1589  009A                     	;# 
  1590  009B                     	;# 
  1591  009B                     	;# 
  1592  009C                     	;# 
  1593  009D                     	;# 
  1594  009E                     	;# 
  1595  010C                     	;# 
  1596  010D                     	;# 
  1597  010E                     	;# 
  1598  0110                     	;# 
  1599  0111                     	;# 
  1600  0112                     	;# 
  1601  0113                     	;# 
  1602  0114                     	;# 
  1603  0115                     	;# 
  1604  0116                     	;# 
  1605  0117                     	;# 
  1606  0118                     	;# 
  1607  0119                     	;# 
  1608  011A                     	;# 
  1609  011B                     	;# 
  1610  011D                     	;# 
  1611  018C                     	;# 
  1612  018D                     	;# 
  1613  0191                     	;# 
  1614  0191                     	;# 
  1615  0192                     	;# 
  1616  0193                     	;# 
  1617  0193                     	;# 
  1618  0193                     	;# 
  1619  0194                     	;# 
  1620  0195                     	;# 
  1621  0196                     	;# 
  1622  0199                     	;# 
  1623  019A                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019C                     	;# 
  1629  019C                     	;# 
  1630  019D                     	;# 
  1631  019E                     	;# 
  1632  019F                     	;# 
  1633  020D                     	;# 
  1634  0210                     	;# 
  1635  0211                     	;# 
  1636  0212                     	;# 
  1637  0213                     	;# 
  1638  0214                     	;# 
  1639  0215                     	;# 
  1640  0215                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029F                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0314                     	;# 
  1666  0315                     	;# 
  1667  0315                     	;# 
  1668  0316                     	;# 
  1669  0318                     	;# 
  1670  0318                     	;# 
  1671  0319                     	;# 
  1672  031A                     	;# 
  1673  031C                     	;# 
  1674  031C                     	;# 
  1675  031D                     	;# 
  1676  031E                     	;# 
  1677  0394                     	;# 
  1678  0395                     	;# 
  1679  0396                     	;# 
  1680  0415                     	;# 
  1681  0416                     	;# 
  1682  0417                     	;# 
  1683  041C                     	;# 
  1684  041D                     	;# 
  1685  041E                     	;# 
  1686  0791                     	;# 
  1687  0792                     	;# 
  1688  0793                     	;# 
  1689  0794                     	;# 
  1690  0795                     	;# 
  1691  0798                     	;# 
  1692  0799                     	;# 
  1693  07A0                     	;# 
  1694  07A1                     	;# 
  1695  07A3                     	;# 
  1696  07A4                     	;# 
  1697  07A6                     	;# 
  1698  07A7                     	;# 
  1699  07A9                     	;# 
  1700  07AA                     	;# 
  1701  0FE4                     	;# 
  1702  0FE5                     	;# 
  1703  0FE6                     	;# 
  1704  0FE7                     	;# 
  1705  0FE8                     	;# 
  1706  0FE9                     	;# 
  1707  0FEA                     	;# 
  1708  0FEB                     	;# 
  1709  0FED                     	;# 
  1710  0FEE                     	;# 
  1711  0FEF                     	;# 
  1712  0000                     	;# 
  1713  0001                     	;# 
  1714  0002                     	;# 
  1715  0003                     	;# 
  1716  0004                     	;# 
  1717  0005                     	;# 
  1718  0006                     	;# 
  1719  0007                     	;# 
  1720  0008                     	;# 
  1721  0009                     	;# 
  1722  000A                     	;# 
  1723  000B                     	;# 
  1724  000C                     	;# 
  1725  000D                     	;# 
  1726  000E                     	;# 
  1727  0010                     	;# 
  1728  0011                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0015                     	;# 
  1732  0016                     	;# 
  1733  0016                     	;# 
  1734  0017                     	;# 
  1735  0018                     	;# 
  1736  0019                     	;# 
  1737  001A                     	;# 
  1738  001B                     	;# 
  1739  001C                     	;# 
  1740  001E                     	;# 
  1741  001F                     	;# 
  1742  008C                     	;# 
  1743  008D                     	;# 
  1744  008E                     	;# 
  1745  0090                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0095                     	;# 
  1750  0096                     	;# 
  1751  0097                     	;# 
  1752  0098                     	;# 
  1753  0099                     	;# 
  1754  009A                     	;# 
  1755  009B                     	;# 
  1756  009B                     	;# 
  1757  009C                     	;# 
  1758  009D                     	;# 
  1759  009E                     	;# 
  1760  010C                     	;# 
  1761  010D                     	;# 
  1762  010E                     	;# 
  1763  0110                     	;# 
  1764  0111                     	;# 
  1765  0112                     	;# 
  1766  0113                     	;# 
  1767  0114                     	;# 
  1768  0115                     	;# 
  1769  0116                     	;# 
  1770  0117                     	;# 
  1771  0118                     	;# 
  1772  0119                     	;# 
  1773  011A                     	;# 
  1774  011B                     	;# 
  1775  011D                     	;# 
  1776  018C                     	;# 
  1777  018D                     	;# 
  1778  0191                     	;# 
  1779  0191                     	;# 
  1780  0192                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0193                     	;# 
  1784  0194                     	;# 
  1785  0195                     	;# 
  1786  0196                     	;# 
  1787  0199                     	;# 
  1788  019A                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019C                     	;# 
  1794  019C                     	;# 
  1795  019D                     	;# 
  1796  019E                     	;# 
  1797  019F                     	;# 
  1798  020D                     	;# 
  1799  0210                     	;# 
  1800  0211                     	;# 
  1801  0212                     	;# 
  1802  0213                     	;# 
  1803  0214                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0216                     	;# 
  1807  0217                     	;# 
  1808  0291                     	;# 
  1809  0291                     	;# 
  1810  0292                     	;# 
  1811  0293                     	;# 
  1812  0294                     	;# 
  1813  0295                     	;# 
  1814  0295                     	;# 
  1815  0296                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029C                     	;# 
  1823  029D                     	;# 
  1824  029E                     	;# 
  1825  029F                     	;# 
  1826  0311                     	;# 
  1827  0311                     	;# 
  1828  0312                     	;# 
  1829  0313                     	;# 
  1830  0314                     	;# 
  1831  0315                     	;# 
  1832  0315                     	;# 
  1833  0316                     	;# 
  1834  0318                     	;# 
  1835  0318                     	;# 
  1836  0319                     	;# 
  1837  031A                     	;# 
  1838  031C                     	;# 
  1839  031C                     	;# 
  1840  031D                     	;# 
  1841  031E                     	;# 
  1842  0394                     	;# 
  1843  0395                     	;# 
  1844  0396                     	;# 
  1845  0415                     	;# 
  1846  0416                     	;# 
  1847  0417                     	;# 
  1848  041C                     	;# 
  1849  041D                     	;# 
  1850  041E                     	;# 
  1851  0791                     	;# 
  1852  0792                     	;# 
  1853  0793                     	;# 
  1854  0794                     	;# 
  1855  0795                     	;# 
  1856  0798                     	;# 
  1857  0799                     	;# 
  1858  07A0                     	;# 
  1859  07A1                     	;# 
  1860  07A3                     	;# 
  1861  07A4                     	;# 
  1862  07A6                     	;# 
  1863  07A7                     	;# 
  1864  07A9                     	;# 
  1865  07AA                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0013                     	;# 
  1896  0015                     	;# 
  1897  0016                     	;# 
  1898  0016                     	;# 
  1899  0017                     	;# 
  1900  0018                     	;# 
  1901  0019                     	;# 
  1902  001A                     	;# 
  1903  001B                     	;# 
  1904  001C                     	;# 
  1905  001E                     	;# 
  1906  001F                     	;# 
  1907  008C                     	;# 
  1908  008D                     	;# 
  1909  008E                     	;# 
  1910  0090                     	;# 
  1911  0091                     	;# 
  1912  0092                     	;# 
  1913  0093                     	;# 
  1914  0095                     	;# 
  1915  0096                     	;# 
  1916  0097                     	;# 
  1917  0098                     	;# 
  1918  0099                     	;# 
  1919  009A                     	;# 
  1920  009B                     	;# 
  1921  009B                     	;# 
  1922  009C                     	;# 
  1923  009D                     	;# 
  1924  009E                     	;# 
  1925  010C                     	;# 
  1926  010D                     	;# 
  1927  010E                     	;# 
  1928  0110                     	;# 
  1929  0111                     	;# 
  1930  0112                     	;# 
  1931  0113                     	;# 
  1932  0114                     	;# 
  1933  0115                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  0118                     	;# 
  1937  0119                     	;# 
  1938  011A                     	;# 
  1939  011B                     	;# 
  1940  011D                     	;# 
  1941  018C                     	;# 
  1942  018D                     	;# 
  1943  0191                     	;# 
  1944  0191                     	;# 
  1945  0192                     	;# 
  1946  0193                     	;# 
  1947  0193                     	;# 
  1948  0193                     	;# 
  1949  0194                     	;# 
  1950  0195                     	;# 
  1951  0196                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019D                     	;# 
  1961  019E                     	;# 
  1962  019F                     	;# 
  1963  020D                     	;# 
  1964  0210                     	;# 
  1965  0211                     	;# 
  1966  0212                     	;# 
  1967  0213                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0216                     	;# 
  1972  0217                     	;# 
  1973  0291                     	;# 
  1974  0291                     	;# 
  1975  0292                     	;# 
  1976  0293                     	;# 
  1977  0294                     	;# 
  1978  0295                     	;# 
  1979  0295                     	;# 
  1980  0296                     	;# 
  1981  0298                     	;# 
  1982  0298                     	;# 
  1983  0299                     	;# 
  1984  029A                     	;# 
  1985  029B                     	;# 
  1986  029C                     	;# 
  1987  029C                     	;# 
  1988  029D                     	;# 
  1989  029E                     	;# 
  1990  029F                     	;# 
  1991  0311                     	;# 
  1992  0311                     	;# 
  1993  0312                     	;# 
  1994  0313                     	;# 
  1995  0314                     	;# 
  1996  0315                     	;# 
  1997  0315                     	;# 
  1998  0316                     	;# 
  1999  0318                     	;# 
  2000  0318                     	;# 
  2001  0319                     	;# 
  2002  031A                     	;# 
  2003  031C                     	;# 
  2004  031C                     	;# 
  2005  031D                     	;# 
  2006  031E                     	;# 
  2007  0394                     	;# 
  2008  0395                     	;# 
  2009  0396                     	;# 
  2010  0415                     	;# 
  2011  0416                     	;# 
  2012  0417                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  0791                     	;# 
  2017  0792                     	;# 
  2018  0793                     	;# 
  2019  0794                     	;# 
  2020  0795                     	;# 
  2021  0798                     	;# 
  2022  0799                     	;# 
  2023  07A0                     	;# 
  2024  07A1                     	;# 
  2025  07A3                     	;# 
  2026  07A4                     	;# 
  2027  07A6                     	;# 
  2028  07A7                     	;# 
  2029  07A9                     	;# 
  2030  07AA                     	;# 
  2031  0FE4                     	;# 
  2032  0FE5                     	;# 
  2033  0FE6                     	;# 
  2034  0FE7                     	;# 
  2035  0FE8                     	;# 
  2036  0FE9                     	;# 
  2037  0FEA                     	;# 
  2038  0FEB                     	;# 
  2039  0FED                     	;# 
  2040  0FEE                     	;# 
  2041  0FEF                     	;# 
  2042  0000                     	;# 
  2043  0001                     	;# 
  2044  0002                     	;# 
  2045  0003                     	;# 
  2046  0004                     	;# 
  2047  0005                     	;# 
  2048  0006                     	;# 
  2049  0007                     	;# 
  2050  0008                     	;# 
  2051  0009                     	;# 
  2052  000A                     	;# 
  2053  000B                     	;# 
  2054  000C                     	;# 
  2055  000D                     	;# 
  2056  000E                     	;# 
  2057  0010                     	;# 
  2058  0011                     	;# 
  2059  0012                     	;# 
  2060  0013                     	;# 
  2061  0015                     	;# 
  2062  0016                     	;# 
  2063  0016                     	;# 
  2064  0017                     	;# 
  2065  0018                     	;# 
  2066  0019                     	;# 
  2067  001A                     	;# 
  2068  001B                     	;# 
  2069  001C                     	;# 
  2070  001E                     	;# 
  2071  001F                     	;# 
  2072  008C                     	;# 
  2073  008D                     	;# 
  2074  008E                     	;# 
  2075  0090                     	;# 
  2076  0091                     	;# 
  2077  0092                     	;# 
  2078  0093                     	;# 
  2079  0095                     	;# 
  2080  0096                     	;# 
  2081  0097                     	;# 
  2082  0098                     	;# 
  2083  0099                     	;# 
  2084  009A                     	;# 
  2085  009B                     	;# 
  2086  009B                     	;# 
  2087  009C                     	;# 
  2088  009D                     	;# 
  2089  009E                     	;# 
  2090  010C                     	;# 
  2091  010D                     	;# 
  2092  010E                     	;# 
  2093  0110                     	;# 
  2094  0111                     	;# 
  2095  0112                     	;# 
  2096  0113                     	;# 
  2097  0114                     	;# 
  2098  0115                     	;# 
  2099  0116                     	;# 
  2100  0117                     	;# 
  2101  0118                     	;# 
  2102  0119                     	;# 
  2103  011A                     	;# 
  2104  011B                     	;# 
  2105  011D                     	;# 
  2106  018C                     	;# 
  2107  018D                     	;# 
  2108  0191                     	;# 
  2109  0191                     	;# 
  2110  0192                     	;# 
  2111  0193                     	;# 
  2112  0193                     	;# 
  2113  0193                     	;# 
  2114  0194                     	;# 
  2115  0195                     	;# 
  2116  0196                     	;# 
  2117  0199                     	;# 
  2118  019A                     	;# 
  2119  019B                     	;# 
  2120  019B                     	;# 
  2121  019B                     	;# 
  2122  019B                     	;# 
  2123  019C                     	;# 
  2124  019C                     	;# 
  2125  019D                     	;# 
  2126  019E                     	;# 
  2127  019F                     	;# 
  2128  020D                     	;# 
  2129  0210                     	;# 
  2130  0211                     	;# 
  2131  0212                     	;# 
  2132  0213                     	;# 
  2133  0214                     	;# 
  2134  0215                     	;# 
  2135  0215                     	;# 
  2136  0216                     	;# 
  2137  0217                     	;# 
  2138  0291                     	;# 
  2139  0291                     	;# 
  2140  0292                     	;# 
  2141  0293                     	;# 
  2142  0294                     	;# 
  2143  0295                     	;# 
  2144  0295                     	;# 
  2145  0296                     	;# 
  2146  0298                     	;# 
  2147  0298                     	;# 
  2148  0299                     	;# 
  2149  029A                     	;# 
  2150  029B                     	;# 
  2151  029C                     	;# 
  2152  029C                     	;# 
  2153  029D                     	;# 
  2154  029E                     	;# 
  2155  029F                     	;# 
  2156  0311                     	;# 
  2157  0311                     	;# 
  2158  0312                     	;# 
  2159  0313                     	;# 
  2160  0314                     	;# 
  2161  0315                     	;# 
  2162  0315                     	;# 
  2163  0316                     	;# 
  2164  0318                     	;# 
  2165  0318                     	;# 
  2166  0319                     	;# 
  2167  031A                     	;# 
  2168  031C                     	;# 
  2169  031C                     	;# 
  2170  031D                     	;# 
  2171  031E                     	;# 
  2172  0394                     	;# 
  2173  0395                     	;# 
  2174  0396                     	;# 
  2175  0415                     	;# 
  2176  0416                     	;# 
  2177  0417                     	;# 
  2178  041C                     	;# 
  2179  041D                     	;# 
  2180  041E                     	;# 
  2181  0791                     	;# 
  2182  0792                     	;# 
  2183  0793                     	;# 
  2184  0794                     	;# 
  2185  0795                     	;# 
  2186  0798                     	;# 
  2187  0799                     	;# 
  2188  07A0                     	;# 
  2189  07A1                     	;# 
  2190  07A3                     	;# 
  2191  07A4                     	;# 
  2192  07A6                     	;# 
  2193  07A7                     	;# 
  2194  07A9                     	;# 
  2195  07AA                     	;# 
  2196  0FE4                     	;# 
  2197  0FE5                     	;# 
  2198  0FE6                     	;# 
  2199  0FE7                     	;# 
  2200  0FE8                     	;# 
  2201  0FE9                     	;# 
  2202  0FEA                     	;# 
  2203  0FEB                     	;# 
  2204  0FED                     	;# 
  2205  0FEE                     	;# 
  2206  0FEF                     	;_adc_buffer
  2207                           
  2208                           	psect	idataBANK1
  2209  10F6                     __pidataBANK1:	
  2210                           
  2211                           ;initializer for _light_pv
  2212  10F6  3400               	retlw	0
  2213  10F7  3400               	retlw	0
  2214  10F8  3416               	retlw	22
  2215  10F9  3444               	retlw	68
  2216                           
  2217                           ;initializer for _load_cc_I
  2218  10FA  3400               	retlw	0
  2219  10FB  3400               	retlw	0
  2220  10FC  3404               	retlw	4
  2221  10FD  3442               	retlw	66
  2222                           
  2223                           ;initializer for _step_01_time_limit
  2224  10FE  3401               	retlw	1
  2225  10FF  3400               	retlw	0
  2226                           
  2227                           ;initializer for _step_02_time_limit
  2228  1100  3403               	retlw	3
  2229  1101  3400               	retlw	0
  2230                           
  2231                           ;initializer for _step_03_time_limit
  2232  1102  3404               	retlw	4
  2233  1103  3400               	retlw	0
  2234                           
  2235                           ;initializer for _KEY_VALUE
  2236  1104  3410               	retlw	16
  2237                           
  2238                           ;initializer for _bt_id
  2239  1105  3401               	retlw	1
  2240                           
  2241                           ;initializer for _volt_id
  2242  1106  3401               	retlw	1
  2243                           
  2244                           ;initializer for _voltage_adjust_index
  2245  1107  3401               	retlw	1
  2246                           
  2247                           	psect	idataBANK2
  2248  1139                     __pidataBANK2:	
  2249                           
  2250                           ;initializer for _dianchi_guoya_baohu
  2251  1139  34CD               	retlw	205
  2252  113A  34CC               	retlw	204
  2253  113B  3444               	retlw	68
  2254  113C  3441               	retlw	65
  2255                           
  2256                           ;initializer for _step_01_load_percent
  2257  113D  3400               	retlw	0
  2258  113E  3400               	retlw	0
  2259  113F  34C8               	retlw	200
  2260  1140  3442               	retlw	66
  2261                           
  2262                           ;initializer for _step_02_load_percent
  2263  1141  3400               	retlw	0
  2264  1142  3400               	retlw	0
  2265  1143  34C8               	retlw	200
  2266  1144  3442               	retlw	66
  2267                           
  2268                           ;initializer for _step_03_load_percent
  2269  1145  3400               	retlw	0
  2270  1146  3400               	retlw	0
  2271  1147  34C8               	retlw	200
  2272  1148  3442               	retlw	66
  2273                           
  2274                           ;initializer for _step_04_load_percent
  2275  1149  3400               	retlw	0
  2276  114A  3400               	retlw	0
  2277  114B  34C8               	retlw	200
  2278  114C  3442               	retlw	66
  2279                           
  2280                           ;initializer for _step_05_load_percent
  2281  114D  3400               	retlw	0
  2282  114E  3400               	retlw	0
  2283  114F  34C8               	retlw	200
  2284  1150  3442               	retlw	66
  2285                           
  2286                           ;initializer for _step_04_time_limit
  2287  1151  3403               	retlw	3
  2288  1152  3400               	retlw	0
  2289                           
  2290                           ;initializer for _step_05_time_limit
  2291  1153  3401               	retlw	1
  2292  1154  3400               	retlw	0
  2293                           
  2294                           ;initializer for _sys_temper_flag
  2295  1155  3401               	retlw	1
  2296                           
  2297                           	psect	idataBANK3
  2298  10EA                     __pidataBANK3:	
  2299                           
  2300                           ;initializer for _dianchi_cv_level
  2301  10EA  3466               	retlw	102
  2302  10EB  3466               	retlw	102
  2303  10EC  3442               	retlw	66
  2304  10ED  3441               	retlw	65
  2305                           
  2306                           ;initializer for _dianchi_guoya_huifu
  2307  10EE  3466               	retlw	102
  2308  10EF  3466               	retlw	102
  2309  10F0  3442               	retlw	66
  2310  10F1  3441               	retlw	65
  2311                           
  2312                           ;initializer for _shuchu_shortout_voltage
  2313  10F2  3400               	retlw	0
  2314  10F3  3400               	retlw	0
  2315  10F4  34F0               	retlw	240
  2316  10F5  3440               	retlw	64
  2317                           
  2318                           	psect	idataBANK4
  2319  111D                     __pidataBANK4:	
  2320                           
  2321                           ;initializer for _bt_volt_00
  2322  111D  3400               	retlw	0
  2323  111E  3400               	retlw	0
  2324  111F  3410               	retlw	16
  2325  1120  3441               	retlw	65
  2326                           
  2327                           ;initializer for _bt_volt_20
  2328  1121  345C               	retlw	92
  2329  1122  348F               	retlw	143
  2330  1123  341A               	retlw	26
  2331  1124  3441               	retlw	65
  2332                           
  2333                           ;initializer for _bt_volt_40
  2334  1125  34B8               	retlw	184
  2335  1126  341E               	retlw	30
  2336  1127  3425               	retlw	37
  2337  1128  3441               	retlw	65
  2338                           
  2339                           ;initializer for _bt_volt_60
  2340  1129  3414               	retlw	20
  2341  112A  34AE               	retlw	174
  2342  112B  342F               	retlw	47
  2343  112C  3441               	retlw	65
  2344                           
  2345                           ;initializer for _bt_volt_80
  2346  112D  3471               	retlw	113
  2347  112E  343D               	retlw	61
  2348  112F  343A               	retlw	58
  2349  1130  3441               	retlw	65
  2350                           
  2351                           ;initializer for _dianchi_qianya_baohu
  2352  1131  3400               	retlw	0
  2353  1132  3400               	retlw	0
  2354  1133  3410               	retlw	16
  2355  1134  3441               	retlw	65
  2356                           
  2357                           ;initializer for _ird_data
  2358  1135  34BF               	retlw	191
  2359  1136  3440               	retlw	64
  2360  1137  34ED               	retlw	237
  2361  1138  3410               	retlw	16
  2362                           
  2363                           	psect	idataBANK5
  2364  1156                     __pidataBANK5:	
  2365                           
  2366                           ;initializer for _Load_Pmax
  2367  1156  3400               	retlw	0
  2368  1157  3400               	retlw	0
  2369  1158  3424               	retlw	36
  2370  1159  3442               	retlw	66
  2371                           
  2372                           ;initializer for _charge_i_limit
  2373  115A  3400               	retlw	0
  2374  115B  3400               	retlw	0
  2375  115C  34A0               	retlw	160
  2376  115D  3440               	retlw	64
  2377                           
  2378                           ;initializer for _dianchi_qianya_huifu
  2379  115E  3400               	retlw	0
  2380  115F  3400               	retlw	0
  2381  1160  3418               	retlw	24
  2382  1161  3441               	retlw	65
  2383                           
  2384                           ;initializer for _discharge_i_baohu
  2385  1162  3400               	retlw	0
  2386  1163  3400               	retlw	0
  2387  1164  3490               	retlw	144
  2388  1165  3440               	retlw	64
  2389                           
  2390                           ;initializer for _discharge_i_limit
  2391  1166  3400               	retlw	0
  2392  1167  3400               	retlw	0
  2393  1168  3480               	retlw	128
  2394  1169  3440               	retlw	64
  2395                           
  2396                           ;initializer for _light_off_pv_level
  2397  116A  3400               	retlw	0
  2398  116B  3400               	retlw	0
  2399  116C  3400               	retlw	0
  2400  116D  3441               	retlw	65
  2401                           
  2402                           ;initializer for _light_on_pv_level
  2403  116E  3400               	retlw	0
  2404  116F  3400               	retlw	0
  2405  1170  34C0               	retlw	192
  2406  1171  3440               	retlw	64
  2407                           
  2408                           ;initializer for _shuchu_open_voltage
  2409  1172  3400               	retlw	0
  2410  1173  3400               	retlw	0
  2411  1174  347C               	retlw	124
  2412  1175  3442               	retlw	66
  2413                           
  2414                           	psect	stringtext
  2415  3800                     __pstringtext:	
  2416  3800                     __stringtab:	
  2417  3800  3400               	retlw	0
  2418  3801                     __end_of__stringtab:	
  2419  3801                     _CRCHi:	
  2420  3801  3400               	retlw	0
  2421  3802  34C1               	retlw	193
  2422  3803  3481               	retlw	129
  2423  3804  3440               	retlw	64
  2424  3805  3401               	retlw	1
  2425  3806  34C0               	retlw	192
  2426  3807  3480               	retlw	128
  2427  3808  3441               	retlw	65
  2428  3809  3401               	retlw	1
  2429  380A  34C0               	retlw	192
  2430  380B  3480               	retlw	128
  2431  380C  3441               	retlw	65
  2432  380D  3400               	retlw	0
  2433  380E  34C1               	retlw	193
  2434  380F  3481               	retlw	129
  2435  3810  3440               	retlw	64
  2436  3811  3401               	retlw	1
  2437  3812  34C0               	retlw	192
  2438  3813  3480               	retlw	128
  2439  3814  3441               	retlw	65
  2440  3815  3400               	retlw	0
  2441  3816  34C1               	retlw	193
  2442  3817  3481               	retlw	129
  2443  3818  3440               	retlw	64
  2444  3819  3400               	retlw	0
  2445  381A  34C1               	retlw	193
  2446  381B  3481               	retlw	129
  2447  381C  3440               	retlw	64
  2448  381D  3401               	retlw	1
  2449  381E  34C0               	retlw	192
  2450  381F  3480               	retlw	128
  2451  3820  3441               	retlw	65
  2452  3821  3401               	retlw	1
  2453  3822  34C0               	retlw	192
  2454  3823  3480               	retlw	128
  2455  3824  3441               	retlw	65
  2456  3825  3400               	retlw	0
  2457  3826  34C1               	retlw	193
  2458  3827  3481               	retlw	129
  2459  3828  3440               	retlw	64
  2460  3829  3400               	retlw	0
  2461  382A  34C1               	retlw	193
  2462  382B  3481               	retlw	129
  2463  382C  3440               	retlw	64
  2464  382D  3401               	retlw	1
  2465  382E  34C0               	retlw	192
  2466  382F  3480               	retlw	128
  2467  3830  3441               	retlw	65
  2468  3831  3400               	retlw	0
  2469  3832  34C1               	retlw	193
  2470  3833  3481               	retlw	129
  2471  3834  3440               	retlw	64
  2472  3835  3401               	retlw	1
  2473  3836  34C0               	retlw	192
  2474  3837  3480               	retlw	128
  2475  3838  3441               	retlw	65
  2476  3839  3401               	retlw	1
  2477  383A  34C0               	retlw	192
  2478  383B  3480               	retlw	128
  2479  383C  3441               	retlw	65
  2480  383D  3400               	retlw	0
  2481  383E  34C1               	retlw	193
  2482  383F  3481               	retlw	129
  2483  3840  3440               	retlw	64
  2484  3841  3401               	retlw	1
  2485  3842  34C0               	retlw	192
  2486  3843  3480               	retlw	128
  2487  3844  3441               	retlw	65
  2488  3845  3400               	retlw	0
  2489  3846  34C1               	retlw	193
  2490  3847  3481               	retlw	129
  2491  3848  3440               	retlw	64
  2492  3849  3400               	retlw	0
  2493  384A  34C1               	retlw	193
  2494  384B  3481               	retlw	129
  2495  384C  3440               	retlw	64
  2496  384D  3401               	retlw	1
  2497  384E  34C0               	retlw	192
  2498  384F  3480               	retlw	128
  2499  3850  3441               	retlw	65
  2500  3851  3400               	retlw	0
  2501  3852  34C1               	retlw	193
  2502  3853  3481               	retlw	129
  2503  3854  3440               	retlw	64
  2504  3855  3401               	retlw	1
  2505  3856  34C0               	retlw	192
  2506  3857  3480               	retlw	128
  2507  3858  3441               	retlw	65
  2508  3859  3401               	retlw	1
  2509  385A  34C0               	retlw	192
  2510  385B  3480               	retlw	128
  2511  385C  3441               	retlw	65
  2512  385D  3400               	retlw	0
  2513  385E  34C1               	retlw	193
  2514  385F  3481               	retlw	129
  2515  3860  3440               	retlw	64
  2516  3861  3400               	retlw	0
  2517  3862  34C1               	retlw	193
  2518  3863  3481               	retlw	129
  2519  3864  3440               	retlw	64
  2520  3865  3401               	retlw	1
  2521  3866  34C0               	retlw	192
  2522  3867  3480               	retlw	128
  2523  3868  3441               	retlw	65
  2524  3869  3401               	retlw	1
  2525  386A  34C0               	retlw	192
  2526  386B  3480               	retlw	128
  2527  386C  3441               	retlw	65
  2528  386D  3400               	retlw	0
  2529  386E  34C1               	retlw	193
  2530  386F  3481               	retlw	129
  2531  3870  3440               	retlw	64
  2532  3871  3401               	retlw	1
  2533  3872  34C0               	retlw	192
  2534  3873  3480               	retlw	128
  2535  3874  3441               	retlw	65
  2536  3875  3400               	retlw	0
  2537  3876  34C1               	retlw	193
  2538  3877  3481               	retlw	129
  2539  3878  3440               	retlw	64
  2540  3879  3400               	retlw	0
  2541  387A  34C1               	retlw	193
  2542  387B  3481               	retlw	129
  2543  387C  3440               	retlw	64
  2544  387D  3401               	retlw	1
  2545  387E  34C0               	retlw	192
  2546  387F  3480               	retlw	128
  2547  3880  3441               	retlw	65
  2548  3881  3401               	retlw	1
  2549  3882  34C0               	retlw	192
  2550  3883  3480               	retlw	128
  2551  3884  3441               	retlw	65
  2552  3885  3400               	retlw	0
  2553  3886  34C1               	retlw	193
  2554  3887  3481               	retlw	129
  2555  3888  3440               	retlw	64
  2556  3889  3400               	retlw	0
  2557  388A  34C1               	retlw	193
  2558  388B  3481               	retlw	129
  2559  388C  3440               	retlw	64
  2560  388D  3401               	retlw	1
  2561  388E  34C0               	retlw	192
  2562  388F  3480               	retlw	128
  2563  3890  3441               	retlw	65
  2564  3891  3400               	retlw	0
  2565  3892  34C1               	retlw	193
  2566  3893  3481               	retlw	129
  2567  3894  3440               	retlw	64
  2568  3895  3401               	retlw	1
  2569  3896  34C0               	retlw	192
  2570  3897  3480               	retlw	128
  2571  3898  3441               	retlw	65
  2572  3899  3401               	retlw	1
  2573  389A  34C0               	retlw	192
  2574  389B  3480               	retlw	128
  2575  389C  3441               	retlw	65
  2576  389D  3400               	retlw	0
  2577  389E  34C1               	retlw	193
  2578  389F  3481               	retlw	129
  2579  38A0  3440               	retlw	64
  2580  38A1  3400               	retlw	0
  2581  38A2  34C1               	retlw	193
  2582  38A3  3481               	retlw	129
  2583  38A4  3440               	retlw	64
  2584  38A5  3401               	retlw	1
  2585  38A6  34C0               	retlw	192
  2586  38A7  3480               	retlw	128
  2587  38A8  3441               	retlw	65
  2588  38A9  3401               	retlw	1
  2589  38AA  34C0               	retlw	192
  2590  38AB  3480               	retlw	128
  2591  38AC  3441               	retlw	65
  2592  38AD  3400               	retlw	0
  2593  38AE  34C1               	retlw	193
  2594  38AF  3481               	retlw	129
  2595  38B0  3440               	retlw	64
  2596  38B1  3401               	retlw	1
  2597  38B2  34C0               	retlw	192
  2598  38B3  3480               	retlw	128
  2599  38B4  3441               	retlw	65
  2600  38B5  3400               	retlw	0
  2601  38B6  34C1               	retlw	193
  2602  38B7  3481               	retlw	129
  2603  38B8  3440               	retlw	64
  2604  38B9  3400               	retlw	0
  2605  38BA  34C1               	retlw	193
  2606  38BB  3481               	retlw	129
  2607  38BC  3440               	retlw	64
  2608  38BD  3401               	retlw	1
  2609  38BE  34C0               	retlw	192
  2610  38BF  3480               	retlw	128
  2611  38C0  3441               	retlw	65
  2612  38C1  3400               	retlw	0
  2613  38C2  34C1               	retlw	193
  2614  38C3  3481               	retlw	129
  2615  38C4  3440               	retlw	64
  2616  38C5  3401               	retlw	1
  2617  38C6  34C0               	retlw	192
  2618  38C7  3480               	retlw	128
  2619  38C8  3441               	retlw	65
  2620  38C9  3401               	retlw	1
  2621  38CA  34C0               	retlw	192
  2622  38CB  3480               	retlw	128
  2623  38CC  3441               	retlw	65
  2624  38CD  3400               	retlw	0
  2625  38CE  34C1               	retlw	193
  2626  38CF  3481               	retlw	129
  2627  38D0  3440               	retlw	64
  2628  38D1  3401               	retlw	1
  2629  38D2  34C0               	retlw	192
  2630  38D3  3480               	retlw	128
  2631  38D4  3441               	retlw	65
  2632  38D5  3400               	retlw	0
  2633  38D6  34C1               	retlw	193
  2634  38D7  3481               	retlw	129
  2635  38D8  3440               	retlw	64
  2636  38D9  3400               	retlw	0
  2637  38DA  34C1               	retlw	193
  2638  38DB  3481               	retlw	129
  2639  38DC  3440               	retlw	64
  2640  38DD  3401               	retlw	1
  2641  38DE  34C0               	retlw	192
  2642  38DF  3480               	retlw	128
  2643  38E0  3441               	retlw	65
  2644  38E1  3401               	retlw	1
  2645  38E2  34C0               	retlw	192
  2646  38E3  3480               	retlw	128
  2647  38E4  3441               	retlw	65
  2648  38E5  3400               	retlw	0
  2649  38E6  34C1               	retlw	193
  2650  38E7  3481               	retlw	129
  2651  38E8  3440               	retlw	64
  2652  38E9  3400               	retlw	0
  2653  38EA  34C1               	retlw	193
  2654  38EB  3481               	retlw	129
  2655  38EC  3440               	retlw	64
  2656  38ED  3401               	retlw	1
  2657  38EE  34C0               	retlw	192
  2658  38EF  3480               	retlw	128
  2659  38F0  3441               	retlw	65
  2660  38F1  3400               	retlw	0
  2661  38F2  34C1               	retlw	193
  2662  38F3  3481               	retlw	129
  2663  38F4  3440               	retlw	64
  2664  38F5  3401               	retlw	1
  2665  38F6  34C0               	retlw	192
  2666  38F7  3480               	retlw	128
  2667  38F8  3441               	retlw	65
  2668  38F9  3401               	retlw	1
  2669  38FA  34C0               	retlw	192
  2670  38FB  3480               	retlw	128
  2671  38FC  3441               	retlw	65
  2672  38FD  3400               	retlw	0
  2673  38FE  34C1               	retlw	193
  2674  38FF  3481               	retlw	129
  2675  3900  3440               	retlw	64
  2676  3901                     __end_of_CRCHi:	
  2677  3901                     _CRCLo:	
  2678  3901  3400               	retlw	0
  2679  3902  34C0               	retlw	192
  2680  3903  34C1               	retlw	193
  2681  3904  3401               	retlw	1
  2682  3905  34C3               	retlw	195
  2683  3906  3403               	retlw	3
  2684  3907  3402               	retlw	2
  2685  3908  34C2               	retlw	194
  2686  3909  34C6               	retlw	198
  2687  390A  3406               	retlw	6
  2688  390B  3407               	retlw	7
  2689  390C  34C7               	retlw	199
  2690  390D  3405               	retlw	5
  2691  390E  34C5               	retlw	197
  2692  390F  34C4               	retlw	196
  2693  3910  3404               	retlw	4
  2694  3911  34CC               	retlw	204
  2695  3912  340C               	retlw	12
  2696  3913  340D               	retlw	13
  2697  3914  34CD               	retlw	205
  2698  3915  340F               	retlw	15
  2699  3916  34CF               	retlw	207
  2700  3917  34CE               	retlw	206
  2701  3918  340E               	retlw	14
  2702  3919  340A               	retlw	10
  2703  391A  34CA               	retlw	202
  2704  391B  34CB               	retlw	203
  2705  391C  340B               	retlw	11
  2706  391D  34C9               	retlw	201
  2707  391E  3409               	retlw	9
  2708  391F  3408               	retlw	8
  2709  3920  34C8               	retlw	200
  2710  3921  34D8               	retlw	216
  2711  3922  3418               	retlw	24
  2712  3923  3419               	retlw	25
  2713  3924  34D9               	retlw	217
  2714  3925  341B               	retlw	27
  2715  3926  34DB               	retlw	219
  2716  3927  34DA               	retlw	218
  2717  3928  341A               	retlw	26
  2718  3929  341E               	retlw	30
  2719  392A  34DE               	retlw	222
  2720  392B  34DF               	retlw	223
  2721  392C  341F               	retlw	31
  2722  392D  34DD               	retlw	221
  2723  392E  341D               	retlw	29
  2724  392F  341C               	retlw	28
  2725  3930  34DC               	retlw	220
  2726  3931  3414               	retlw	20
  2727  3932  34D4               	retlw	212
  2728  3933  34D5               	retlw	213
  2729  3934  3415               	retlw	21
  2730  3935  34D7               	retlw	215
  2731  3936  3417               	retlw	23
  2732  3937  3416               	retlw	22
  2733  3938  34D6               	retlw	214
  2734  3939  34D2               	retlw	210
  2735  393A  3412               	retlw	18
  2736  393B  3413               	retlw	19
  2737  393C  34D3               	retlw	211
  2738  393D  3411               	retlw	17
  2739  393E  34D1               	retlw	209
  2740  393F  34D0               	retlw	208
  2741  3940  3410               	retlw	16
  2742  3941  34F0               	retlw	240
  2743  3942  3430               	retlw	48
  2744  3943  3431               	retlw	49
  2745  3944  34F1               	retlw	241
  2746  3945  3433               	retlw	51
  2747  3946  34F3               	retlw	243
  2748  3947  34F2               	retlw	242
  2749  3948  3432               	retlw	50
  2750  3949  3436               	retlw	54
  2751  394A  34F6               	retlw	246
  2752  394B  34F7               	retlw	247
  2753  394C  3437               	retlw	55
  2754  394D  34F5               	retlw	245
  2755  394E  3435               	retlw	53
  2756  394F  3434               	retlw	52
  2757  3950  34F4               	retlw	244
  2758  3951  343C               	retlw	60
  2759  3952  34FC               	retlw	252
  2760  3953  34FD               	retlw	253
  2761  3954  343D               	retlw	61
  2762  3955  34FF               	retlw	255
  2763  3956  343F               	retlw	63
  2764  3957  343E               	retlw	62
  2765  3958  34FE               	retlw	254
  2766  3959  34FA               	retlw	250
  2767  395A  343A               	retlw	58
  2768  395B  343B               	retlw	59
  2769  395C  34FB               	retlw	251
  2770  395D  3439               	retlw	57
  2771  395E  34F9               	retlw	249
  2772  395F  34F8               	retlw	248
  2773  3960  3438               	retlw	56
  2774  3961  3428               	retlw	40
  2775  3962  34E8               	retlw	232
  2776  3963  34E9               	retlw	233
  2777  3964  3429               	retlw	41
  2778  3965  34EB               	retlw	235
  2779  3966  342B               	retlw	43
  2780  3967  342A               	retlw	42
  2781  3968  34EA               	retlw	234
  2782  3969  34EE               	retlw	238
  2783  396A  342E               	retlw	46
  2784  396B  342F               	retlw	47
  2785  396C  34EF               	retlw	239
  2786  396D  342D               	retlw	45
  2787  396E  34ED               	retlw	237
  2788  396F  34EC               	retlw	236
  2789  3970  342C               	retlw	44
  2790  3971  34E4               	retlw	228
  2791  3972  3424               	retlw	36
  2792  3973  3425               	retlw	37
  2793  3974  34E5               	retlw	229
  2794  3975  3427               	retlw	39
  2795  3976  34E7               	retlw	231
  2796  3977  34E6               	retlw	230
  2797  3978  3426               	retlw	38
  2798  3979  3422               	retlw	34
  2799  397A  34E2               	retlw	226
  2800  397B  34E3               	retlw	227
  2801  397C  3423               	retlw	35
  2802  397D  34E1               	retlw	225
  2803  397E  3421               	retlw	33
  2804  397F  3420               	retlw	32
  2805  3980  34E0               	retlw	224
  2806  3981  34A0               	retlw	160
  2807  3982  3460               	retlw	96
  2808  3983  3461               	retlw	97
  2809  3984  34A1               	retlw	161
  2810  3985  3463               	retlw	99
  2811  3986  34A3               	retlw	163
  2812  3987  34A2               	retlw	162
  2813  3988  3462               	retlw	98
  2814  3989  3466               	retlw	102
  2815  398A  34A6               	retlw	166
  2816  398B  34A7               	retlw	167
  2817  398C  3467               	retlw	103
  2818  398D  34A5               	retlw	165
  2819  398E  3465               	retlw	101
  2820  398F  3464               	retlw	100
  2821  3990  34A4               	retlw	164
  2822  3991  346C               	retlw	108
  2823  3992  34AC               	retlw	172
  2824  3993  34AD               	retlw	173
  2825  3994  346D               	retlw	109
  2826  3995  34AF               	retlw	175
  2827  3996  346F               	retlw	111
  2828  3997  346E               	retlw	110
  2829  3998  34AE               	retlw	174
  2830  3999  34AA               	retlw	170
  2831  399A  346A               	retlw	106
  2832  399B  346B               	retlw	107
  2833  399C  34AB               	retlw	171
  2834  399D  3469               	retlw	105
  2835  399E  34A9               	retlw	169
  2836  399F  34A8               	retlw	168
  2837  39A0  3468               	retlw	104
  2838  39A1  3478               	retlw	120
  2839  39A2  34B8               	retlw	184
  2840  39A3  34B9               	retlw	185
  2841  39A4  3479               	retlw	121
  2842  39A5  34BB               	retlw	187
  2843  39A6  347B               	retlw	123
  2844  39A7  347A               	retlw	122
  2845  39A8  34BA               	retlw	186
  2846  39A9  34BE               	retlw	190
  2847  39AA  347E               	retlw	126
  2848  39AB  347F               	retlw	127
  2849  39AC  34BF               	retlw	191
  2850  39AD  347D               	retlw	125
  2851  39AE  34BD               	retlw	189
  2852  39AF  34BC               	retlw	188
  2853  39B0  347C               	retlw	124
  2854  39B1  34B4               	retlw	180
  2855  39B2  3474               	retlw	116
  2856  39B3  3475               	retlw	117
  2857  39B4  34B5               	retlw	181
  2858  39B5  3477               	retlw	119
  2859  39B6  34B7               	retlw	183
  2860  39B7  34B6               	retlw	182
  2861  39B8  3476               	retlw	118
  2862  39B9  3472               	retlw	114
  2863  39BA  34B2               	retlw	178
  2864  39BB  34B3               	retlw	179
  2865  39BC  3473               	retlw	115
  2866  39BD  34B1               	retlw	177
  2867  39BE  3471               	retlw	113
  2868  39BF  3470               	retlw	112
  2869  39C0  34B0               	retlw	176
  2870  39C1  3450               	retlw	80
  2871  39C2  3490               	retlw	144
  2872  39C3  3491               	retlw	145
  2873  39C4  3451               	retlw	81
  2874  39C5  3493               	retlw	147
  2875  39C6  3453               	retlw	83
  2876  39C7  3452               	retlw	82
  2877  39C8  3492               	retlw	146
  2878  39C9  3496               	retlw	150
  2879  39CA  3456               	retlw	86
  2880  39CB  3457               	retlw	87
  2881  39CC  3497               	retlw	151
  2882  39CD  3455               	retlw	85
  2883  39CE  3495               	retlw	149
  2884  39CF  3494               	retlw	148
  2885  39D0  3454               	retlw	84
  2886  39D1  349C               	retlw	156
  2887  39D2  345C               	retlw	92
  2888  39D3  345D               	retlw	93
  2889  39D4  349D               	retlw	157
  2890  39D5  345F               	retlw	95
  2891  39D6  349F               	retlw	159
  2892  39D7  349E               	retlw	158
  2893  39D8  345E               	retlw	94
  2894  39D9  345A               	retlw	90
  2895  39DA  349A               	retlw	154
  2896  39DB  349B               	retlw	155
  2897  39DC  345B               	retlw	91
  2898  39DD  3499               	retlw	153
  2899  39DE  3459               	retlw	89
  2900  39DF  3458               	retlw	88
  2901  39E0  3498               	retlw	152
  2902  39E1  3488               	retlw	136
  2903  39E2  3448               	retlw	72
  2904  39E3  3449               	retlw	73
  2905  39E4  3489               	retlw	137
  2906  39E5  344B               	retlw	75
  2907  39E6  348B               	retlw	139
  2908  39E7  348A               	retlw	138
  2909  39E8  344A               	retlw	74
  2910  39E9  344E               	retlw	78
  2911  39EA  348E               	retlw	142
  2912  39EB  348F               	retlw	143
  2913  39EC  344F               	retlw	79
  2914  39ED  348D               	retlw	141
  2915  39EE  344D               	retlw	77
  2916  39EF  344C               	retlw	76
  2917  39F0  348C               	retlw	140
  2918  39F1  3444               	retlw	68
  2919  39F2  3484               	retlw	132
  2920  39F3  3485               	retlw	133
  2921  39F4  3445               	retlw	69
  2922  39F5  3487               	retlw	135
  2923  39F6  3447               	retlw	71
  2924  39F7  3446               	retlw	70
  2925  39F8  3486               	retlw	134
  2926  39F9  3482               	retlw	130
  2927  39FA  3442               	retlw	66
  2928  39FB  3443               	retlw	67
  2929  39FC  3483               	retlw	131
  2930  39FD  3441               	retlw	65
  2931  39FE  3481               	retlw	129
  2932  39FF  3480               	retlw	128
  2933  3A00  3440               	retlw	64
  2934  3A01                     __end_of_CRCLo:	
  2935  0011                     _PIR1bits	set	17
  2936  0012                     _PIR2bits	set	18
  2937  000D                     _PORTBbits	set	13
  2938  000E                     _PORTCbits	set	14
  2939  001B                     _PR2	set	27
  2940  0018                     _T1CON	set	24
  2941  0019                     _T1GCONbits	set	25
  2942  001C                     _T2CONbits	set	28
  2943  0015                     _TMR0	set	21
  2944  0017                     _TMR1H	set	23
  2945  0016                     _TMR1L	set	22
  2946  0095                     _C1IF	set	149
  2947  0018                     _CARRY	set	24
  2948  005F                     _GIE	set	95
  2949  005B                     _IOCIE	set	91
  2950  0058                     _IOCIF	set	88
  2951  005E                     _PEIE	set	94
  2952  0071                     _RC1	set	113
  2953  008D                     _RCIF	set	141
  2954  005D                     _TMR0IE	set	93
  2955  005A                     _TMR0IF	set	90
  2956  0088                     _TMR1IF	set	136
  2957  00C0                     _TMR1ON	set	192
  2958  0089                     _TMR2IF	set	137
  2959  00E2                     _TMR2ON	set	226
  2960  0099                     _TMR4IF	set	153
  2961  009B                     _TMR6IF	set	155
  2962  008C                     _TXIF	set	140
  2963  009D                     _ADCON0bits	set	157
  2964  009E                     _ADCON1bits	set	158
  2965  009B                     _ADRESL	set	155
  2966  0095                     _OPTION_REGbits	set	149
  2967  0099                     _OSCCON	set	153
  2968  0091                     _PIE1bits	set	145
  2969  0092                     _PIE2bits	set	146
  2970  008C                     _TRISAbits	set	140
  2971  008D                     _TRISBbits	set	141
  2972  008E                     _TRISCbits	set	142
  2973  0097                     _WDTCONbits	set	151
  2974  009C                     _ADRESH	set	156
  2975  0495                     _C1IE	set	1173
  2976  04AB                     _PSA	set	1195
  2977  048D                     _RCIE	set	1165
  2978  04AD                     _TMR0CS	set	1197
  2979  0488                     _TMR1IE	set	1160
  2980  048C                     _TXIE	set	1164
  2981  011D                     _APFCONbits	set	285
  2982  0111                     _CM1CON0bits	set	273
  2983  0112                     _CM1CON1bits	set	274
  2984  0117                     _FVRCONbits	set	279
  2985  010C                     _LATAbits	set	268
  2986  010E                     _LATCbits	set	270
  2987  0191                     _EEADR	set	401
  2988  018C                     _ANSELA	set	396
  2989  018D                     _ANSELB	set	397
  2990  019F                     _BAUDCON	set	415
  2991  0195                     _EECON1	set	405
  2992  0196                     _EECON2	set	406
  2993  0193                     _EEDATA	set	403
  2994  0199                     _RCREG	set	409
  2995  019D                     _RCSTA	set	413
  2996  019D                     _RCSTAbits	set	413
  2997  019C                     _SP1BRGH	set	412
  2998  019B                     _SP1BRGL	set	411
  2999  019A                     _TXREG	set	410
  3000  019E                     _TXSTA	set	414
  3001  019E                     _TXSTAbits	set	414
  3002  0C60                     _ANSA0	set	3168
  3003  0C61                     _ANSA1	set	3169
  3004  0C62                     _ANSA2	set	3170
  3005  0C63                     _ANSA3	set	3171
  3006  0C65                     _ANSA5	set	3173
  3007  0C68                     _ANSB0	set	3176
  3008  0C69                     _ANSB1	set	3177
  3009  0C6B                     _ANSB3	set	3179
  3010  0CA8                     _RD	set	3240
  3011  0CA9                     _WR	set	3241
  3012  0CAA                     _WREN	set	3242
  3013  0293                     _CCP1CONbits	set	659
  3014  0291                     _CCPR1L	set	657
  3015  029E                     _CCPTMRS0bits	set	670
  3016  029F                     _CCPTMRS1bits	set	671
  3017  0313                     _CCP3CONbits	set	787
  3018  031E                     _CCP5CONbits	set	798
  3019  0311                     _CCPR3L	set	785
  3020  031C                     _CCPR5L	set	796
  3021  0396                     _IOCBFbits	set	918
  3022  0395                     _IOCBNbits	set	917
  3023  1CB4                     _IOCBF4	set	7348
  3024  1CB7                     _IOCBF7	set	7351
  3025  0416                     _PR4	set	1046
  3026  041D                     _PR6	set	1053
  3027  0417                     _T4CONbits	set	1047
  3028  041E                     _T6CONbits	set	1054
  3029  20BA                     _TMR4ON	set	8378
  3030  20F2                     _TMR6ON	set	8434
  3031                           
  3032                           ; #config settings
  3033  0000                     
  3034                           	psect	cinit
  3035  086D                     start_initialization:	
  3036  086D                     __initialization:		;BIGRAM
  3037                           
  3038                           ; Clear objects allocated to BIGRAM
  3039  086D  3070               	movlw	112
  3040  086E  0084               	movwf	4
  3041  086F  3023               	movlw	35
  3042  0870  0085               	movwf	5
  3043  0871  3080               	movlw	128
  3044  0872  00FE               	movwf	126
  3045  0873  01FF               	clrf	127
  3046  0874  3190  20DE  3188   	fcall	clear_ram0
  3047  0877  30C0               	movlw	low __pbssBANK1
  3048                           
  3049                           ; Clear objects allocated to COMMON
  3050  0878  01FC               	clrf	__pbssCOMMON& (0+127)
  3051  0879  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3052                           
  3053                           ; Clear objects allocated to BANK0
  3054  087A  01E8               	clrf	__pbssBANK0& (0+127)
  3055  087B  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  3056  087C  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  3057  087D  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  3058                           
  3059                           ; Clear objects allocated to BANK1
  3060  087E  0084               	movwf	4
  3061  087F  3000               	movlw	high __pbssBANK1
  3062  0880  0085               	movwf	5
  3063  0881  301D               	movlw	29
  3064  0882  00FE               	movwf	126
  3065  0883  3000               	movlw	0
  3066  0884  00FF               	movwf	127
  3067  0885  3190  20DE  3188   	fcall	clear_ram0
  3068                           
  3069                           ; Clear objects allocated to BANK2
  3070  0888  3020               	movlw	low __pbssBANK2
  3071  0889  0084               	movwf	4
  3072  088A  3001               	movlw	high __pbssBANK2
  3073  088B  0085               	movwf	5
  3074  088C  3033               	movlw	51
  3075  088D  00FE               	movwf	126
  3076  088E  3000               	movlw	0
  3077  088F  00FF               	movwf	127
  3078  0890  3190  20DE  3188   	fcall	clear_ram0
  3079                           
  3080                           ; Clear objects allocated to BANK3
  3081  0893  30A0               	movlw	low __pbssBANK3
  3082  0894  0084               	movwf	4
  3083  0895  3001               	movlw	high __pbssBANK3
  3084  0896  0085               	movwf	5
  3085  0897  3043               	movlw	67
  3086  0898  00FE               	movwf	126
  3087  0899  3000               	movlw	0
  3088  089A  00FF               	movwf	127
  3089  089B  3190  20DE  3188   	fcall	clear_ram0
  3090                           
  3091                           ; Clear objects allocated to BANK4
  3092  089E  3020               	movlw	low __pbssBANK4
  3093  089F  0084               	movwf	4
  3094  08A0  3002               	movlw	high __pbssBANK4
  3095  08A1  0085               	movwf	5
  3096  08A2  3034               	movlw	52
  3097  08A3  00FE               	movwf	126
  3098  08A4  3000               	movlw	0
  3099  08A5  00FF               	movwf	127
  3100  08A6  3190  20DE  3188   	fcall	clear_ram0
  3101                           
  3102                           ; Clear objects allocated to BANK5
  3103  08A9  30A0               	movlw	low __pbssBANK5
  3104  08AA  0084               	movwf	4
  3105  08AB  3002               	movlw	high __pbssBANK5
  3106  08AC  0085               	movwf	5
  3107  08AD  3028               	movlw	40
  3108  08AE  00FE               	movwf	126
  3109  08AF  3000               	movlw	0
  3110  08B0  00FF               	movwf	127
  3111  08B1  3190  20DE  3188   	fcall	clear_ram0
  3112                           
  3113                           ; Clear objects allocated to BANK6
  3114  08B4  3020               	movlw	low __pbssBANK6
  3115  08B5  0084               	movwf	4
  3116  08B6  3003               	movlw	high __pbssBANK6
  3117  08B7  0085               	movwf	5
  3118  08B8  301C               	movlw	28
  3119  08B9  00FE               	movwf	126
  3120  08BA  3000               	movlw	0
  3121  08BB  00FF               	movwf	127
  3122  08BC  3190  20DE  3188   	fcall	clear_ram0
  3123                           
  3124                           ; Clear objects allocated to BANK7
  3125  08BF  30A0               	movlw	low __pbssBANK7
  3126  08C0  0084               	movwf	4
  3127  08C1  3003               	movlw	high __pbssBANK7
  3128  08C2  0085               	movwf	5
  3129  08C3  3050               	movlw	80
  3130  08C4  00FE               	movwf	126
  3131  08C5  3000               	movlw	0
  3132  08C6  00FF               	movwf	127
  3133  08C7  3190  20DE  3188   	fcall	clear_ram0
  3134                           
  3135                           ; Clear objects allocated to BANK8
  3136  08CA  3020               	movlw	low __pbssBANK8
  3137  08CB  0084               	movwf	4
  3138  08CC  3004               	movlw	high __pbssBANK8
  3139  08CD  0085               	movwf	5
  3140  08CE  3050               	movlw	80
  3141  08CF  00FE               	movwf	126
  3142  08D0  3000               	movlw	0
  3143  08D1  00FF               	movwf	127
  3144  08D2  3190  20DE  3188   	fcall	clear_ram0
  3145                           
  3146                           ; Initialize objects allocated to BANK1
  3147  08D5  30F6               	movlw	low __pidataBANK1
  3148  08D6  0084               	movwf	4
  3149  08D7  3090               	movlw	(high __pidataBANK1)| (0+128)
  3150  08D8  0085               	movwf	5
  3151  08D9  30DD               	movlw	low __pdataBANK1
  3152  08DA  0086               	movwf	6
  3153  08DB  3000               	movlw	high __pdataBANK1
  3154  08DC  0087               	movwf	7
  3155  08DD  3000               	movlw	0
  3156  08DE  00FF               	movwf	127
  3157  08DF  3012               	movlw	18
  3158  08E0  3190  20D2  3188   	fcall	init_ram
  3159                           
  3160                           ; Initialize objects allocated to BANK2
  3161  08E3  3039               	movlw	low __pidataBANK2
  3162  08E4  0084               	movwf	4
  3163  08E5  3091               	movlw	(high __pidataBANK2)| (0+128)
  3164  08E6  0085               	movwf	5
  3165  08E7  3053               	movlw	low __pdataBANK2
  3166  08E8  0086               	movwf	6
  3167  08E9  3001               	movlw	high __pdataBANK2
  3168  08EA  0087               	movwf	7
  3169  08EB  3000               	movlw	0
  3170  08EC  00FF               	movwf	127
  3171  08ED  301D               	movlw	29
  3172  08EE  3190  20D2  3188   	fcall	init_ram
  3173                           
  3174                           ; Initialize objects allocated to BANK3
  3175  08F1  30EA               	movlw	low __pidataBANK3
  3176  08F2  0084               	movwf	4
  3177  08F3  3090               	movlw	(high __pidataBANK3)| (0+128)
  3178  08F4  0085               	movwf	5
  3179  08F5  30E3               	movlw	low __pdataBANK3
  3180  08F6  0086               	movwf	6
  3181  08F7  3001               	movlw	high __pdataBANK3
  3182  08F8  0087               	movwf	7
  3183  08F9  3000               	movlw	0
  3184  08FA  00FF               	movwf	127
  3185  08FB  300C               	movlw	12
  3186  08FC  3190  20D2  3188   	fcall	init_ram
  3187                           
  3188                           ; Initialize objects allocated to BANK4
  3189  08FF  301D               	movlw	low __pidataBANK4
  3190  0900  0084               	movwf	4
  3191  0901  3091               	movlw	(high __pidataBANK4)| (0+128)
  3192  0902  0085               	movwf	5
  3193  0903  3054               	movlw	low __pdataBANK4
  3194  0904  0086               	movwf	6
  3195  0905  3002               	movlw	high __pdataBANK4
  3196  0906  0087               	movwf	7
  3197  0907  3000               	movlw	0
  3198  0908  00FF               	movwf	127
  3199  0909  301C               	movlw	28
  3200  090A  3190  20D2  3188   	fcall	init_ram
  3201                           
  3202                           ; Initialize objects allocated to BANK5
  3203  090D  3056               	movlw	low __pidataBANK5
  3204  090E  0084               	movwf	4
  3205  090F  3091               	movlw	(high __pidataBANK5)| (0+128)
  3206  0910  0085               	movwf	5
  3207  0911  30C8               	movlw	low __pdataBANK5
  3208  0912  0086               	movwf	6
  3209  0913  3002               	movlw	high __pdataBANK5
  3210  0914  0087               	movwf	7
  3211  0915  3000               	movlw	0
  3212  0916  00FF               	movwf	127
  3213  0917  3020               	movlw	32
  3214  0918  3190  20D2  3188   	fcall	init_ram
  3215  091B                     end_of_initialization:	
  3216                           ;End of C runtime variable initialization code
  3217                           
  3218  091B                     __end_of__initialization:	
  3219  091B  0020               	movlb	0
  3220  091C  291D               	ljmp	_main	;jump to C main() function
  3221  091D                     __pmaintext:	
  3222                           ; 0 bytes @ 0x48
  3223 ;;
  3224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3225 ;;
  3226 ;; *************** function _main *****************
  3227 ;; Defined at:
  3228 ;;		line 360 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  2  811[COMMON] int 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 17F/0
  3239 ;;		On exit  : 1F/2
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels required when called:    8
  3248 ;; This function calls:
  3249 ;;		_Key_Menu
  3250 ;;		_application_init
  3251 ;;		_driver_init
  3252 ;;		_handle_ad_loop
  3253 ;;		_handle_task_process
  3254 ;;		_handle_uart_rx_buf
  3255 ;;		_middle_init
  3256 ;;		_scan_key_value
  3257 ;; This function is called by:
  3258 ;;		Startup code after reset
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _main
  3264  091D                     _main:	
  3265                           
  3266                           ;main.c: 362: driver_init();
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _main: [allreg]
  3270  091D  26EB  3188         	fcall	_driver_init
  3271                           
  3272                           ;main.c: 363: middle_init();
  3273  091F  25E0               	fcall	_middle_init
  3274                           
  3275                           ;main.c: 364: application_init();
  3276  0920  31A1  21D0  3188   	fcall	_application_init
  3277  0923                     l812:	
  3278                           ;main.c: 395: while(1)
  3279                           
  3280  0923  0064               	clrwdt	;# 
  3281                           
  3282                           ;main.c: 400: if(handle_scan_key_flag==0x01)
  3283  0924  0022               	movlb	2	; select bank2
  3284  0925  0B2F               	decfsz	_handle_scan_key_flag^(0+256),w
  3285  0926  292B               	goto	l17256
  3286                           
  3287                           ;main.c: 401: {
  3288                           ;main.c: 402: scan_key_value();
  3289  0927  2175  3188         	fcall	_scan_key_value
  3290                           
  3291                           ;main.c: 404: handle_scan_key_flag=0x00;
  3292  0929  0022               	movlb	2	; select bank2
  3293  092A  01AF               	clrf	_handle_scan_key_flag^(0+256)
  3294  092B                     l17256:	
  3295                           
  3296                           ;main.c: 405: }
  3297                           ;main.c: 407: if(ird_receive_flag==0x01)
  3298  092B  0B32               	decfsz	_ird_receive_flag^(0+256),w
  3299  092C  294B               	goto	l17272
  3300                           
  3301                           ;main.c: 408: {
  3302                           ;main.c: 409: Key_Menu(ird_data);
  3303  092D  0024               	movlb	4	; select bank4
  3304  092E  086F               	movf	(_ird_data+3)^(0+512),w
  3305  092F  0021               	movlb	1	; select bank1
  3306  0930  00A3               	movwf	(Key_Menu@key_value+3)^(0+128)
  3307  0931  0024               	movlb	4	; select bank4
  3308  0932  086E               	movf	(_ird_data+2)^(0+512),w
  3309  0933  0021               	movlb	1	; select bank1
  3310  0934  00A2               	movwf	(Key_Menu@key_value+2)^(0+128)
  3311  0935  0024               	movlb	4	; select bank4
  3312  0936  086D               	movf	(_ird_data+1)^(0+512),w
  3313  0937  0021               	movlb	1	; select bank1
  3314  0938  00A1               	movwf	(Key_Menu@key_value+1)^(0+128)
  3315  0939  0024               	movlb	4	; select bank4
  3316  093A  086C               	movf	_ird_data^(0+512),w
  3317  093B  0021               	movlb	1	; select bank1
  3318  093C  00A0               	movwf	Key_Menu@key_value^(0+128)
  3319  093D  228A               	fcall	_Key_Menu
  3320                           
  3321                           ;main.c: 411: receive_bit_count=0x00;
  3322  093E  0022               	movlb	2	; select bank2
  3323  093F  01C3               	clrf	_receive_bit_count^(0+256)
  3324                           
  3325                           ;main.c: 413: ird_status=0x00;
  3326  0940  01B4               	clrf	_ird_status^(0+256)
  3327                           
  3328                           ;main.c: 415: ird_data=0x00;
  3329  0941  0024               	movlb	4	; select bank4
  3330  0942  01EC               	clrf	_ird_data^(0+512)
  3331  0943  01ED               	clrf	(_ird_data+1)^(0+512)
  3332  0944  01EE               	clrf	(_ird_data+2)^(0+512)
  3333  0945  01EF               	clrf	(_ird_data+3)^(0+512)
  3334                           
  3335                           ;main.c: 417: TMR0=0;
  3336  0946  0020               	movlb	0	; select bank0
  3337  0947  0195               	clrf	21	;volatile
  3338                           
  3339                           ;main.c: 419: TMR0IF = 0;
  3340  0948  110B               	bcf	11,2	;volatile
  3341                           
  3342                           ;main.c: 421: ird_receive_flag=0x00;
  3343  0949  0022               	movlb	2	; select bank2
  3344  094A  01B2               	clrf	_ird_receive_flag^(0+256)
  3345  094B                     l17272:	
  3346                           
  3347                           ;main.c: 423: }
  3348                           ;main.c: 425: handle_ad_loop();
  3349  094B  31A9  2188  3188   	fcall	_handle_ad_loop
  3350                           
  3351                           ;main.c: 427: handle_task_process();
  3352  094E  2384  3188         	fcall	_handle_task_process
  3353                           
  3354                           ;main.c: 429: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3355  0950  0023               	movlb	3	; select bank3
  3356  0951  191D               	btfsc	29,2	;volatile
  3357  0952  2955               	goto	l817
  3358  0953  1C9D               	btfss	29,1	;volatile
  3359  0954  295D               	goto	l17280
  3360  0955                     l817:	
  3361                           
  3362                           ;main.c: 430: {
  3363                           ;main.c: 431: RCSTAbits.CREN = 0x00;
  3364  0955  121D               	bcf	29,4	;volatile
  3365                           
  3366                           ;main.c: 432: RCSTAbits.SPEN = 0x00;
  3367  0956  139D               	bcf	29,7	;volatile
  3368                           
  3369                           ;main.c: 433: __nop();
  3370  0957  0000               	nop
  3371                           
  3372                           ;main.c: 434: __nop();
  3373  0958  0000               	nop
  3374                           
  3375                           ;main.c: 435: __nop();
  3376  0959  0000               	nop
  3377                           
  3378                           ;main.c: 436: RCSTAbits.CREN = 0x01;
  3379  095A  0023               	movlb	3	; select bank3
  3380  095B  161D               	bsf	29,4	;volatile
  3381                           
  3382                           ;main.c: 437: RCSTAbits.SPEN = 0x01;
  3383  095C  179D               	bsf	29,7	;volatile
  3384  095D                     l17280:	
  3385                           
  3386                           ;main.c: 438: }
  3387                           ;main.c: 440: if(uart1_receive_flag==TRUE)
  3388  095D  0022               	movlb	2	; select bank2
  3389  095E  0B4D               	decfsz	_uart1_receive_flag^(0+256),w
  3390  095F  2923               	goto	l812
  3391                           
  3392                           ;main.c: 441: {
  3393                           ;main.c: 442: handle_uart_rx_buf();
  3394  0960  31AC  24B0  3188   	fcall	_handle_uart_rx_buf
  3395                           
  3396                           ;main.c: 444: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3397  0963  0023               	movlb	3	; select bank3
  3398  0964  191D               	btfsc	29,2	;volatile
  3399  0965  2968               	goto	l821
  3400  0966  1C9D               	btfss	29,1	;volatile
  3401  0967  2970               	goto	l17288
  3402  0968                     l821:	
  3403                           
  3404                           ;main.c: 445: {
  3405                           ;main.c: 446: RCSTAbits.CREN = 0x00;
  3406  0968  121D               	bcf	29,4	;volatile
  3407                           
  3408                           ;main.c: 447: RCSTAbits.SPEN = 0x00;
  3409  0969  139D               	bcf	29,7	;volatile
  3410                           
  3411                           ;main.c: 448: __nop();
  3412  096A  0000               	nop
  3413                           
  3414                           ;main.c: 449: __nop();
  3415  096B  0000               	nop
  3416                           
  3417                           ;main.c: 450: __nop();
  3418  096C  0000               	nop
  3419                           
  3420                           ;main.c: 451: RCSTAbits.CREN = 0x01;
  3421  096D  0023               	movlb	3	; select bank3
  3422  096E  161D               	bsf	29,4	;volatile
  3423                           
  3424                           ;main.c: 452: RCSTAbits.SPEN = 0x01;
  3425  096F  179D               	bsf	29,7	;volatile
  3426  0970                     l17288:	
  3427                           
  3428                           ;main.c: 453: }
  3429                           ;main.c: 455: uart1_receive_byte_count=0x00;
  3430  0970  0021               	movlb	1	; select bank1
  3431  0971  01D9               	clrf	_uart1_receive_byte_count^(0+128)
  3432                           
  3433                           ;main.c: 457: uart1_receive_flag=FALSE;
  3434  0972  0022               	movlb	2	; select bank2
  3435  0973  01CD               	clrf	_uart1_receive_flag^(0+256)
  3436  0974  2923               	goto	l812
  3437  0975                     __end_of_main:	
  3438  0975                     __ptext1:	
  3439 ;; *************** function _scan_key_value *****************
  3440 ;; Defined at:
  3441 ;;		line 62 in file "D:\MCUProject\ZH-SL-H40\src\key.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  key_temp        2   70[BANK0 ] unsigned int 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;		None               void
  3448 ;; Registers used:
  3449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 1F/2
  3452 ;;		On exit  : 1E/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;Total ram usage:        8 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    3
  3462 ;; This function calls:
  3463 ;;		_Disable_Bost_Pwm
  3464 ;;		_Disable_Buck_Pwm
  3465 ;;		_Enable_Bost_Pwm
  3466 ;;		_Set_Bost_Pwm_Duty
  3467 ;;		_Set_Buck_Pwm_Duty
  3468 ;;		_delay_ms
  3469 ;;		_eeprom_write
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _scan_key_value
  3477  0975                     _scan_key_value:	
  3478                           
  3479                           ;key.c: 64: unsigned int key_temp;
  3480                           ;key.c: 66: key_temp=0x00;
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _scan_key_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3484  0975  0020               	movlb	0	; select bank0
  3485  0976  01E6               	clrf	scan_key_value@key_temp
  3486  0977  01E7               	clrf	scan_key_value@key_temp+1
  3487                           
  3488                           ;key.c: 68: key_temp=(key_temp<<1)|(PORTBbits.RB4);
  3489  0978  0E0D               	swapf	13,w	;volatile
  3490  0979  25E4  3188         	fcall	PL22	;call to abstracted procedure
  3491                           
  3492                           ;key.c: 70: key_temp=(key_temp<<1)|(PORTCbits.RC6);
  3493  097B  0E0E               	swapf	14,w	;volatile
  3494  097C  0C89               	rrf	9,f
  3495  097D  0C89               	rrf	9,f
  3496  097E  25E4  3188         	fcall	PL22	;call to abstracted procedure
  3497                           
  3498                           ;key.c: 72: key_temp=(key_temp<<1)|(PORTCbits.RC5);
  3499  0980  0E0E               	swapf	14,w	;volatile
  3500  0981  0C89               	rrf	9,f
  3501  0982  25E4  3188         	fcall	PL22	;call to abstracted procedure
  3502                           
  3503                           ;key.c: 74: key_temp=(key_temp<<1)|(PORTCbits.RC4);
  3504  0984  0E0E               	swapf	14,w	;volatile
  3505  0985  25E4  3188         	fcall	PL22	;call to abstracted procedure
  3506                           
  3507                           ;key.c: 78: switch(key_temp)
  3508  0987  299A               	goto	l16950
  3509  0988                     l16934:	
  3510  0988  0022               	movlb	2	; select bank2
  3511  0989  01A6               	clrf	_KEY_STATE^(0+256)
  3512  098A  29B0               	goto	l16952
  3513  098B                     l641:	
  3514                           ;key.c: 82: case 0b0111: KEY_VALUE =K1;KEY_STATE =KEY_DOWN;break;
  3515                           
  3516  098B  0021               	movlb	1	; select bank1
  3517  098C  01EB               	clrf	_KEY_VALUE^(0+128)
  3518  098D  0AEB               	incf	_KEY_VALUE^(0+128),f
  3519  098E  2992               	goto	l16938
  3520  098F                     l16936:	
  3521  098F  3002               	movlw	2
  3522  0990                     L1:	
  3523  0990  0021               	movlb	1	; select bank1
  3524  0991  00EB               	movwf	_KEY_VALUE^(0+128)
  3525  0992                     l16938:	
  3526  0992  0022               	movlb	2	; select bank2
  3527  0993  01A6               	clrf	_KEY_STATE^(0+256)
  3528  0994  0AA6               	incf	_KEY_STATE^(0+256),f
  3529  0995  29B0               	goto	l16952
  3530  0996                     l16940:	
  3531  0996  3003               	movlw	3
  3532  0997  2990               	goto	L1
  3533  0998                     l16944:	
  3534  0998  3004               	movlw	4
  3535  0999  2990               	goto	L1
  3536  099A                     l16950:	
  3537                           
  3538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3539                           ; Switch size 1, requested type "space"
  3540                           ; Number of cases is 1, Range of values is 0 to 0
  3541                           ; switch strategies available:
  3542                           ; Name         Instructions Cycles
  3543                           ; simple_byte            4     3 (average)
  3544                           ; direct_byte            8     6 (fixed)
  3545                           ; jumptable            260     6 (fixed)
  3546                           ;	Chosen strategy is simple_byte
  3547  099A  0867               	movf	scan_key_value@key_temp+1,w
  3548  099B  3A00               	xorlw	0	; case 0
  3549  099C  1903               	skipnz
  3550  099D  299F               	goto	l19280
  3551  099E  2992               	goto	l16938
  3552  099F                     l19280:	
  3553                           
  3554                           ; Switch size 1, requested type "space"
  3555                           ; Number of cases is 5, Range of values is 7 to 15
  3556                           ; switch strategies available:
  3557                           ; Name         Instructions Cycles
  3558                           ; simple_byte           16     9 (average)
  3559                           ; direct_byte           27     9 (fixed)
  3560                           ; jumptable            263     9 (fixed)
  3561                           ;	Chosen strategy is simple_byte
  3562  099F  0866               	movf	scan_key_value@key_temp,w
  3563  09A0  3A07               	xorlw	7	; case 7
  3564  09A1  1903               	skipnz
  3565  09A2  298B               	goto	l641
  3566  09A3  3A0C               	xorlw	12	; case 11
  3567  09A4  1903               	skipnz
  3568  09A5  298F               	goto	l16936
  3569  09A6  3A06               	xorlw	6	; case 13
  3570  09A7  1903               	skipnz
  3571  09A8  2996               	goto	l16940
  3572  09A9  3A03               	xorlw	3	; case 14
  3573  09AA  1903               	skipnz
  3574  09AB  2998               	goto	l16944
  3575  09AC  3A01               	xorlw	1	; case 15
  3576  09AD  1903               	skipnz
  3577  09AE  2988               	goto	l16934
  3578  09AF  2992               	goto	l16938
  3579  09B0                     l16952:	
  3580                           
  3581                           ;key.c: 95: if(KEY_STATE==KEY_UP)
  3582  09B0  08A6               	movf	_KEY_STATE^(0+256),f
  3583  09B1  1D03               	skipz
  3584  09B2  2A15               	goto	l646
  3585                           
  3586                           ;key.c: 96: {
  3587                           ;key.c: 97: if(KEY_VALUE!=KNOP)
  3588  09B3  0021               	movlb	1	; select bank1
  3589  09B4  086B               	movf	_KEY_VALUE^(0+128),w
  3590  09B5  3A10               	xorlw	16
  3591  09B6  1D03               	btfss	3,2
  3592  09B7  2A04               	goto	l17098
  3593  09B8  2A15               	goto	l646
  3594  09B9                     l649:	
  3595                           ;key.c: 100: {
  3596                           ;key.c: 101: case K1:
  3597                           
  3598                           
  3599                           ;key.c: 102: __nop();
  3600  09B9  0000               	nop
  3601                           
  3602                           ;key.c: 103: key1_index=0x00;
  3603  09BA  0023               	movlb	3	; select bank3
  3604  09BB  01C1               	clrf	_key1_index^(0+384)
  3605                           
  3606                           ;key.c: 104: break;
  3607  09BC  2A12               	goto	l17100
  3608  09BD                     l16960:	
  3609                           
  3610                           ;key.c: 106: if(device_status==0x01)
  3611  09BD  0020               	movlb	0	; select bank0
  3612  09BE  0B6A               	decfsz	_device_status,w
  3613  09BF  2A12               	goto	l17100
  3614                           
  3615                           ;key.c: 107: {
  3616                           ;key.c: 108: light_mode =0x00;
  3617  09C0  0021               	movlb	1	; select bank1
  3618  09C1  01D7               	clrf	_light_mode^(0+128)
  3619  09C2                     L2:	
  3620                           
  3621                           ;key.c: 109: eeprom_write(0x36,(unsigned char)(light_mode));
  3622  09C2  2670  3188         	fcall	PL270	;call to abstracted procedure
  3623  09C4  2367  3188         	fcall	_eeprom_write
  3624                           
  3625                           ;key.c: 110: led_out_ctrl=0x00;
  3626  09C6  0021               	movlb	1	; select bank1
  3627                           
  3628                           ;key.c: 111: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3629  09C7  264B  3188         	fcall	PL174	;call to abstracted procedure
  3630  09C9  2367  3188         	fcall	_eeprom_write
  3631                           
  3632                           ;key.c: 114: lr_cnt = 0x00;
  3633  09CB  0021               	movlb	1	; select bank1
  3634  09CC  01DA               	clrf	_work_mode^(0+128)
  3635                           
  3636                           ;key.c: 116: nop_index=0x00;
  3637                           
  3638                           ;key.c: 117: discharge_index=0x00;
  3639                           
  3640                           ;key.c: 118: charge_index=0x00;
  3641  09CD  2645  3188         	fcall	PL166	;call to abstracted procedure
  3642                           
  3643                           ;key.c: 120: Disable_Buck_Pwm();
  3644  09CF  25A1  3188         	fcall	_Disable_Buck_Pwm
  3645                           
  3646                           ;key.c: 121: Set_Buck_Pwm_Duty(0);
  3647  09D1  0020               	movlb	0	; select bank0
  3648  09D2  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  3649  09D3  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  3650  09D4  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  3651                           
  3652                           ;key.c: 122: Disable_Bost_Pwm();
  3653  09D6  2362  3188         	fcall	_Disable_Bost_Pwm
  3654                           
  3655                           ;key.c: 123: (LATCbits.LATC3 = 0x00);
  3656                           
  3657                           ;key.c: 124: Set_Bost_Pwm_Duty(0);
  3658  09D8  263F  3188         	fcall	PL104	;call to abstracted procedure
  3659  09DA  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3660                           
  3661                           ;key.c: 127: (LATCbits.LATC3 = 0x01);
  3662  09DC  0022               	movlb	2	; select bank2
  3663  09DD  158E               	bsf	14,3	;volatile
  3664                           
  3665                           ;key.c: 129: Enable_Bost_Pwm();
  3666  09DE  25D2  3188         	fcall	_Enable_Bost_Pwm
  3667                           
  3668                           ;key.c: 131: Set_Bost_Pwm_Duty(200);
  3669  09E0  2666  3188         	fcall	PL240	;call to abstracted procedure
  3670  09E2  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3671                           
  3672                           ;key.c: 133: delay_ms(1000);
  3673  09E4  265B  3188         	fcall	PL202	;call to abstracted procedure
  3674  09E6  233D  3188         	fcall	_delay_ms
  3675                           
  3676                           ;key.c: 135: Set_Bost_Pwm_Duty(0);
  3677  09E8  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3678  09E9  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3679  09EA  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3680                           
  3681                           ;key.c: 137: Disable_Bost_Pwm();
  3682  09EC  2362  3188         	fcall	_Disable_Bost_Pwm
  3683                           
  3684                           ;key.c: 138: (LATCbits.LATC3 = 0x00);
  3685                           
  3686                           ;key.c: 139: Set_Bost_Pwm_Duty(0);
  3687  09EE  263F  3188         	fcall	PL104	;call to abstracted procedure
  3688  09F0  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3689                           
  3690                           ;key.c: 141: pv_voltage_status=0x00;
  3691  09F2  0022               	movlb	2	; select bank2
  3692                           
  3693                           ;key.c: 143: day_time_count=0x00;
  3694                           
  3695                           ;key.c: 145: night_time_count=0x00;
  3696                           
  3697                           ;key.c: 147: pv_time_count=0x00;
  3698  09F3  2625  3188         	fcall	PL64	;call to abstracted procedure
  3699  09F5  2A12               	goto	l17100
  3700  09F6                     l17002:	
  3701                           
  3702                           ;key.c: 152: if(device_status==0x01)
  3703  09F6  0020               	movlb	0	; select bank0
  3704  09F7  0B6A               	decfsz	_device_status,w
  3705  09F8  2A12               	goto	l17100
  3706                           
  3707                           ;key.c: 153: {
  3708                           ;key.c: 154: light_mode =0x01;
  3709  09F9  0021               	movlb	1	; select bank1
  3710  09FA  01D7               	clrf	_light_mode^(0+128)
  3711  09FB  0AD7               	incf	_light_mode^(0+128),f
  3712  09FC  29C2               	goto	L2
  3713  09FD                     l17044:	
  3714                           ;key.c: 187: pv_voltage_status=0x00;
  3715                           
  3716                           ;key.c: 185: Set_Bost_Pwm_Duty(0);
  3717                           
  3718                           ;key.c: 184: (LATCbits.LATC3 = 0x00);
  3719                           
  3720                           ;key.c: 183: Disable_Bost_Pwm();
  3721                           
  3722                           ;key.c: 181: Set_Bost_Pwm_Duty(0);
  3723                           
  3724                           ;key.c: 179: delay_ms(1000);
  3725                           
  3726                           ;key.c: 177: Set_Bost_Pwm_Duty(200);
  3727                           
  3728                           ;key.c: 175: Enable_Bost_Pwm();
  3729                           
  3730                           ;key.c: 173: (LATCbits.LATC3 = 0x01);
  3731                           
  3732                           ;key.c: 170: Set_Bost_Pwm_Duty(0);
  3733                           
  3734                           ;key.c: 169: (LATCbits.LATC3 = 0x00);
  3735                           
  3736                           ;key.c: 168: Disable_Bost_Pwm();
  3737                           
  3738                           ;key.c: 167: Set_Buck_Pwm_Duty(0);
  3739                           
  3740                           ;key.c: 166: Disable_Buck_Pwm();
  3741                           
  3742                           ;key.c: 164: charge_index=0x00;
  3743                           
  3744                           ;key.c: 163: discharge_index=0x00;
  3745                           
  3746                           ;key.c: 162: nop_index=0x00;
  3747                           
  3748                           ;key.c: 160: lr_cnt = 0x00;
  3749                           
  3750                           ;key.c: 157: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3751                           
  3752                           ;key.c: 156: led_out_ctrl=0x00;
  3753                           
  3754                           ;key.c: 155: eeprom_write(0x36,(unsigned char)(light_mode));
  3755                           
  3756                           
  3757                           ;key.c: 198: if(device_status==0x01)
  3758  09FD  0020               	movlb	0	; select bank0
  3759  09FE  0B6A               	decfsz	_device_status,w
  3760  09FF  2A12               	goto	l17100
  3761                           
  3762                           ;key.c: 199: {
  3763                           ;key.c: 200: light_mode =0x02;
  3764  0A00  3002               	movlw	2
  3765  0A01  0021               	movlb	1	; select bank1
  3766  0A02  00D7               	movwf	_light_mode^(0+128)
  3767  0A03  29C2               	goto	L2
  3768  0A04                     l17098:	
  3769                           ;key.c: 229: Set_Bost_Pwm_Duty(0);
  3770                           
  3771                           ;key.c: 227: delay_ms(1000);
  3772                           
  3773                           ;key.c: 225: Set_Bost_Pwm_Duty(200);
  3774                           
  3775                           ;key.c: 223: Enable_Bost_Pwm();
  3776                           
  3777                           ;key.c: 221: (LATCbits.LATC3 = 0x01);
  3778                           
  3779                           ;key.c: 218: Set_Bost_Pwm_Duty(0);
  3780                           
  3781                           ;key.c: 217: (LATCbits.LATC3 = 0x00);
  3782                           
  3783                           ;key.c: 216: Disable_Bost_Pwm();
  3784                           
  3785                           ;key.c: 215: Set_Buck_Pwm_Duty(0);
  3786                           
  3787                           ;key.c: 214: Disable_Buck_Pwm();
  3788                           
  3789                           ;key.c: 212: charge_index=0x00;
  3790                           
  3791                           ;key.c: 211: discharge_index=0x00;
  3792                           
  3793                           ;key.c: 210: nop_index=0x00;
  3794                           
  3795                           ;key.c: 208: lr_cnt = 0x00;
  3796                           
  3797                           ;key.c: 204: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3798                           
  3799                           ;key.c: 203: led_out_ctrl=0x00;
  3800                           
  3801                           ;key.c: 201: eeprom_write(0x36,(unsigned char)(light_mode));
  3802                           
  3803  0A04  086B               	movf	_KEY_VALUE^(0+128),w
  3804                           
  3805                           ; Switch size 1, requested type "space"
  3806                           ; Number of cases is 4, Range of values is 1 to 4
  3807                           ; switch strategies available:
  3808                           ; Name         Instructions Cycles
  3809                           ; simple_byte           13     7 (average)
  3810                           ; direct_byte           17     9 (fixed)
  3811                           ; jumptable            263     9 (fixed)
  3812                           ;	Chosen strategy is simple_byte
  3813  0A05  3A01               	xorlw	1	; case 1
  3814  0A06  1903               	skipnz
  3815  0A07  29B9               	goto	l649
  3816  0A08  3A03               	xorlw	3	; case 2
  3817  0A09  1903               	skipnz
  3818  0A0A  29FD               	goto	l17044
  3819  0A0B  3A01               	xorlw	1	; case 3
  3820  0A0C  1903               	skipnz
  3821  0A0D  29BD               	goto	l16960
  3822  0A0E  3A07               	xorlw	7	; case 4
  3823  0A0F  1903               	skipnz
  3824  0A10  29F6               	goto	l17002
  3825  0A11  2A12               	goto	l17100
  3826  0A12                     l17100:	
  3827                           
  3828                           ;key.c: 248: KEY_VALUE=KNOP;
  3829  0A12  3010               	movlw	16
  3830  0A13  0021               	movlb	1	; select bank1
  3831  0A14  00EB               	movwf	_KEY_VALUE^(0+128)
  3832  0A15                     l646:	
  3833                           
  3834                           ;key.c: 250: }
  3835                           ;key.c: 252: }
  3836                           ;key.c: 254: if((KEY_VALUE ==K1)&&(KEY_STATE == KEY_DOWN)&&(key1_index==0x00))
  3837  0A15  0021               	movlb	1	; select bank1
  3838  0A16  0B6B               	decfsz	_KEY_VALUE^(0+128),w
  3839  0A17  2A7F               	goto	l17184
  3840  0A18  0022               	movlb	2	; select bank2
  3841  0A19  0B26               	decfsz	_KEY_STATE^(0+256),w
  3842  0A1A  2A7F               	goto	l17184
  3843  0A1B  0023               	movlb	3	; select bank3
  3844  0A1C  08C1               	movf	_key1_index^(0+384),f
  3845  0A1D  1D03               	skipz
  3846  0A1E  2A7F               	goto	l17184
  3847                           
  3848                           ;key.c: 255: {
  3849                           ;key.c: 256: if(key1_time_count<80)
  3850  0A1F  3050               	movlw	80
  3851  0A20  0022               	movlb	2	; select bank2
  3852  0A21  0235               	subwf	_key1_time_count^(0+256),w
  3853  0A22  1803               	skipnc
  3854  0A23  2A26               	goto	l17110
  3855                           
  3856                           ;key.c: 257: {
  3857                           ;key.c: 258: key1_time_count++;
  3858  0A24  0AB5               	incf	_key1_time_count^(0+256),f
  3859                           
  3860                           ;key.c: 260: }
  3861  0A25  2A81               	goto	l17186
  3862  0A26                     l17110:	
  3863  0A26  3001               	movlw	1
  3864                           
  3865                           ;key.c: 261: else
  3866                           ;key.c: 262: {
  3867                           ;key.c: 263: key1_time_count=0x00;
  3868  0A27  01B5               	clrf	_key1_time_count^(0+256)
  3869                           
  3870                           ;key.c: 265: device_status^=0x01;
  3871  0A28  0020               	movlb	0	; select bank0
  3872  0A29  06EA               	xorwf	_device_status,f
  3873                           
  3874                           ;key.c: 267: eeprom_write(0x38,(unsigned char)(device_status));
  3875  0A2A  086A               	movf	_device_status,w
  3876  0A2B  00E4               	movwf	eeprom_write@value
  3877  0A2C  3038               	movlw	56
  3878  0A2D  2367  3188         	fcall	_eeprom_write
  3879                           
  3880                           ;key.c: 269: key1_index=0x01;
  3881  0A2F  01C1               	clrf	_key1_index^(0+384)
  3882  0A30  0AC1               	incf	_key1_index^(0+384),f
  3883                           
  3884                           ;key.c: 271: if(device_status==0x00)
  3885  0A31  0020               	movlb	0	; select bank0
  3886  0A32  08EA               	movf	_device_status,f
  3887  0A33  1D03               	skipz
  3888  0A34  2A3E               	goto	l17132
  3889                           
  3890                           ;key.c: 274: lr_cnt = 0x00;
  3891  0A35  3004               	movlw	4
  3892  0A36  0021               	movlb	1	; select bank1
  3893  0A37  00DA               	movwf	_work_mode^(0+128)
  3894                           
  3895                           ;key.c: 276: nop_index=0x00;
  3896  0A38  0022               	movlb	2	; select bank2
  3897                           
  3898                           ;key.c: 277: discharge_index=0x00;
  3899                           
  3900                           ;key.c: 278: charge_index=0x00;
  3901                           
  3902                           ;key.c: 280: led_out_ctrl=0x00;
  3903                           
  3904                           ;key.c: 281: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3905  0A39  2636  3188         	fcall	PL88	;call to abstracted procedure
  3906  0A3B  2367  3188         	fcall	_eeprom_write
  3907                           
  3908                           ;key.c: 282: }
  3909  0A3D  2A81               	goto	l17186
  3910  0A3E                     l17132:	
  3911                           
  3912                           ;key.c: 283: else
  3913                           ;key.c: 284: {
  3914                           ;key.c: 285: work_mode =0x00;
  3915  0A3E  0021               	movlb	1	; select bank1
  3916  0A3F  01DA               	clrf	_work_mode^(0+128)
  3917                           
  3918                           ;key.c: 288: open_sleep_time=0x00;
  3919  0A40  0022               	movlb	2	; select bank2
  3920  0A41  01BF               	clrf	_open_sleep_time^(0+256)
  3921                           
  3922                           ;key.c: 290: lr_cnt = 0x00;
  3923  0A42  0023               	movlb	3	; select bank3
  3924  0A43  01BC               	clrf	_sleep_time_count^(0+384)
  3925  0A44  01BD               	clrf	(_sleep_time_count+1)^(0+384)
  3926                           
  3927                           ;key.c: 292: nop_index=0x00;
  3928  0A45  0022               	movlb	2	; select bank2
  3929                           
  3930                           ;key.c: 293: discharge_index=0x00;
  3931                           
  3932                           ;key.c: 294: charge_index=0x00;
  3933                           
  3934                           ;key.c: 296: led_out_ctrl=0x00;
  3935                           
  3936                           ;key.c: 297: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  3937  0A46  2636  3188         	fcall	PL88	;call to abstracted procedure
  3938  0A48  2367  3188         	fcall	_eeprom_write
  3939                           
  3940                           ;key.c: 299: Disable_Buck_Pwm();
  3941  0A4A  25A1  3188         	fcall	_Disable_Buck_Pwm
  3942                           
  3943                           ;key.c: 300: Set_Buck_Pwm_Duty(0);
  3944  0A4C  0020               	movlb	0	; select bank0
  3945  0A4D  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  3946  0A4E  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  3947  0A4F  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  3948                           
  3949                           ;key.c: 301: Disable_Bost_Pwm();
  3950  0A51  2362  3188         	fcall	_Disable_Bost_Pwm
  3951                           
  3952                           ;key.c: 302: (LATCbits.LATC3 = 0x00);
  3953                           
  3954                           ;key.c: 303: Set_Bost_Pwm_Duty(0);
  3955  0A53  263F  3188         	fcall	PL104	;call to abstracted procedure
  3956  0A55  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3957                           
  3958                           ;key.c: 305: (LATCbits.LATC3 = 0x01);
  3959  0A57  0022               	movlb	2	; select bank2
  3960  0A58  158E               	bsf	14,3	;volatile
  3961                           
  3962                           ;key.c: 306: Enable_Bost_Pwm();
  3963  0A59  25D2  3188         	fcall	_Enable_Bost_Pwm
  3964                           
  3965                           ;key.c: 307: Set_Bost_Pwm_Duty(200);
  3966  0A5B  2666  3188         	fcall	PL240	;call to abstracted procedure
  3967  0A5D  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3968                           
  3969                           ;key.c: 309: delay_ms(1000);
  3970  0A5F  265B  3188         	fcall	PL202	;call to abstracted procedure
  3971  0A61  233D  3188         	fcall	_delay_ms
  3972                           
  3973                           ;key.c: 311: Set_Bost_Pwm_Duty(0);
  3974  0A63  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  3975  0A64  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  3976  0A65  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3977                           
  3978                           ;key.c: 313: Disable_Bost_Pwm();
  3979  0A67  2362  3188         	fcall	_Disable_Bost_Pwm
  3980                           
  3981                           ;key.c: 314: (LATCbits.LATC3 = 0x00);
  3982                           
  3983                           ;key.c: 315: Set_Bost_Pwm_Duty(0);
  3984  0A69  263F  3188         	fcall	PL104	;call to abstracted procedure
  3985  0A6B  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  3986                           
  3987                           ;key.c: 317: open_an0_time=0x01;
  3988  0A6D  0022               	movlb	2	; select bank2
  3989  0A6E  01B7               	clrf	_open_an0_time^(0+256)
  3990  0A6F  0AB7               	incf	_open_an0_time^(0+256),f
  3991                           
  3992                           ;key.c: 319: open_an1_time=0x01;
  3993  0A70  01B9               	clrf	_open_an1_time^(0+256)
  3994  0A71  0AB9               	incf	_open_an1_time^(0+256),f
  3995                           
  3996                           ;key.c: 321: open_an2_time=0x01;
  3997  0A72  01BA               	clrf	_open_an2_time^(0+256)
  3998  0A73  0ABA               	incf	_open_an2_time^(0+256),f
  3999                           
  4000                           ;key.c: 323: open_an3_time=0x01;
  4001  0A74  01BB               	clrf	_open_an3_time^(0+256)
  4002  0A75  0ABB               	incf	_open_an3_time^(0+256),f
  4003                           
  4004                           ;key.c: 325: open_an4_time=0x01;
  4005  0A76  01BC               	clrf	_open_an4_time^(0+256)
  4006  0A77  0ABC               	incf	_open_an4_time^(0+256),f
  4007                           
  4008                           ;key.c: 327: open_an9_time=0x01;
  4009  0A78  01BD               	clrf	_open_an9_time^(0+256)
  4010  0A79  0ABD               	incf	_open_an9_time^(0+256),f
  4011                           
  4012                           ;key.c: 329: open_an10_time=0x01;
  4013  0A7A  01B8               	clrf	_open_an10_time^(0+256)
  4014  0A7B  0AB8               	incf	_open_an10_time^(0+256),f
  4015                           
  4016                           ;key.c: 331: pv_voltage_status=0x00;
  4017                           
  4018                           ;key.c: 333: day_time_count=0x00;
  4019                           
  4020                           ;key.c: 335: night_time_count=0x00;
  4021                           
  4022                           ;key.c: 337: pv_time_count=0x00;
  4023  0A7C  2625  3188         	fcall	PL64	;call to abstracted procedure
  4024  0A7E  2A81               	goto	l17186
  4025  0A7F                     l17184:	
  4026                           
  4027                           ;key.c: 342: else
  4028                           ;key.c: 343: {
  4029                           ;key.c: 344: key1_time_count=0x00;
  4030  0A7F  0022               	movlb	2	; select bank2
  4031  0A80  01B5               	clrf	_key1_time_count^(0+256)
  4032  0A81                     l17186:	
  4033                           
  4034                           ;key.c: 345: }
  4035                           ;key.c: 347: if(RC1)
  4036  0A81  0020               	movlb	0	; select bank0
  4037  0A82  1C8E               	btfss	14,1	;volatile
  4038  0A83  0008               	return
  4039                           
  4040                           ;key.c: 348: {
  4041                           ;key.c: 350: have_person1_time_count=0x00;
  4042  0A84  0022               	movlb	2	; select bank2
  4043  0A85  01B1               	clrf	_have_person1_time_count^(0+256)
  4044                           
  4045                           ;key.c: 352: have_person1_flag=0x01;
  4046  0A86  0021               	movlb	1	; select bank1
  4047  0A87  01D5               	clrf	_have_person1_flag^(0+128)
  4048  0A88  0AD5               	incf	_have_person1_flag^(0+128),f
  4049  0A89  0008               	return
  4050  0A8A                     __end_of_scan_key_value:	
  4051  0A8A                     __ptext38:	
  4052 ;; *************** function _Key_Menu *****************
  4053 ;; Defined at:
  4054 ;;		line 598 in file "D:\MCUProject\ZH-SL-H40\src\ird_remote.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  key_value       4    0[BANK1 ] unsigned long 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  remote_mac      2    0        unsigned int 
  4059 ;;  code            1   70[BANK0 ] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;		None               void
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 1F/1
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        5 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    3
  4076 ;; This function calls:
  4077 ;;		_Disable_Bost_Pwm
  4078 ;;		_Disable_Buck_Pwm
  4079 ;;		_Enable_Bost_Pwm
  4080 ;;		_Set_Bost_Pwm_Duty
  4081 ;;		_Set_Buck_Pwm_Duty
  4082 ;;		_delay_ms
  4083 ;;		_eeprom_write
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _Key_Menu
  4091  0A8A                     _Key_Menu:	
  4092                           
  4093                           ;ird_remote.c: 608: remote_mac=key_value>>16;
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _Key_Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4097  0A8A  0821               	movf	(Key_Menu@key_value^(0+128)+1),w
  4098  0A8B  0020               	movlb	0	; select bank0
  4099  0A8C  00E6               	movwf	Key_Menu@code
  4100                           
  4101                           ;ird_remote.c: 616: switch(code)
  4102  0A8D  2B2B               	goto	l16908
  4103  0A8E                     l528:	
  4104                           ;ird_remote.c: 617: {
  4105                           ;ird_remote.c: 618: case 0x00:
  4106                           
  4107                           
  4108                           ;ird_remote.c: 619: __nop();
  4109  0A8E  0000               	nop
  4110                           
  4111                           ;ird_remote.c: 620: break;
  4112  0A8F  0008               	return
  4113  0A90                     l16670:	
  4114                           
  4115                           ;ird_remote.c: 622: if(device_status==0x01)
  4116  0A90  0B6A               	decfsz	_device_status,w
  4117  0A91  0008               	return
  4118                           
  4119                           ;ird_remote.c: 623: {
  4120                           ;ird_remote.c: 624: light_mode =0x00;
  4121  0A92  0021               	movlb	1	; select bank1
  4122  0A93  01D7               	clrf	_light_mode^(0+128)
  4123  0A94                     L60:	
  4124                           
  4125                           ;ird_remote.c: 625: eeprom_write(0x36,(unsigned char)(light_mode));
  4126  0A94  2670  3188         	fcall	PL270	;call to abstracted procedure
  4127  0A96  2367  3188         	fcall	_eeprom_write
  4128                           
  4129                           ;ird_remote.c: 626: led_out_ctrl=0x00;
  4130  0A98  0021               	movlb	1	; select bank1
  4131                           
  4132                           ;ird_remote.c: 627: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  4133  0A99  264B  3188         	fcall	PL174	;call to abstracted procedure
  4134  0A9B  2367  3188         	fcall	_eeprom_write
  4135  0A9D                     L64:	
  4136                           
  4137                           ;ird_remote.c: 630: lr_cnt = 0x00;
  4138  0A9D  0021               	movlb	1	; select bank1
  4139  0A9E  01DA               	clrf	_work_mode^(0+128)
  4140                           
  4141                           ;ird_remote.c: 632: nop_index=0x00;
  4142                           
  4143                           ;ird_remote.c: 633: discharge_index=0x00;
  4144                           
  4145                           ;ird_remote.c: 634: charge_index=0x00;
  4146  0A9F  2645  3188         	fcall	PL166	;call to abstracted procedure
  4147                           
  4148                           ;ird_remote.c: 636: Disable_Buck_Pwm();
  4149  0AA1  25A1  3188         	fcall	_Disable_Buck_Pwm
  4150                           
  4151                           ;ird_remote.c: 637: Set_Buck_Pwm_Duty(0);
  4152  0AA3  0020               	movlb	0	; select bank0
  4153  0AA4  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  4154  0AA5  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  4155  0AA6  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  4156                           
  4157                           ;ird_remote.c: 638: Disable_Bost_Pwm();
  4158  0AA8  2362  3188         	fcall	_Disable_Bost_Pwm
  4159                           
  4160                           ;ird_remote.c: 639: (LATCbits.LATC3 = 0x00);
  4161                           
  4162                           ;ird_remote.c: 640: Set_Bost_Pwm_Duty(0);
  4163  0AAA  263F  3188         	fcall	PL104	;call to abstracted procedure
  4164  0AAC  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4165                           
  4166                           ;ird_remote.c: 643: (LATCbits.LATC3 = 0x01);
  4167  0AAE  0022               	movlb	2	; select bank2
  4168  0AAF  158E               	bsf	14,3	;volatile
  4169                           
  4170                           ;ird_remote.c: 645: Enable_Bost_Pwm();
  4171  0AB0  25D2  3188         	fcall	_Enable_Bost_Pwm
  4172                           
  4173                           ;ird_remote.c: 647: Set_Bost_Pwm_Duty(200);
  4174  0AB2  2666  3188         	fcall	PL240	;call to abstracted procedure
  4175  0AB4  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4176                           
  4177                           ;ird_remote.c: 649: delay_ms(1000);
  4178  0AB6  265B  3188         	fcall	PL202	;call to abstracted procedure
  4179  0AB8                     L63:	
  4180  0AB8  233D  3188         	fcall	_delay_ms
  4181                           
  4182                           ;ird_remote.c: 651: Set_Bost_Pwm_Duty(0);
  4183  0ABA  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  4184  0ABB  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4185  0ABC  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4186                           
  4187                           ;ird_remote.c: 653: Disable_Bost_Pwm();
  4188  0ABE  2362  3188         	fcall	_Disable_Bost_Pwm
  4189                           
  4190                           ;ird_remote.c: 654: (LATCbits.LATC3 = 0x00);
  4191                           
  4192                           ;ird_remote.c: 655: Set_Bost_Pwm_Duty(0);
  4193  0AC0  263F  3188         	fcall	PL104	;call to abstracted procedure
  4194  0AC2  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4195                           
  4196                           ;ird_remote.c: 657: pv_voltage_status=0x00;
  4197  0AC4  0022               	movlb	2	; select bank2
  4198                           
  4199                           ;ird_remote.c: 659: day_time_count=0x00;
  4200                           
  4201                           ;ird_remote.c: 661: night_time_count=0x00;
  4202                           
  4203                           ;ird_remote.c: 663: pv_time_count=0x00;
  4204  0AC5  2625               	fcall	PL64	;call to abstracted procedure
  4205  0AC6  0008               	return
  4206  0AC7                     l16712:	
  4207                           
  4208                           ;ird_remote.c: 667: if(device_status==0x01)
  4209  0AC7  0B6A               	decfsz	_device_status,w
  4210  0AC8  0008               	return
  4211                           
  4212                           ;ird_remote.c: 668: {
  4213                           ;ird_remote.c: 669: light_mode =0x01;
  4214  0AC9  0021               	movlb	1	; select bank1
  4215  0ACA  01D7               	clrf	_light_mode^(0+128)
  4216  0ACB  0AD7               	incf	_light_mode^(0+128),f
  4217  0ACC  2A94               	goto	L60
  4218  0ACD                     l16754:	
  4219                           ;ird_remote.c: 702: pv_voltage_status=0x00;
  4220                           
  4221                           ;ird_remote.c: 700: Set_Bost_Pwm_Duty(0);
  4222                           
  4223                           ;ird_remote.c: 699: (LATCbits.LATC3 = 0x00);
  4224                           
  4225                           ;ird_remote.c: 698: Disable_Bost_Pwm();
  4226                           
  4227                           ;ird_remote.c: 696: Set_Bost_Pwm_Duty(0);
  4228                           
  4229                           ;ird_remote.c: 694: delay_ms(1000);
  4230                           
  4231                           ;ird_remote.c: 692: Set_Bost_Pwm_Duty(200);
  4232                           
  4233                           ;ird_remote.c: 690: Enable_Bost_Pwm();
  4234                           
  4235                           ;ird_remote.c: 688: (LATCbits.LATC3 = 0x01);
  4236                           
  4237                           ;ird_remote.c: 685: Set_Bost_Pwm_Duty(0);
  4238                           
  4239                           ;ird_remote.c: 684: (LATCbits.LATC3 = 0x00);
  4240                           
  4241                           ;ird_remote.c: 683: Disable_Bost_Pwm();
  4242                           
  4243                           ;ird_remote.c: 682: Set_Buck_Pwm_Duty(0);
  4244                           
  4245                           ;ird_remote.c: 681: Disable_Buck_Pwm();
  4246                           
  4247                           ;ird_remote.c: 679: charge_index=0x00;
  4248                           
  4249                           ;ird_remote.c: 678: discharge_index=0x00;
  4250                           
  4251                           ;ird_remote.c: 677: nop_index=0x00;
  4252                           
  4253                           ;ird_remote.c: 675: lr_cnt = 0x00;
  4254                           
  4255                           ;ird_remote.c: 672: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  4256                           
  4257                           ;ird_remote.c: 671: led_out_ctrl=0x00;
  4258                           
  4259                           ;ird_remote.c: 670: eeprom_write(0x36,(unsigned char)(light_mode));
  4260                           
  4261                           
  4262                           ;ird_remote.c: 712: if(device_status==0x01)
  4263  0ACD  0B6A               	decfsz	_device_status,w
  4264  0ACE  0008               	return
  4265                           
  4266                           ;ird_remote.c: 713: {
  4267                           ;ird_remote.c: 714: light_mode =0x02;
  4268  0ACF  3002               	movlw	2
  4269  0AD0  0021               	movlb	1	; select bank1
  4270  0AD1  00D7               	movwf	_light_mode^(0+128)
  4271  0AD2  2A94               	goto	L60
  4272  0AD3                     l16806:	
  4273                           ;ird_remote.c: 741: Set_Bost_Pwm_Duty(0);
  4274                           
  4275                           ;ird_remote.c: 739: delay_ms(1000);
  4276                           
  4277                           ;ird_remote.c: 737: Set_Bost_Pwm_Duty(200);
  4278                           
  4279                           ;ird_remote.c: 735: Enable_Bost_Pwm();
  4280                           
  4281                           ;ird_remote.c: 733: (LATCbits.LATC3 = 0x01);
  4282                           
  4283                           ;ird_remote.c: 730: Set_Bost_Pwm_Duty(0);
  4284                           
  4285                           ;ird_remote.c: 729: (LATCbits.LATC3 = 0x00);
  4286                           
  4287                           ;ird_remote.c: 728: Disable_Bost_Pwm();
  4288                           
  4289                           ;ird_remote.c: 727: Set_Buck_Pwm_Duty(0);
  4290                           
  4291                           ;ird_remote.c: 726: Disable_Buck_Pwm();
  4292                           
  4293                           ;ird_remote.c: 724: charge_index=0x00;
  4294                           
  4295                           ;ird_remote.c: 723: discharge_index=0x00;
  4296                           
  4297                           ;ird_remote.c: 722: nop_index=0x00;
  4298                           
  4299                           ;ird_remote.c: 720: lr_cnt = 0x00;
  4300                           
  4301                           ;ird_remote.c: 717: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  4302                           
  4303                           ;ird_remote.c: 716: led_out_ctrl=0x00;
  4304                           
  4305                           ;ird_remote.c: 715: eeprom_write(0x36,(unsigned char)(light_mode));
  4306                           
  4307                           
  4308                           ;ird_remote.c: 757: if(device_status==0x01)
  4309  0AD3  0B6A               	decfsz	_device_status,w
  4310  0AD4  2ADF               	goto	l16814
  4311                           
  4312                           ;ird_remote.c: 758: {
  4313                           ;ird_remote.c: 759: led_out_ctrl=led_out_ctrl+1;
  4314  0AD5  0021               	movlb	1	; select bank1
  4315  0AD6  3001               	movlw	1
  4316  0AD7  0AD6               	incf	_led_out_ctrl^(0+128),f
  4317                           
  4318                           ;ird_remote.c: 761: led_out_ctrl=led_out_ctrl%2;
  4319  0AD8  05D6               	andwf	_led_out_ctrl^(0+128),f
  4320                           
  4321                           ;ird_remote.c: 763: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  4322  0AD9  0856               	movf	_led_out_ctrl^(0+128),w
  4323  0ADA  0020               	movlb	0	; select bank0
  4324  0ADB  00E4               	movwf	eeprom_write@value
  4325  0ADC  3039               	movlw	57
  4326  0ADD  2367  3188         	fcall	_eeprom_write
  4327  0ADF                     l16814:	
  4328                           
  4329                           ;ird_remote.c: 764: }
  4330                           ;ird_remote.c: 765: if(led_out_ctrl==0x00 && device_status==0x01)
  4331  0ADF  0021               	movlb	1	; select bank1
  4332  0AE0  08D6               	movf	_led_out_ctrl^(0+128),f
  4333  0AE1  1D03               	skipz
  4334  0AE2  2AE7               	goto	l16852
  4335  0AE3  0020               	movlb	0	; select bank0
  4336  0AE4  0B6A               	decfsz	_device_status,w
  4337  0AE5  2AE7               	goto	l16852
  4338  0AE6  2A9D               	goto	L64
  4339  0AE7                     l16852:	
  4340                           ;ird_remote.c: 773: charge_index=0x00;
  4341                           
  4342                           ;ird_remote.c: 772: discharge_index=0x00;
  4343                           
  4344                           ;ird_remote.c: 771: nop_index=0x00;
  4345                           
  4346                           ;ird_remote.c: 769: lr_cnt = 0x00;
  4347                           
  4348                           
  4349                           ;ird_remote.c: 804: else if(led_out_ctrl==0x01 && device_status==0x01)
  4350  0AE7  0021               	movlb	1	; select bank1
  4351  0AE8  0B56               	decfsz	_led_out_ctrl^(0+128),w
  4352  0AE9  0008               	return
  4353  0AEA  0020               	movlb	0	; select bank0
  4354  0AEB  0B6A               	decfsz	_device_status,w
  4355  0AEC  0008               	return
  4356                           
  4357                           ;ird_remote.c: 808: lr_cnt = 0x00;
  4358  0AED  0021               	movlb	1	; select bank1
  4359  0AEE  01DA               	clrf	_work_mode^(0+128)
  4360                           
  4361                           ;ird_remote.c: 810: nop_index=0x00;
  4362                           
  4363                           ;ird_remote.c: 811: discharge_index=0x00;
  4364                           
  4365                           ;ird_remote.c: 812: charge_index=0x00;
  4366  0AEF  2645  3188         	fcall	PL166	;call to abstracted procedure
  4367                           
  4368                           ;ird_remote.c: 814: Disable_Buck_Pwm();
  4369  0AF1  25A1  3188         	fcall	_Disable_Buck_Pwm
  4370                           
  4371                           ;ird_remote.c: 815: Set_Buck_Pwm_Duty(0);
  4372  0AF3  0020               	movlb	0	; select bank0
  4373  0AF4  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  4374  0AF5  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  4375  0AF6  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  4376                           
  4377                           ;ird_remote.c: 817: Disable_Bost_Pwm();
  4378  0AF8  2362  3188         	fcall	_Disable_Bost_Pwm
  4379                           
  4380                           ;ird_remote.c: 818: (LATCbits.LATC3 = 0x00);
  4381                           
  4382                           ;ird_remote.c: 819: Set_Bost_Pwm_Duty(0);
  4383  0AFA  263F  3188         	fcall	PL104	;call to abstracted procedure
  4384  0AFC  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4385                           
  4386                           ;ird_remote.c: 822: (LATCbits.LATC3 = 0x01);
  4387  0AFE  0022               	movlb	2	; select bank2
  4388  0AFF  158E               	bsf	14,3	;volatile
  4389                           
  4390                           ;ird_remote.c: 823: Enable_Bost_Pwm();
  4391  0B00  25D2  3188         	fcall	_Enable_Bost_Pwm
  4392                           
  4393                           ;ird_remote.c: 826: Set_Bost_Pwm_Duty(200);
  4394  0B02  2666  3188         	fcall	PL240	;call to abstracted procedure
  4395  0B04  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4396                           
  4397                           ;ird_remote.c: 828: delay_ms(200);
  4398  0B06  2661  3188         	fcall	PL204	;call to abstracted procedure
  4399  0B08  233D  3188         	fcall	_delay_ms
  4400                           
  4401                           ;ird_remote.c: 830: Set_Bost_Pwm_Duty(0);
  4402  0B0A  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  4403  0B0B  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4404  0B0C  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4405                           
  4406                           ;ird_remote.c: 832: delay_ms(200);
  4407  0B0E  2661  3188         	fcall	PL204	;call to abstracted procedure
  4408  0B10  233D  3188         	fcall	_delay_ms
  4409                           
  4410                           ;ird_remote.c: 834: Set_Bost_Pwm_Duty(200);
  4411  0B12  30C8               	movlw	200
  4412  0B13  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  4413  0B14  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4414  0B15  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4415                           
  4416                           ;ird_remote.c: 836: delay_ms(200);
  4417  0B17  2661  3188         	fcall	PL204	;call to abstracted procedure
  4418  0B19  233D  3188         	fcall	_delay_ms
  4419                           
  4420                           ;ird_remote.c: 838: Set_Bost_Pwm_Duty(0);
  4421  0B1B  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  4422  0B1C  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4423  0B1D  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4424                           
  4425                           ;ird_remote.c: 840: delay_ms(200);
  4426  0B1F  2661  3188         	fcall	PL204	;call to abstracted procedure
  4427  0B21  233D  3188         	fcall	_delay_ms
  4428                           
  4429                           ;ird_remote.c: 842: Set_Bost_Pwm_Duty(200);
  4430  0B23  30C8               	movlw	200
  4431  0B24  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  4432  0B25  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4433  0B26  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4434                           
  4435                           ;ird_remote.c: 844: delay_ms(200);
  4436  0B28  2661  3188         	fcall	PL204	;call to abstracted procedure
  4437  0B2A  2AB8               	goto	L63
  4438  0B2B                     l16908:	
  4439  0B2B  0866               	movf	Key_Menu@code,w
  4440                           
  4441                           ; Switch size 1, requested type "space"
  4442                           ; Number of cases is 5, Range of values is 0 to 136
  4443                           ; switch strategies available:
  4444                           ; Name         Instructions Cycles
  4445                           ; simple_byte           16     9 (average)
  4446                           ; jumptable            260     6 (fixed)
  4447                           ;	Chosen strategy is simple_byte
  4448  0B2C  3A00               	xorlw	0	; case 0
  4449  0B2D  1903               	skipnz
  4450  0B2E  2A8E               	goto	l528
  4451  0B2F  3A10               	xorlw	16	; case 16
  4452  0B30  1903               	skipnz
  4453  0B31  2AC7               	goto	l16712
  4454  0B32  3A50               	xorlw	80	; case 64
  4455  0B33  1903               	skipnz
  4456  0B34  2A90               	goto	l16670
  4457  0B35  3A10               	xorlw	16	; case 80
  4458  0B36  1903               	skipnz
  4459  0B37  2ACD               	goto	l16754
  4460  0B38  3AD8               	xorlw	216	; case 136
  4461  0B39  1903               	skipnz
  4462  0B3A  2AD3               	goto	l16806
  4463  0B3B  2B3C               	goto	l542
  4464  0B3C                     l542:	
  4465  0B3C  0008               	return
  4466  0B3D                     __end_of_Key_Menu:	
  4467  0B3D                     __ptext40:	
  4468 ;; *************** function _delay_ms *****************
  4469 ;; Defined at:
  4470 ;;		line 64 in file "D:\MCUProject\ZH-SL-H40\src\delay.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  count           2    3[BANK0 ] unsigned short 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  j               2    7[BANK0 ] unsigned short 
  4475 ;;  i               2    5[BANK0 ] unsigned short 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 1F/0
  4482 ;;		On exit  : 1F/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        6 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    2
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_auto_system
  4496 ;;		_Key_Menu
  4497 ;;		_scan_key_value
  4498 ;;		_handle_ad_loop
  4499 ;;		_handle_task_process
  4500 ;;		_handle_uart_rx_buf
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           
  4505                           ;psect for function _delay_ms
  4506  0B3D                     _delay_ms:	
  4507                           
  4508                           ;delay.c: 66: WORD i, j;
  4509                           ;delay.c: 68: for (i = 0; i < count; i++)
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4513  0B3D  01A5               	clrf	delay_ms@i
  4514  0B3E  01A6               	clrf	delay_ms@i+1
  4515  0B3F                     l16422:	
  4516  0B3F  0824               	movf	delay_ms@count+1,w
  4517  0B40  0226               	subwf	delay_ms@i+1,w
  4518  0B41  1D03               	skipz
  4519  0B42  2B45               	goto	u8795
  4520  0B43  0823               	movf	delay_ms@count,w
  4521  0B44  0225               	subwf	delay_ms@i,w
  4522  0B45                     u8795:	
  4523  0B45  1803               	btfsc	3,0
  4524  0B46  0008               	return
  4525                           
  4526                           ;delay.c: 69: {
  4527                           ;delay.c: 70: for (j = 0; j < 1000; j++)
  4528  0B47  01A7               	clrf	delay_ms@j
  4529  0B48  01A8               	clrf	delay_ms@j+1
  4530  0B49                     l43:	
  4531                           
  4532                           ;delay.c: 71: {
  4533                           ;delay.c: 72: __nop();
  4534  0B49  0000               	nop
  4535                           
  4536                           ;delay.c: 73: __nop();
  4537  0B4A  0000               	nop
  4538                           
  4539                           ;delay.c: 74: __nop();
  4540  0B4B  0000               	nop
  4541                           
  4542                           ;delay.c: 75: __nop();
  4543  0B4C  0000               	nop
  4544                           
  4545                           ;delay.c: 76: __nop();
  4546  0B4D  0000               	nop
  4547                           
  4548                           ;delay.c: 77: __nop();
  4549  0B4E  0000               	nop
  4550                           
  4551                           ;delay.c: 78: __nop();
  4552  0B4F  0000               	nop
  4553                           
  4554                           ;delay.c: 79: __nop();
  4555  0B50  0000               	nop
  4556  0B51  0020               	movlb	0	; select bank0
  4557  0B52  0AA7               	incf	delay_ms@j,f
  4558  0B53  1903               	skipnz
  4559  0B54  0AA8               	incf	delay_ms@j+1,f
  4560  0B55  3003               	movlw	3
  4561  0B56  0228               	subwf	delay_ms@j+1,w
  4562  0B57  30E8               	movlw	232
  4563  0B58  1903               	skipnz
  4564  0B59  0227               	subwf	delay_ms@j,w
  4565  0B5A  1C03               	skipc
  4566  0B5B  2B49               	goto	l43
  4567  0B5C  0064               	clrwdt	;# 
  4568  0B5D  0020               	movlb	0	; select bank0
  4569  0B5E  0AA5               	incf	delay_ms@i,f
  4570  0B5F  1903               	skipnz
  4571  0B60  0AA6               	incf	delay_ms@i+1,f
  4572  0B61  2B3F               	goto	l16422
  4573  0B62                     __end_of_delay_ms:	
  4574  0B62                     __ptext45:	
  4575 ;; *************** function _Disable_Bost_Pwm *****************
  4576 ;; Defined at:
  4577 ;;		line 201 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;		None               void
  4584 ;; Registers used:
  4585 ;;		None
  4586 ;; Tracked objects:
  4587 ;;		On entry : 18/5
  4588 ;;		On exit  : 1F/8
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    2
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_Key_Menu
  4602 ;;		_scan_key_value
  4603 ;;		_handle_ad_loop
  4604 ;;		_handle_task_process
  4605 ;;		_handle_uart_rx_buf
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _Disable_Bost_Pwm
  4611  0B62                     _Disable_Bost_Pwm:	
  4612                           
  4613                           ;pwm.c: 203: TRISBbits.TRISB5 =1;
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _Disable_Bost_Pwm: []
  4617  0B62  0021               	movlb	1	; select bank1
  4618  0B63  168D               	bsf	13,5	;volatile
  4619                           
  4620                           ;pwm.c: 205: TMR4ON=0;
  4621  0B64  0028               	movlb	8	; select bank8
  4622  0B65  1117               	bcf	23,2	;volatile
  4623  0B66  0008               	return
  4624  0B67                     __end_of_Disable_Bost_Pwm:	
  4625  0B67                     __ptext39:	
  4626 ;; *************** function _eeprom_write *****************
  4627 ;; Defined at:
  4628 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  addr            1    wreg     unsigned char 
  4631 ;;  value           1   68[BANK0 ] unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  addr            1   69[BANK0 ] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 1F/0
  4640 ;;		On exit  : 1F/3
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4643 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;Total ram usage:        2 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    2
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_auto_system
  4654 ;;		_Key_Menu
  4655 ;;		_scan_key_value
  4656 ;;		_handle_task_process
  4657 ;;		_handle_uart_rx_buf
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _eeprom_write
  4663  0B67                     _eeprom_write:	
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4667                           ;eeprom_write@addr stored from wreg
  4668  0B67  00E5               	movwf	eeprom_write@addr
  4669  0B68                     l1853:	
  4670  0B68  0023               	movlb	3	; select bank3
  4671  0B69  1895               	btfsc	21,1	;volsfr
  4672  0B6A  2B68               	goto	l1853
  4673  0B6B  0020               	movlb	0	; select bank0
  4674  0B6C  0865               	movf	eeprom_write@addr,w
  4675  0B6D  0023               	movlb	3	; select bank3
  4676  0B6E  0091               	movwf	17	;volatile
  4677  0B6F  0192               	clrf	18	;volatile
  4678  0B70  0020               	movlb	0	; select bank0
  4679  0B71  0864               	movf	eeprom_write@value,w
  4680  0B72  0023               	movlb	3	; select bank3
  4681  0B73  0093               	movwf	19	;volatile
  4682  0B74  303F               	movlw	63
  4683  0B75  0595               	andwf	21,f	;volsfr
  4684  0B76  1003               	bcf	3,0	;volatile
  4685  0B77  1B8B               	btfsc	11,7	;volatile
  4686  0B78  1403               	bsf	3,0	;volatile
  4687  0B79  138B               	bcf	11,7	;volatile
  4688  0B7A  1515               	bsf	21,2	;volsfr
  4689  0B7B  3055               	movlw	85
  4690  0B7C  0096               	movwf	22	;volsfr
  4691  0B7D  30AA               	movlw	170
  4692  0B7E  0096               	movwf	22	;volsfr
  4693  0B7F  1495               	bsf	21,1	;volsfr
  4694  0B80  1115               	bcf	21,2	;volsfr
  4695  0B81  1803               	btfsc	3,0	;volatile
  4696  0B82  178B               	bsf	11,7	;volatile
  4697  0B83  0008               	return
  4698  0B84                     __end_of_eeprom_write:	
  4699  0B84                     __ptext10:	
  4700 ;; *************** function _handle_task_process *****************
  4701 ;; Defined at:
  4702 ;;		line 1161 in file "D:\MCUProject\ZH-SL-H40\src\task.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 1F/2
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    4
  4723 ;; This function calls:
  4724 ;;		_Disable_Bost_Pwm
  4725 ;;		_Disable_Buck_Pwm
  4726 ;;		_Enable_Bost_Pwm
  4727 ;;		_Set_Bost_Pwm_Duty
  4728 ;;		_Set_Buck_Pwm_Duty
  4729 ;;		___fladd
  4730 ;;		___fldiv
  4731 ;;		___flmul
  4732 ;;		___fltol
  4733 ;;		_delay_1us
  4734 ;;		_delay_ms
  4735 ;;		_eeprom_write
  4736 ;;		_pid_init
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _handle_task_process
  4744  0B84                     _handle_task_process:	
  4745                           
  4746                           ;task.c: 1165: if(handle_short_flag==0x01)
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _handle_task_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4750  0B84  0B30               	decfsz	_handle_short_flag^(0+256),w
  4751  0B85  2B8C               	goto	l18008
  4752                           
  4753                           ;task.c: 1169: load_voltage_status=0x01;
  4754  0B86  0024               	movlb	4	; select bank4
  4755  0B87  01D2               	clrf	_over_load_time_count^(0+512)
  4756  0B88  01D3               	clrf	(_over_load_time_count+1)^(0+512)
  4757                           
  4758                           ;task.c: 1173: discharge_led_status=0x00;
  4759  0B89  0022               	movlb	2	; select bank2
  4760  0B8A  01B0               	clrf	_handle_short_flag^(0+256)
  4761  0B8B                     l1502:	
  4762                           ;task.c: 1175: while(1);
  4763                           
  4764  0B8B  2B8B               	goto	l1502
  4765  0B8C                     l18008:	
  4766                           
  4767                           ;task.c: 1176: }
  4768                           ;task.c: 1178: if(work_mode==0x00)
  4769  0B8C  0021               	movlb	1	; select bank1
  4770  0B8D  08DA               	movf	_work_mode^(0+128),f
  4771  0B8E  1D03               	skipz
  4772  0B8F  2BB4               	goto	l18028
  4773                           
  4774                           ;task.c: 1179: {
  4775                           ;task.c: 1180: if((pv_voltage_status==0x01)&&(battery_voltage_status==0x01)&&(sys_temper
      +                          _flag==0x01)&&(mcu_temp_index<0x03))
  4776  0B90  0022               	movlb	2	; select bank2
  4777  0B91  0B42               	decfsz	_pv_voltage_status^(0+256),w
  4778  0B92  2BA5               	goto	l18018
  4779  0B93  0B27               	decfsz	_battery_voltage_status^(0+256),w
  4780  0B94  2BA5               	goto	l18018
  4781  0B95  0B6F               	decfsz	_sys_temper_flag^(0+256),w
  4782  0B96  2BA5               	goto	l18018
  4783  0B97                     l18016:	
  4784                           
  4785                           ;task.c: 1181: {
  4786                           ;task.c: 1183: system_status = 0x01;
  4787  0B97  0021               	movlb	1	; select bank1
  4788  0B98  01D8               	clrf	_system_status^(0+128)
  4789  0B99  0AD8               	incf	_system_status^(0+128),f
  4790  0B9A                     l18310:	
  4791                           ;task.c: 1185: }
  4792                           
  4793  0B9A  0858               	movf	_system_status^(0+128),w
  4794                           
  4795                           ; Switch size 1, requested type "space"
  4796                           ; Number of cases is 3, Range of values is 0 to 2
  4797                           ; switch strategies available:
  4798                           ; Name         Instructions Cycles
  4799                           ; simple_byte           10     6 (average)
  4800                           ; direct_byte           12     6 (fixed)
  4801                           ; jumptable            260     6 (fixed)
  4802                           ;	Chosen strategy is simple_byte
  4803  0B9B  3A00               	xorlw	0	; case 0
  4804  0B9C  1903               	skipnz
  4805  0B9D  2BBC               	goto	l18038
  4806  0B9E  3A01               	xorlw	1	; case 1
  4807  0B9F  1903               	skipnz
  4808  0BA0  2C6F               	goto	l18182
  4809  0BA1  3A03               	xorlw	3	; case 2
  4810  0BA2  1903               	skipnz
  4811  0BA3  2CB8               	goto	l18240
  4812  0BA4  2D6B               	goto	l1525
  4813  0BA5                     l18018:	
  4814                           
  4815                           ;task.c: 1186: else if((pv_voltage_status==0x02)&&(battery_voltage_status==0x01)&&(sys_t
      +                          emper_flag==0x01)&&(mcu_temp_index<0x03))
  4816  0BA5  0842               	movf	_pv_voltage_status^(0+256),w
  4817  0BA6  3A02               	xorlw	2
  4818  0BA7  1D03               	skipz
  4819  0BA8  2BB1               	goto	l18026
  4820  0BA9  0B27               	decfsz	_battery_voltage_status^(0+256),w
  4821  0BAA  2BB1               	goto	l18026
  4822  0BAB  0B6F               	decfsz	_sys_temper_flag^(0+256),w
  4823  0BAC  2BB1               	goto	l18026
  4824  0BAD                     l18024:	
  4825                           
  4826                           ;task.c: 1187: {
  4827                           ;task.c: 1189: system_status = 0x02;
  4828  0BAD  3002               	movlw	2
  4829  0BAE  0021               	movlb	1	; select bank1
  4830  0BAF  00D8               	movwf	_system_status^(0+128)
  4831                           
  4832                           ;task.c: 1191: }
  4833  0BB0  2B9A               	goto	l18310
  4834  0BB1                     l18026:	
  4835                           
  4836                           ;task.c: 1192: else
  4837                           ;task.c: 1193: {
  4838                           ;task.c: 1194: system_status = 0x00;
  4839  0BB1  0021               	movlb	1	; select bank1
  4840  0BB2  01D8               	clrf	_system_status^(0+128)
  4841  0BB3  2B9A               	goto	l18310
  4842  0BB4                     l18028:	
  4843                           
  4844                           ;task.c: 1197: else if(work_mode==0x01)
  4845  0BB4  0B5A               	decfsz	_work_mode^(0+128),w
  4846  0BB5  2BB7               	goto	l18032
  4847  0BB6  2B97               	goto	l18016
  4848  0BB7                     l18032:	
  4849                           
  4850                           ;task.c: 1201: else if(work_mode==0x02)
  4851  0BB7  085A               	movf	_work_mode^(0+128),w
  4852  0BB8  3A02               	xorlw	2
  4853  0BB9  1903               	btfsc	3,2
  4854  0BBA  2BAD               	goto	l18024
  4855  0BBB  2BB1               	goto	l18026
  4856  0BBC                     l18038:	
  4857                           
  4858                           ;task.c: 1220: discharge_led_status=0x00;
  4859  0BBC  0022               	movlb	2	; select bank2
  4860  0BBD  08B6               	movf	_nop_index^(0+256),f
  4861  0BBE  1D03               	skipz
  4862  0BBF  2C10               	goto	l18116
  4863                           
  4864                           ;task.c: 1222: Disable_Buck_Pwm();
  4865  0BC0  25A1  3188         	fcall	_Disable_Buck_Pwm
  4866                           
  4867                           ;task.c: 1224: Set_Buck_Pwm_Duty(0);
  4868  0BC2  0020               	movlb	0	; select bank0
  4869  0BC3  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  4870  0BC4  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  4871  0BC5  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  4872                           
  4873                           ;task.c: 1226: Disable_Bost_Pwm();
  4874  0BC7  2362  3188         	fcall	_Disable_Bost_Pwm
  4875                           
  4876                           ;task.c: 1228: Set_Bost_Pwm_Duty(0);
  4877  0BC9  0020               	movlb	0	; select bank0
  4878  0BCA  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  4879  0BCB  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  4880  0BCC  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  4881                           
  4882                           ;task.c: 1230: (LATCbits.LATC3 = 0x00);
  4883  0BCE  0022               	movlb	2	; select bank2
  4884  0BCF  118E               	bcf	14,3	;volatile
  4885                           
  4886                           ;task.c: 1232: sys_power_ch=0x00;
  4887  0BD0  01C7               	clrf	_sys_power_ch^(0+256)
  4888                           
  4889                           ;task.c: 1234: (LATAbits.LATA6 = 0x00);
  4890  0BD1  130C               	bcf	12,6	;volatile
  4891                           
  4892                           ;task.c: 1236: (LATAbits.LATA7 = 0x00);
  4893  0BD2  138C               	bcf	12,7	;volatile
  4894                           
  4895                           ;task.c: 1237: delay_1us();
  4896  0BD3  25D7               	fcall	_delay_1us
  4897                           
  4898                           ;task.c: 1244: pv_prev=0;
  4899  0BD4  0022               	movlb	2	; select bank2
  4900  0BD5  140E               	bsf	14,0	;volatile
  4901                           
  4902                           ;task.c: 1246: buck_pwm_value=0;
  4903  0BD6  0021               	movlb	1	; select bank1
  4904  0BD7  3042               	movlw	66
  4905  0BD8  01C6               	clrf	_buck_pwm_value^(0+128)
  4906  0BD9  01C7               	clrf	(_buck_pwm_value+1)^(0+128)
  4907                           
  4908                           ;task.c: 1248: bost_pwm_value=0;
  4909  0BDA  01C4               	clrf	_bost_pwm_value^(0+128)
  4910  0BDB  01C5               	clrf	(_bost_pwm_value+1)^(0+128)
  4911                           
  4912                           ;task.c: 1250: PWM =50;
  4913  0BDC  00C3               	movwf	(_PWM+3)^(0+128)
  4914  0BDD  3048               	movlw	72
  4915  0BDE  00C2               	movwf	(_PWM+2)^(0+128)
  4916  0BDF  3020               	movlw	low _PID_CC_charge
  4917  0BE0  01C1               	clrf	(_PWM+1)^(0+128)
  4918  0BE1  01C0               	clrf	_PWM^(0+128)
  4919                           
  4920                           ;task.c: 1252: pid_init ( &PID_CC_charge);
  4921  0BE2  31A7  27EE  3188   	fcall	PL256	;call to abstracted procedure
  4922  0BE5  2597               	fcall	_pid_init
  4923                           
  4924                           ;task.c: 1254: pid_init ( &PID_CV_charge);
  4925  0BE6  31A7  27F3  3188   	fcall	PL260	;call to abstracted procedure
  4926  0BE9  2597  3188         	fcall	_pid_init
  4927                           
  4928                           ;task.c: 1256: pid_init ( &PID_CC_discharge);
  4929  0BEB  30C7               	movlw	low _PID_CC_discharge
  4930  0BEC  00AB               	movwf	pid_init@pp
  4931  0BED  3001               	movlw	high _PID_CC_discharge
  4932  0BEE  00AC               	movwf	pid_init@pp+1
  4933  0BEF  2597               	fcall	_pid_init
  4934                           
  4935                           ;task.c: 1260: PID_CC_charge.Proportion = 0.001;
  4936                           
  4937                           ;task.c: 1262: PID_CC_charge.Integral = 0;
  4938                           
  4939                           ;task.c: 1264: PID_CC_charge.Derivative = 0;
  4940                           
  4941                           ;task.c: 1266: PID_CC_charge.SetPoint = 5.0*15.0;
  4942                           
  4943                           ;task.c: 1271: PID_CV_charge.Proportion = 0.001;
  4944                           
  4945                           ;task.c: 1273: PID_CV_charge.Integral = 0;
  4946                           
  4947                           ;task.c: 1275: PID_CV_charge.Derivative = 0;
  4948                           
  4949                           ;task.c: 1277: PID_CV_charge.SetPoint = dianchi_cv_level+1;
  4950  0BF0  31A6  26BC  3188   	fcall	PL2	;call to abstracted procedure
  4951  0BF3  319E  261A  3188   	fcall	___fladd
  4952  0BF6  31A7  27BF  3188   	fcall	PL70	;call to abstracted procedure
  4953                           
  4954                           ;task.c: 1281: PID_CC_discharge.Proportion = 0.001;
  4955                           
  4956                           ;task.c: 1283: PID_CC_discharge.Integral = 0.;
  4957                           
  4958                           ;task.c: 1285: PID_CC_discharge.Derivative = 0;
  4959                           
  4960                           ;task.c: 1287: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
  4961  0BF9  31A7  2775  3188   	fcall	PL16	;call to abstracted procedure
  4962  0BFC  31B3  2397  3188   	fcall	PL4	;call to abstracted procedure
  4963  0BFF  31A2  2291  3188   	fcall	___fldiv
  4964  0C02  3186  26D8  3188   	fcall	PL36	;call to abstracted procedure
  4965  0C05  31A2  22FC  3188   	fcall	___flmul
  4966  0C08  2600  3188         	fcall	PL24	;call to abstracted procedure
  4967                           
  4968                           ;task.c: 1289: open_discharge_time=0x00;
  4969                           
  4970                           ;task.c: 1291: ms_cnt=0x00;
  4971                           
  4972                           ;task.c: 1292: se_cnt=0x00;
  4973                           
  4974                           ;task.c: 1293: mi_cnt=0x00;
  4975                           
  4976                           ;task.c: 1294: ho_cnt=0x00;
  4977                           
  4978                           ;task.c: 1295: limit_power_pid_flag=0x00;
  4979                           
  4980                           ;task.c: 1296: Adjust_Pout_Flag=0x00;
  4981                           
  4982                           ;task.c: 1297: voltage_adjust_index=0x01;
  4983                           
  4984                           ;task.c: 1299: nop_index=0x01;
  4985  0C0A  2610  3188         	fcall	PL48	;call to abstracted procedure
  4986  0C0C  0AB6               	incf	_nop_index^(0+256),f
  4987                           
  4988                           ;task.c: 1301: discharge_index=0x00;
  4989  0C0D  0021               	movlb	1	; select bank1
  4990  0C0E  01D4               	clrf	_discharge_index^(0+128)
  4991                           
  4992                           ;task.c: 1303: charge_index=0x00;
  4993  0C0F  01D3               	clrf	_charge_index^(0+128)
  4994  0C10                     l18116:	
  4995                           
  4996                           ;task.c: 1304: }
  4997                           ;task.c: 1305: if(device_status==0x00 && nop_index==0x01)
  4998  0C10  0020               	movlb	0	; select bank0
  4999  0C11  08EA               	movf	_device_status,f
  5000  0C12  1D03               	skipz
  5001  0C13  0008               	return
  5002  0C14  0022               	movlb	2	; select bank2
  5003  0C15  0B36               	decfsz	_nop_index^(0+256),w
  5004  0C16  0008               	return
  5005                           
  5006                           ;task.c: 1306: {
  5007                           ;task.c: 1307: Disable_Buck_Pwm();
  5008  0C17  25A1  3188         	fcall	_Disable_Buck_Pwm
  5009                           
  5010                           ;task.c: 1308: Set_Buck_Pwm_Duty(0);
  5011  0C19  0020               	movlb	0	; select bank0
  5012  0C1A  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  5013  0C1B  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  5014  0C1C  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  5015                           
  5016                           ;task.c: 1310: Disable_Bost_Pwm();
  5017  0C1E  2362  3188         	fcall	_Disable_Bost_Pwm
  5018                           
  5019                           ;task.c: 1311: (LATCbits.LATC3 = 0x00);
  5020                           
  5021                           ;task.c: 1312: Set_Bost_Pwm_Duty(0);
  5022  0C20  263F  3188         	fcall	PL104	;call to abstracted procedure
  5023  0C22  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5024                           
  5025                           ;task.c: 1314: (LATCbits.LATC3 = 0x01);
  5026  0C24  0022               	movlb	2	; select bank2
  5027  0C25  158E               	bsf	14,3	;volatile
  5028                           
  5029                           ;task.c: 1315: Enable_Bost_Pwm();
  5030  0C26  25D2  3188         	fcall	_Enable_Bost_Pwm
  5031                           
  5032                           ;task.c: 1316: Set_Bost_Pwm_Duty(200);
  5033  0C28  2666  3188         	fcall	PL240	;call to abstracted procedure
  5034  0C2A  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5035                           
  5036                           ;task.c: 1318: delay_ms(200);
  5037  0C2C  2661  3188         	fcall	PL204	;call to abstracted procedure
  5038  0C2E  233D  3188         	fcall	_delay_ms
  5039                           
  5040                           ;task.c: 1320: Set_Bost_Pwm_Duty(0);
  5041  0C30  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  5042  0C31  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5043  0C32  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5044                           
  5045                           ;task.c: 1322: delay_ms(200);
  5046  0C34  2661  3188         	fcall	PL204	;call to abstracted procedure
  5047  0C36  233D  3188         	fcall	_delay_ms
  5048                           
  5049                           ;task.c: 1324: Set_Bost_Pwm_Duty(200);
  5050  0C38  30C8               	movlw	200
  5051  0C39  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  5052  0C3A  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5053  0C3B  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5054                           
  5055                           ;task.c: 1326: delay_ms(200);
  5056  0C3D  2661  3188         	fcall	PL204	;call to abstracted procedure
  5057  0C3F  233D  3188         	fcall	_delay_ms
  5058                           
  5059                           ;task.c: 1328: Set_Bost_Pwm_Duty(0);
  5060  0C41  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  5061  0C42  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5062  0C43  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5063                           
  5064                           ;task.c: 1330: delay_ms(200);
  5065  0C45  2661  3188         	fcall	PL204	;call to abstracted procedure
  5066  0C47  233D  3188         	fcall	_delay_ms
  5067                           
  5068                           ;task.c: 1332: Set_Bost_Pwm_Duty(200);
  5069  0C49  30C8               	movlw	200
  5070  0C4A  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  5071  0C4B  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5072  0C4C  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5073                           
  5074                           ;task.c: 1334: delay_ms(200);
  5075  0C4E  2661  3188         	fcall	PL204	;call to abstracted procedure
  5076  0C50  233D  3188         	fcall	_delay_ms
  5077                           
  5078                           ;task.c: 1336: Set_Bost_Pwm_Duty(0);
  5079  0C52  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  5080  0C53  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5081  0C54  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5082                           
  5083                           ;task.c: 1338: Disable_Bost_Pwm();
  5084  0C56  2362  3188         	fcall	_Disable_Bost_Pwm
  5085                           
  5086                           ;task.c: 1339: (LATCbits.LATC3 = 0x00);
  5087                           
  5088                           ;task.c: 1340: Set_Bost_Pwm_Duty(0);
  5089  0C58  263F  3188         	fcall	PL104	;call to abstracted procedure
  5090  0C5A  256C               	fcall	_Set_Bost_Pwm_Duty
  5091                           
  5092                           ;task.c: 1342: nop_index=0x02;
  5093  0C5B  3002               	movlw	2
  5094  0C5C  0022               	movlb	2	; select bank2
  5095  0C5D  00B6               	movwf	_nop_index^(0+256)
  5096                           
  5097                           ;task.c: 1344: open_an0_time=0x00;
  5098  0C5E  01B7               	clrf	_open_an0_time^(0+256)
  5099                           
  5100                           ;task.c: 1346: open_an1_time=0x00;
  5101  0C5F  01B9               	clrf	_open_an1_time^(0+256)
  5102                           
  5103                           ;task.c: 1348: open_an2_time=0x00;
  5104  0C60  01BA               	clrf	_open_an2_time^(0+256)
  5105                           
  5106                           ;task.c: 1350: open_an3_time=0x00;
  5107  0C61  01BB               	clrf	_open_an3_time^(0+256)
  5108                           
  5109                           ;task.c: 1352: open_an4_time=0x00;
  5110  0C62  01BC               	clrf	_open_an4_time^(0+256)
  5111                           
  5112                           ;task.c: 1354: open_an9_time=0x00;
  5113  0C63  01BD               	clrf	_open_an9_time^(0+256)
  5114                           
  5115                           ;task.c: 1356: open_an10_time=0x00;
  5116  0C64  01B8               	clrf	_open_an10_time^(0+256)
  5117                           
  5118                           ;task.c: 1358: key1_index=0x00;
  5119  0C65  0023               	movlb	3	; select bank3
  5120  0C66  01C1               	clrf	_key1_index^(0+384)
  5121                           
  5122                           ;task.c: 1360: open_sleep_time = 0x01;
  5123  0C67  0022               	movlb	2	; select bank2
  5124  0C68  01BF               	clrf	_open_sleep_time^(0+256)
  5125  0C69  0ABF               	incf	_open_sleep_time^(0+256),f
  5126  0C6A  0063               	sleep	;# 
  5127                           
  5128                           ;task.c: 1364: __nop();
  5129  0C6B  0000               	nop
  5130                           
  5131                           ;task.c: 1365: __nop();
  5132  0C6C  0000               	nop
  5133                           
  5134                           ;task.c: 1366: __nop();
  5135  0C6D  0000               	nop
  5136  0C6E  0008               	return
  5137  0C6F                     l18182:	
  5138                           
  5139                           ;task.c: 1375: {
  5140                           ;task.c: 1377: discharge_led_status=0x01;
  5141  0C6F  0B53               	decfsz	_charge_index^(0+128),w
  5142  0C70  0008               	return
  5143                           
  5144                           ;task.c: 1379: Disable_Bost_Pwm();
  5145  0C71  2362  3188         	fcall	_Disable_Bost_Pwm
  5146                           
  5147                           ;task.c: 1381: Set_Bost_Pwm_Duty(0);
  5148  0C73  0020               	movlb	0	; select bank0
  5149  0C74  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  5150  0C75  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  5151  0C76  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5152                           
  5153                           ;task.c: 1383: (LATCbits.LATC3 = 0x00);
  5154  0C78  0022               	movlb	2	; select bank2
  5155  0C79  118E               	bcf	14,3	;volatile
  5156                           
  5157                           ;task.c: 1385: Disable_Buck_Pwm();
  5158  0C7A  25A1  3188         	fcall	_Disable_Buck_Pwm
  5159                           
  5160                           ;task.c: 1388: sys_power_ch=0x00;
  5161                           
  5162                           ;task.c: 1390: (LATAbits.LATA6 = 0x00);
  5163                           
  5164                           ;task.c: 1392: (LATAbits.LATA7 = 0x00);
  5165  0C7C  266B  3188         	fcall	PL266	;call to abstracted procedure
  5166                           
  5167                           ;task.c: 1393: delay_1us();
  5168  0C7E  25D7  3188         	fcall	_delay_1us
  5169                           
  5170                           ;task.c: 1394: (LATCbits.LATC0 = 0x01);
  5171                           
  5172                           ;task.c: 1397: PWM =50;
  5173  0C80  2650               	fcall	PL182	;call to abstracted procedure
  5174                           
  5175                           ;task.c: 1399: buck_pwm_value=50;
  5176  0C81  00C6               	movwf	_buck_pwm_value^(0+128)
  5177  0C82  01C7               	clrf	(_buck_pwm_value+1)^(0+128)
  5178                           
  5179                           ;task.c: 1401: Set_Buck_Pwm_Duty(buck_pwm_value);
  5180  0C83  319F  276D  3188   	fcall	PL148	;call to abstracted procedure
  5181  0C86  25A7               	fcall	_Set_Buck_Pwm_Duty
  5182                           
  5183                           ;task.c: 1403: pid_init ( &PID_CC_charge);
  5184  0C87  3020               	movlw	low _PID_CC_charge
  5185  0C88  31A7  27EE  3188   	fcall	PL256	;call to abstracted procedure
  5186  0C8B  2597               	fcall	_pid_init
  5187                           
  5188                           ;task.c: 1405: pid_init ( &PID_CV_charge);
  5189  0C8C  31A7  27F3  3188   	fcall	PL260	;call to abstracted procedure
  5190  0C8F  2597               	fcall	_pid_init
  5191                           
  5192                           ;task.c: 1408: PID_CC_charge.Proportion = 0.001;
  5193                           
  5194                           ;task.c: 1410: PID_CC_charge.Integral = 0;
  5195                           
  5196                           ;task.c: 1412: PID_CC_charge.Derivative = 0;
  5197                           
  5198                           ;task.c: 1414: PID_CC_charge.SetPoint = 5.0*15.0;
  5199                           
  5200                           ;task.c: 1418: PID_CV_charge.Proportion = 0.001;
  5201                           
  5202                           ;task.c: 1420: PID_CV_charge.Integral = 0;
  5203                           
  5204                           ;task.c: 1422: PID_CV_charge.Derivative = 0;
  5205                           
  5206                           ;task.c: 1429: P_last=0;
  5207  0C90  31A6  26BC  3188   	fcall	PL2	;call to abstracted procedure
  5208  0C93  319E  261A  3188   	fcall	___fladd
  5209  0C96  31A7  27BF  3188   	fcall	PL70	;call to abstracted procedure
  5210                           
  5211                           ;task.c: 1431: open_discharge_time=0x00;
  5212                           
  5213                           ;task.c: 1433: ms_cnt=0x00;
  5214                           
  5215                           ;task.c: 1434: se_cnt=0x00;
  5216                           
  5217                           ;task.c: 1435: mi_cnt=0x00;
  5218                           
  5219                           ;task.c: 1436: ho_cnt=0x00;
  5220                           
  5221                           ;task.c: 1438: limit_power_pid_flag=0x00;
  5222                           
  5223                           ;task.c: 1439: Adjust_Pout_Flag=0x00;
  5224                           
  5225                           ;task.c: 1440: voltage_adjust_index=0x01;
  5226                           
  5227                           ;task.c: 1442: nop_index=0x00;
  5228  0C99  2610  3188         	fcall	PL48	;call to abstracted procedure
  5229                           
  5230                           ;task.c: 1444: discharge_index=0x00;
  5231  0C9B  0021               	movlb	1	; select bank1
  5232  0C9C  3002               	movlw	2
  5233  0C9D  01D4               	clrf	_discharge_index^(0+128)
  5234                           
  5235                           ;task.c: 1446: charge_index=0x02;
  5236  0C9E  00D3               	movwf	_charge_index^(0+128)
  5237                           
  5238                           ;task.c: 1449: today_index = today_index+1;
  5239  0C9F  0020               	movlb	0	; select bank0
  5240  0CA0  3007               	movlw	7
  5241  0CA1  0AEB               	incf	_today_index,f
  5242                           
  5243                           ;task.c: 1451: today_index = today_index%8;
  5244  0CA2  05EB               	andwf	_today_index,f
  5245                           
  5246                           ;task.c: 1453: eeprom_write(0x11,(unsigned char)today_index);
  5247  0CA3  086B               	movf	_today_index,w
  5248  0CA4  00E4               	movwf	eeprom_write@value
  5249  0CA5  3011               	movlw	17
  5250  0CA6  2367               	fcall	_eeprom_write
  5251                           
  5252                           ;task.c: 1455: bt_00_lv = b_v;
  5253  0CA7  0022               	movlb	2	; select bank2
  5254  0CA8  0823               	movf	(_b_v+3)^(0+256),w
  5255  0CA9  0024               	movlb	4	; select bank4
  5256  0CAA  00A7               	movwf	(_bt_00_lv+3)^(0+512)
  5257  0CAB  0022               	movlb	2	; select bank2
  5258  0CAC  0822               	movf	(_b_v+2)^(0+256),w
  5259  0CAD  0024               	movlb	4	; select bank4
  5260  0CAE  00A6               	movwf	(_bt_00_lv+2)^(0+512)
  5261  0CAF  0022               	movlb	2	; select bank2
  5262  0CB0  0821               	movf	(_b_v+1)^(0+256),w
  5263  0CB1  0024               	movlb	4	; select bank4
  5264  0CB2  00A5               	movwf	(_bt_00_lv+1)^(0+512)
  5265  0CB3  0022               	movlb	2	; select bank2
  5266  0CB4  0820               	movf	_b_v^(0+256),w
  5267  0CB5  0024               	movlb	4	; select bank4
  5268  0CB6  00A4               	movwf	_bt_00_lv^(0+512)
  5269  0CB7  0008               	return
  5270  0CB8                     l18240:	
  5271                           
  5272                           ;task.c: 1463: {
  5273                           ;task.c: 1465: charge_led_status=0x01;
  5274  0CB8  08D4               	movf	_discharge_index^(0+128),f
  5275  0CB9  1D03               	skipz
  5276  0CBA  0008               	return
  5277                           
  5278                           ;task.c: 1468: Disable_Buck_Pwm();
  5279  0CBB  25A1  3188         	fcall	_Disable_Buck_Pwm
  5280                           
  5281                           ;task.c: 1470: Set_Buck_Pwm_Duty(0);
  5282  0CBD  0020               	movlb	0	; select bank0
  5283  0CBE  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  5284  0CBF  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  5285  0CC0  25A7  3188         	fcall	_Set_Buck_Pwm_Duty
  5286                           
  5287                           ;task.c: 1472: (LATCbits.LATC3 = 0x00);
  5288  0CC2  0022               	movlb	2	; select bank2
  5289  0CC3  118E               	bcf	14,3	;volatile
  5290                           
  5291                           ;task.c: 1474: Disable_Bost_Pwm();
  5292  0CC4  2362  3188         	fcall	_Disable_Bost_Pwm
  5293                           
  5294                           ;task.c: 1477: sys_power_ch=0x00;
  5295                           
  5296                           ;task.c: 1479: (LATAbits.LATA6 = 0x00);
  5297                           
  5298                           ;task.c: 1481: (LATAbits.LATA7 = 0x00);
  5299  0CC6  266B  3188         	fcall	PL266	;call to abstracted procedure
  5300                           
  5301                           ;task.c: 1482: delay_1us();
  5302  0CC8  25D7  3188         	fcall	_delay_1us
  5303                           
  5304                           ;task.c: 1483: (LATCbits.LATC0 = 0x01);
  5305                           
  5306                           ;task.c: 1486: PWM =50;
  5307  0CCA  2650               	fcall	PL182	;call to abstracted procedure
  5308                           
  5309                           ;task.c: 1488: bost_pwm_value=50;
  5310                           
  5311                           ;task.c: 1490: Set_Bost_Pwm_Duty(bost_pwm_value);
  5312  0CCB  31B3  23D2  3188   	fcall	PL54	;call to abstracted procedure
  5313  0CCE  256C  3188         	fcall	_Set_Bost_Pwm_Duty
  5314                           
  5315                           ;task.c: 1492: pid_init ( &PID_CC_discharge);
  5316  0CD0  30C7               	movlw	low _PID_CC_discharge
  5317  0CD1  0020               	movlb	0	; select bank0
  5318  0CD2  00AB               	movwf	pid_init@pp
  5319  0CD3  3001               	movlw	high _PID_CC_discharge
  5320  0CD4  00AC               	movwf	pid_init@pp+1
  5321  0CD5  2597               	fcall	_pid_init
  5322                           
  5323                           ;task.c: 1494: PID_CC_discharge.Proportion = 0.001;
  5324                           
  5325                           ;task.c: 1496: PID_CC_discharge.Integral = 0;
  5326                           
  5327                           ;task.c: 1498: PID_CC_discharge.Derivative = 0;
  5328                           
  5329                           ;task.c: 1500: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
  5330  0CD6  31A7  2775  3188   	fcall	PL16	;call to abstracted procedure
  5331  0CD9  31B3  2397  3188   	fcall	PL4	;call to abstracted procedure
  5332  0CDC  31A2  2291  3188   	fcall	___fldiv
  5333  0CDF  3186  26D8  3188   	fcall	PL36	;call to abstracted procedure
  5334  0CE2  31A2  22FC  3188   	fcall	___flmul
  5335  0CE5  2600  3188         	fcall	PL24	;call to abstracted procedure
  5336                           
  5337                           ;task.c: 1502: open_discharge_time=0x00;
  5338                           
  5339                           ;task.c: 1504: ms_cnt=0x00;
  5340                           
  5341                           ;task.c: 1505: se_cnt=0x00;
  5342                           
  5343                           ;task.c: 1506: mi_cnt=0x00;
  5344                           
  5345                           ;task.c: 1507: ho_cnt=0x00;
  5346                           
  5347                           ;task.c: 1509: limit_power_pid_flag=0x00;
  5348                           
  5349                           ;task.c: 1510: Adjust_Pout_Flag=0x00;
  5350                           
  5351                           ;task.c: 1511: voltage_adjust_index=0x01;
  5352                           
  5353                           ;task.c: 1513: nop_index=0x00;
  5354  0CE7  2610               	fcall	PL48	;call to abstracted procedure
  5355                           
  5356                           ;task.c: 1515: discharge_index=0x01;
  5357  0CE8  0021               	movlb	1	; select bank1
  5358  0CE9  01D4               	clrf	_discharge_index^(0+128)
  5359  0CEA  0AD4               	incf	_discharge_index^(0+128),f
  5360                           
  5361                           ;task.c: 1517: charge_index=0x00;
  5362  0CEB  01D3               	clrf	_charge_index^(0+128)
  5363                           
  5364                           ;task.c: 1520: bt_00_hv = b_v;
  5365  0CEC  0022               	movlb	2	; select bank2
  5366  0CED  0823               	movf	(_b_v+3)^(0+256),w
  5367  0CEE  0024               	movlb	4	; select bank4
  5368  0CEF  00A3               	movwf	(_bt_00_hv+3)^(0+512)
  5369  0CF0  0022               	movlb	2	; select bank2
  5370  0CF1  0822               	movf	(_b_v+2)^(0+256),w
  5371  0CF2  0024               	movlb	4	; select bank4
  5372  0CF3  00A2               	movwf	(_bt_00_hv+2)^(0+512)
  5373  0CF4  0022               	movlb	2	; select bank2
  5374  0CF5  0821               	movf	(_b_v+1)^(0+256),w
  5375  0CF6  0024               	movlb	4	; select bank4
  5376  0CF7  00A1               	movwf	(_bt_00_hv+1)^(0+512)
  5377  0CF8  0022               	movlb	2	; select bank2
  5378  0CF9  0820               	movf	_b_v^(0+256),w
  5379  0CFA  0024               	movlb	4	; select bank4
  5380  0CFB  00A0               	movwf	_bt_00_hv^(0+512)
  5381                           
  5382                           ;task.c: 1522: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/
      +                          256));
  5383  0CFC  0823               	movf	(_bt_00_hv+3)^(0+512),w
  5384  0CFD  0020               	movlb	0	; select bank0
  5385  0CFE  00CE               	movwf	___fldiv@f1+3
  5386  0CFF  0024               	movlb	4	; select bank4
  5387  0D00  0822               	movf	(_bt_00_hv+2)^(0+512),w
  5388  0D01  0020               	movlb	0	; select bank0
  5389  0D02  00CD               	movwf	___fldiv@f1+2
  5390  0D03  0024               	movlb	4	; select bank4
  5391  0D04  0821               	movf	(_bt_00_hv+1)^(0+512),w
  5392  0D05  0020               	movlb	0	; select bank0
  5393  0D06  00CC               	movwf	___fldiv@f1+1
  5394  0D07  0024               	movlb	4	; select bank4
  5395  0D08  0820               	movf	_bt_00_hv^(0+512),w
  5396  0D09  3186  26C6  3188   	fcall	PL32	;call to abstracted procedure
  5397  0D0C  31A2  2291  3188   	fcall	___fldiv
  5398  0D0F  3186  26CF  3188   	fcall	PL34	;call to abstracted procedure
  5399  0D12  2674               	fcall	___fltol
  5400  0D13  085A               	movf	?___fltol,w
  5401  0D14  00E4               	movwf	eeprom_write@value
  5402  0D15  3187  270D  3188   	fcall	PL102	;call to abstracted procedure
  5403  0D18  3E12               	addlw	18
  5404  0D19  2367  3188         	fcall	_eeprom_write
  5405                           
  5406                           ;task.c: 1524: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
  5407  0D1B  0024               	movlb	4	; select bank4
  5408  0D1C  0823               	movf	(_bt_00_hv+3)^(0+512),w
  5409  0D1D  0020               	movlb	0	; select bank0
  5410  0D1E  00DD               	movwf	___fltol@f1+3
  5411  0D1F  0024               	movlb	4	; select bank4
  5412  0D20  0822               	movf	(_bt_00_hv+2)^(0+512),w
  5413  0D21  0020               	movlb	0	; select bank0
  5414  0D22  00DC               	movwf	___fltol@f1+2
  5415  0D23  0024               	movlb	4	; select bank4
  5416  0D24  0821               	movf	(_bt_00_hv+1)^(0+512),w
  5417  0D25  0020               	movlb	0	; select bank0
  5418  0D26  00DB               	movwf	___fltol@f1+1
  5419  0D27  0024               	movlb	4	; select bank4
  5420  0D28  0820               	movf	_bt_00_hv^(0+512),w
  5421  0D29  0020               	movlb	0	; select bank0
  5422  0D2A  00DA               	movwf	___fltol@f1
  5423  0D2B  2674               	fcall	___fltol
  5424  0D2C  085A               	movf	?___fltol,w
  5425  0D2D  00E4               	movwf	eeprom_write@value
  5426  0D2E  3187  270D  3188   	fcall	PL102	;call to abstracted procedure
  5427  0D31  3E13               	addlw	19
  5428  0D32  2367               	fcall	_eeprom_write
  5429                           
  5430                           ;task.c: 1526: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/
      +                          256));
  5431  0D33  0024               	movlb	4	; select bank4
  5432  0D34  0827               	movf	(_bt_00_lv+3)^(0+512),w
  5433  0D35  0020               	movlb	0	; select bank0
  5434  0D36  00CE               	movwf	___fldiv@f1+3
  5435  0D37  0024               	movlb	4	; select bank4
  5436  0D38  0826               	movf	(_bt_00_lv+2)^(0+512),w
  5437  0D39  0020               	movlb	0	; select bank0
  5438  0D3A  00CD               	movwf	___fldiv@f1+2
  5439  0D3B  0024               	movlb	4	; select bank4
  5440  0D3C  0825               	movf	(_bt_00_lv+1)^(0+512),w
  5441  0D3D  0020               	movlb	0	; select bank0
  5442  0D3E  00CC               	movwf	___fldiv@f1+1
  5443  0D3F  0024               	movlb	4	; select bank4
  5444  0D40  0824               	movf	_bt_00_lv^(0+512),w
  5445  0D41  3186  26C6  3188   	fcall	PL32	;call to abstracted procedure
  5446  0D44  31A2  2291  3188   	fcall	___fldiv
  5447  0D47  3186  26CF  3188   	fcall	PL34	;call to abstracted procedure
  5448  0D4A  2674               	fcall	___fltol
  5449  0D4B  085A               	movf	?___fltol,w
  5450  0D4C  00E4               	movwf	eeprom_write@value
  5451  0D4D  3187  270D  3188   	fcall	PL102	;call to abstracted procedure
  5452  0D50  3E14               	addlw	20
  5453  0D51  2367  3188         	fcall	_eeprom_write
  5454                           
  5455                           ;task.c: 1528: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
  5456  0D53  0024               	movlb	4	; select bank4
  5457  0D54  0827               	movf	(_bt_00_lv+3)^(0+512),w
  5458  0D55  0020               	movlb	0	; select bank0
  5459  0D56  00DD               	movwf	___fltol@f1+3
  5460  0D57  0024               	movlb	4	; select bank4
  5461  0D58  0826               	movf	(_bt_00_lv+2)^(0+512),w
  5462  0D59  0020               	movlb	0	; select bank0
  5463  0D5A  00DC               	movwf	___fltol@f1+2
  5464  0D5B  0024               	movlb	4	; select bank4
  5465  0D5C  0825               	movf	(_bt_00_lv+1)^(0+512),w
  5466  0D5D  0020               	movlb	0	; select bank0
  5467  0D5E  00DB               	movwf	___fltol@f1+1
  5468  0D5F  0024               	movlb	4	; select bank4
  5469  0D60  0824               	movf	_bt_00_lv^(0+512),w
  5470  0D61  0020               	movlb	0	; select bank0
  5471  0D62  00DA               	movwf	___fltol@f1
  5472  0D63  2674               	fcall	___fltol
  5473  0D64  085A               	movf	?___fltol,w
  5474  0D65  00E4               	movwf	eeprom_write@value
  5475  0D66  3187  270D  3188   	fcall	PL102	;call to abstracted procedure
  5476  0D69  3E15               	addlw	21
  5477  0D6A  2B67               	ljmp	_eeprom_write
  5478  0D6B                     l1525:	
  5479  0D6B  0008               	return
  5480  0D6C                     __end_of_handle_task_process:	
  5481  0D6C                     __ptext42:	
  5482 ;; *************** function _Set_Bost_Pwm_Duty *****************
  5483 ;; Defined at:
  5484 ;;		line 216 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  dduty           2    3[BANK0 ] unsigned int 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;		None               void
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 1F/0
  5495 ;;		On exit  : 1F/6
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;Total ram usage:        4 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    2
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_Key_Menu
  5509 ;;		_scan_key_value
  5510 ;;		_handle_ad_loop
  5511 ;;		_handle_task_process
  5512 ;;		_handle_uart_rx_buf
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           
  5517                           ;psect for function _Set_Bost_Pwm_Duty
  5518  0D6C                     _Set_Bost_Pwm_Duty:	
  5519                           
  5520                           ;pwm.c: 219: bost_pwm_value=dduty;
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in _Set_Bost_Pwm_Duty: [wreg+status,2+status,0]
  5524  0D6C  0824               	movf	Set_Bost_Pwm_Duty@dduty+1,w
  5525  0D6D  0021               	movlb	1	; select bank1
  5526  0D6E  00C5               	movwf	(_bost_pwm_value+1)^(0+128)
  5527  0D6F  0020               	movlb	0	; select bank0
  5528  0D70  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  5529  0D71  0021               	movlb	1	; select bank1
  5530  0D72  00C4               	movwf	_bost_pwm_value^(0+128)
  5531                           
  5532                           ;pwm.c: 221: if(dduty<=488)
  5533  0D73  3001               	movlw	1
  5534  0D74  0020               	movlb	0	; select bank0
  5535  0D75  0224               	subwf	Set_Bost_Pwm_Duty@dduty+1,w
  5536  0D76  30E9               	movlw	233
  5537  0D77  1903               	skipnz
  5538  0D78  0223               	subwf	Set_Bost_Pwm_Duty@dduty,w
  5539  0D79  1803               	skipnc
  5540  0D7A  2D94               	goto	l16430
  5541                           
  5542                           ;pwm.c: 222: {
  5543                           ;pwm.c: 223: CCPR3L=(unsigned char)(dduty>>2);
  5544  0D7B  0824               	movf	Set_Bost_Pwm_Duty@dduty+1,w
  5545  0D7C  00A6               	movwf	??_Set_Bost_Pwm_Duty+1
  5546  0D7D  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  5547  0D7E  00A5               	movwf	??_Set_Bost_Pwm_Duty
  5548  0D7F  36A6               	lsrf	??_Set_Bost_Pwm_Duty+1,f
  5549  0D80  0CA5               	rrf	??_Set_Bost_Pwm_Duty,f
  5550  0D81  36A6               	lsrf	??_Set_Bost_Pwm_Duty+1,f
  5551  0D82  0CA5               	rrf	??_Set_Bost_Pwm_Duty,f
  5552  0D83  0825               	movf	??_Set_Bost_Pwm_Duty,w
  5553  0D84  0026               	movlb	6	; select bank6
  5554  0D85  0091               	movwf	17	;volatile
  5555                           
  5556                           ;pwm.c: 225: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  5557  0D86  0020               	movlb	0	; select bank0
  5558  0D87  0823               	movf	Set_Bost_Pwm_Duty@dduty,w
  5559  0D88  3903               	andlw	3
  5560  0D89  00A5               	movwf	??_Set_Bost_Pwm_Duty
  5561  0D8A  0EA5               	swapf	??_Set_Bost_Pwm_Duty,f
  5562  0D8B  0026               	movlb	6	; select bank6
  5563  0D8C  0813               	movf	19,w	;volatile
  5564  0D8D  0020               	movlb	0	; select bank0
  5565  0D8E  0625               	xorwf	??_Set_Bost_Pwm_Duty,w
  5566  0D8F  39CF               	andlw	-49
  5567  0D90  0625               	xorwf	??_Set_Bost_Pwm_Duty,w
  5568  0D91  0026               	movlb	6	; select bank6
  5569  0D92  0093               	movwf	19	;volatile
  5570                           
  5571                           ;pwm.c: 226: }
  5572  0D93  0008               	return
  5573  0D94                     l16430:	
  5574                           
  5575                           ;pwm.c: 231: CCPR3L=(unsigned char)(dduty>>2);
  5576  0D94  307A               	movlw	122
  5577  0D95  0026               	movlb	6	; select bank6
  5578                           
  5579                           ;pwm.c: 233: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  5580  0D96  2EE7               	ljmp	PL258	;call to abstracted procedure
  5581  0D97                     __end_of_Set_Bost_Pwm_Duty:	
  5582  0D97                     __ptext36:	
  5583 ;; *************** function _pid_init *****************
  5584 ;; Defined at:
  5585 ;;		line 138 in file "D:\MCUProject\ZH-SL-H40\src\PID.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  pp              2   11[BANK0 ] PTR struct PID_VAR
  5588 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;		None               void
  5593 ;; Registers used:
  5594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 1F/0
  5597 ;;		On exit  : 1F/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;Total ram usage:        2 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    3
  5607 ;; This function calls:
  5608 ;;		_memset
  5609 ;; This function is called by:
  5610 ;;		_application_init
  5611 ;;		_handle_task_process
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           
  5616                           ;psect for function _pid_init
  5617  0D97                     _pid_init:	
  5618                           
  5619                           ;PID.c: 140: memset (pp,0,sizeof(PID));
  5620                           
  5621                           ;incstack = 0
  5622                           ; Regs used in _pid_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5623  0D97  082C               	movf	pid_init@pp+1,w
  5624  0D98  00A4               	movwf	memset@p1+1
  5625  0D99  082B               	movf	pid_init@pp,w
  5626  0D9A  00A3               	movwf	memset@p1
  5627  0D9B  301C               	movlw	28
  5628  0D9C  01A5               	clrf	memset@c
  5629  0D9D  01A6               	clrf	memset@c+1
  5630  0D9E  00A7               	movwf	memset@n
  5631  0D9F  01A8               	clrf	memset@n+1
  5632  0DA0  2FE9               	ljmp	l14952
  5633  0DA1                     __end_of_pid_init:	
  5634  0DA1                     __ptext44:	
  5635 ;; *************** function _Disable_Buck_Pwm *****************
  5636 ;; Defined at:
  5637 ;;		line 139 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;		None               void
  5644 ;; Registers used:
  5645 ;;		None
  5646 ;; Tracked objects:
  5647 ;;		On entry : 1C/1
  5648 ;;		On exit  : 1F/8
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;Total ram usage:        0 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    2
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_Key_Menu
  5662 ;;		_scan_key_value
  5663 ;;		_handle_ad_loop
  5664 ;;		_handle_task_process
  5665 ;;		_handle_uart_rx_buf
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _Disable_Buck_Pwm
  5671  0DA1                     _Disable_Buck_Pwm:	
  5672                           
  5673                           ;pwm.c: 141: TRISCbits.TRISC2=1;
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in _Disable_Buck_Pwm: []
  5677  0DA1  0021               	movlb	1	; select bank1
  5678  0DA2  150E               	bsf	14,2	;volatile
  5679                           
  5680                           ;pwm.c: 143: TRISBbits.TRISB2=1;
  5681  0DA3  150D               	bsf	13,2	;volatile
  5682                           
  5683                           ;pwm.c: 145: TMR6ON=0;
  5684  0DA4  0028               	movlb	8	; select bank8
  5685  0DA5  111E               	bcf	30,2	;volatile
  5686  0DA6  0008               	return
  5687  0DA7                     __end_of_Disable_Buck_Pwm:	
  5688  0DA7                     __ptext41:	
  5689 ;; *************** function _Set_Buck_Pwm_Duty *****************
  5690 ;; Defined at:
  5691 ;;		line 157 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  duty            2    3[BANK0 ] unsigned int 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;		None               void
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 1F/0
  5702 ;;		On exit  : 1F/5
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;Total ram usage:        4 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    2
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_Key_Menu
  5716 ;;		_scan_key_value
  5717 ;;		_handle_ad_loop
  5718 ;;		_handle_task_process
  5719 ;;		_Mppt_Charge
  5720 ;;		_handle_uart_rx_buf
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _Set_Buck_Pwm_Duty
  5726  0DA7                     _Set_Buck_Pwm_Duty:	
  5727  0DA7                     l16912:	
  5728                           ;incstack = 0
  5729                           ; Regs used in _Set_Buck_Pwm_Duty: [wreg+status,2+status,0]
  5730                           
  5731                           
  5732                           ;pwm.c: 159: buck_pwm_value=duty;
  5733  0DA7  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
  5734  0DA8  0021               	movlb	1	; select bank1
  5735  0DA9  00C7               	movwf	(_buck_pwm_value+1)^(0+128)
  5736  0DAA  0020               	movlb	0	; select bank0
  5737  0DAB  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  5738  0DAC  0021               	movlb	1	; select bank1
  5739  0DAD  00C6               	movwf	_buck_pwm_value^(0+128)
  5740                           
  5741                           ;pwm.c: 161: if(duty<=900)
  5742  0DAE  3003               	movlw	3
  5743  0DAF  0020               	movlb	0	; select bank0
  5744  0DB0  0224               	subwf	Set_Buck_Pwm_Duty@duty+1,w
  5745  0DB1  3085               	movlw	133
  5746  0DB2  1903               	skipnz
  5747  0DB3  0223               	subwf	Set_Buck_Pwm_Duty@duty,w
  5748  0DB4  1803               	skipnc
  5749  0DB5  2DCF               	goto	l16918
  5750                           
  5751                           ;pwm.c: 162: {
  5752                           ;pwm.c: 163: CCPR1L=(unsigned char)(duty>>2);
  5753  0DB6  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
  5754  0DB7  00A6               	movwf	??_Set_Buck_Pwm_Duty+1
  5755  0DB8  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  5756  0DB9  00A5               	movwf	??_Set_Buck_Pwm_Duty
  5757  0DBA  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
  5758  0DBB  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
  5759  0DBC  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
  5760  0DBD  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
  5761  0DBE  0825               	movf	??_Set_Buck_Pwm_Duty,w
  5762  0DBF  0025               	movlb	5	; select bank5
  5763  0DC0  0091               	movwf	17	;volatile
  5764                           
  5765                           ;pwm.c: 165: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
  5766  0DC1  0020               	movlb	0	; select bank0
  5767  0DC2  0823               	movf	Set_Buck_Pwm_Duty@duty,w
  5768  0DC3  3903               	andlw	3
  5769  0DC4  00A5               	movwf	??_Set_Buck_Pwm_Duty
  5770  0DC5  0EA5               	swapf	??_Set_Buck_Pwm_Duty,f
  5771  0DC6  0025               	movlb	5	; select bank5
  5772  0DC7  0813               	movf	19,w	;volatile
  5773  0DC8  0020               	movlb	0	; select bank0
  5774  0DC9  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
  5775  0DCA  39CF               	andlw	-49
  5776  0DCB  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
  5777  0DCC  0025               	movlb	5	; select bank5
  5778  0DCD  0093               	movwf	19	;volatile
  5779                           
  5780                           ;pwm.c: 166: }
  5781  0DCE  0008               	return
  5782  0DCF                     l16918:	
  5783                           
  5784                           ;pwm.c: 171: CCPR1L=(unsigned char)(duty>>2);
  5785  0DCF  30E1               	movlw	225
  5786  0DD0  0025               	movlb	5	; select bank5
  5787                           
  5788                           ;pwm.c: 173: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
  5789  0DD1  2EE7               	ljmp	PL258	;call to abstracted procedure
  5790  0DD2                     __end_of_Set_Buck_Pwm_Duty:	
  5791  0DD2                     __ptext43:	
  5792 ;; *************** function _Enable_Bost_Pwm *****************
  5793 ;; Defined at:
  5794 ;;		line 186 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;		None               void
  5801 ;; Registers used:
  5802 ;;		None
  5803 ;; Tracked objects:
  5804 ;;		On entry : 1F/2
  5805 ;;		On exit  : 1F/8
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    2
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_Key_Menu
  5819 ;;		_scan_key_value
  5820 ;;		_handle_ad_loop
  5821 ;;		_handle_task_process
  5822 ;;		_handle_uart_rx_buf
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _Enable_Bost_Pwm
  5828  0DD2                     _Enable_Bost_Pwm:	
  5829                           
  5830                           ;pwm.c: 188: TRISBbits.TRISB5 =0;
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _Enable_Bost_Pwm: []
  5834  0DD2  0021               	movlb	1	; select bank1
  5835  0DD3  128D               	bcf	13,5	;volatile
  5836                           
  5837                           ;pwm.c: 190: TMR4ON=1;
  5838  0DD4  0028               	movlb	8	; select bank8
  5839  0DD5  1517               	bsf	23,2	;volatile
  5840  0DD6  0008               	return
  5841  0DD7                     __end_of_Enable_Bost_Pwm:	
  5842  0DD7                     __ptext14:	
  5843 ;; *************** function _delay_1us *****************
  5844 ;; Defined at:
  5845 ;;		line 41 in file "D:\MCUProject\ZH-SL-H40\src\delay.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;		None               void
  5852 ;; Registers used:
  5853 ;;		None
  5854 ;; Tracked objects:
  5855 ;;		On entry : 1F/2
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    2
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_handle_ad_loop
  5870 ;;		_handle_task_process
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           
  5875                           ;psect for function _delay_1us
  5876  0DD7                     _delay_1us:	
  5877                           
  5878                           ;delay.c: 43: __nop();
  5879                           
  5880                           ;incstack = 0
  5881                           ; Regs used in _delay_1us: []
  5882  0DD7  0000               	nop
  5883                           
  5884                           ;delay.c: 44: __nop();
  5885  0DD8  0000               	nop
  5886                           
  5887                           ;delay.c: 45: __nop();
  5888  0DD9  0000               	nop
  5889                           
  5890                           ;delay.c: 46: __nop();
  5891  0DDA  0000               	nop
  5892                           
  5893                           ;delay.c: 47: __nop();
  5894  0DDB  0000               	nop
  5895                           
  5896                           ;delay.c: 48: __nop();
  5897  0DDC  0000               	nop
  5898                           
  5899                           ;delay.c: 49: __nop();
  5900  0DDD  0000               	nop
  5901                           
  5902                           ;delay.c: 50: __nop();
  5903  0DDE  0000               	nop
  5904  0DDF  0008               	return
  5905  0DE0                     __end_of_delay_1us:	
  5906  0DE0                     __ptext2:	
  5907 ;; *************** function _middle_init *****************
  5908 ;; Defined at:
  5909 ;;		line 257 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 17F/2
  5920 ;;		On exit  : 1F/5
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    5
  5930 ;; This function calls:
  5931 ;;		_auto_system
  5932 ;;		_read_param_eeprom
  5933 ;; This function is called by:
  5934 ;;		_main
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function _middle_init
  5940  0DE0                     _middle_init:	
  5941                           
  5942                           ;main.c: 260: auto_system();
  5943                           
  5944                           ;incstack = 0
  5945                           ; Regs used in _middle_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5946  0DE0  31A2  2213         	fcall	_auto_system
  5947                           
  5948                           ;main.c: 262: read_param_eeprom();
  5949  0DE2  31A3  2BB5         	ljmp	l16436
  5950  0DE4                     __end_of_middle_init:	
  5951  0DE4                     PL22:	
  5952  0DE4  3901               	andlw	1
  5953  0DE5  0021               	movlb	1	; select bank1
  5954  0DE6  00A0               	movwf	??_scan_key_value^(0+128)
  5955  0DE7  01A1               	clrf	(??_scan_key_value^(0+128)+1)
  5956  0DE8  0020               	movlb	0	; select bank0
  5957  0DE9  0867               	movf	scan_key_value@key_temp+1,w
  5958  0DEA  0021               	movlb	1	; select bank1
  5959  0DEB  00A3               	movwf	((??_scan_key_value+2)^(0+128)+1)
  5960  0DEC  0020               	movlb	0	; select bank0
  5961  0DED  0866               	movf	scan_key_value@key_temp,w
  5962  0DEE  0021               	movlb	1	; select bank1
  5963  0DEF  00A2               	movwf	(??_scan_key_value+2)^(0+128)
  5964  0DF0  35A2               	lslf	(??_scan_key_value+2)^(0+128),f
  5965  0DF1  0DA3               	rlf	((??_scan_key_value+2)^(0+128)+1),f
  5966  0DF2  0820               	movf	??_scan_key_value^(0+128),w
  5967  0DF3  0422               	iorwf	(??_scan_key_value+2)^(0+128),w
  5968  0DF4  00A4               	movwf	(??_scan_key_value+4)^(0+128)
  5969  0DF5  0821               	movf	(??_scan_key_value+1)^(0+128),w
  5970  0DF6  0423               	iorwf	(??_scan_key_value+3)^(0+128),w
  5971  0DF7  00A5               	movwf	(??_scan_key_value+5)^(0+128)
  5972  0DF8  0824               	movf	(??_scan_key_value+4)^(0+128),w
  5973  0DF9  0020               	movlb	0	; select bank0
  5974  0DFA  00E6               	movwf	scan_key_value@key_temp
  5975  0DFB  0021               	movlb	1	; select bank1
  5976  0DFC  0825               	movf	(??_scan_key_value+5)^(0+128),w
  5977  0DFD  0020               	movlb	0	; select bank0
  5978  0DFE  00E7               	movwf	scan_key_value@key_temp+1
  5979  0DFF  0008               	return
  5980  0E00                     __end_ofPL22:	
  5981  0E00                     PL24:	
  5982  0E00  0837               	movf	?___flmul+3,w
  5983  0E01  0023               	movlb	3	; select bank3
  5984  0E02  00CA               	movwf	(_PID_CC_discharge+3)^(0+384)
  5985  0E03  0020               	movlb	0	; select bank0
  5986  0E04  0836               	movf	?___flmul+2,w
  5987  0E05  0023               	movlb	3	; select bank3
  5988  0E06  00C9               	movwf	(_PID_CC_discharge+2)^(0+384)
  5989  0E07  0020               	movlb	0	; select bank0
  5990  0E08  0835               	movf	?___flmul+1,w
  5991  0E09  0023               	movlb	3	; select bank3
  5992  0E0A  00C8               	movwf	(_PID_CC_discharge+1)^(0+384)
  5993  0E0B  0020               	movlb	0	; select bank0
  5994  0E0C  0834               	movf	?___flmul,w
  5995  0E0D  0023               	movlb	3	; select bank3
  5996  0E0E  00C7               	movwf	_PID_CC_discharge^(0+384)
  5997  0E0F  0008               	return
  5998  0E10                     __end_ofPL24:	
  5999  0E10                     PL48:	
  6000  0E10  0022               	movlb	2	; select bank2
  6001  0E11  01BE               	clrf	_open_discharge_time^(0+256)
  6002  0E12  0023               	movlb	3	; select bank3
  6003  0E13  01B8               	clrf	_ms_cnt^(0+384)
  6004  0E14  01B9               	clrf	(_ms_cnt+1)^(0+384)
  6005  0E15  01BA               	clrf	_se_cnt^(0+384)
  6006  0E16  01BB               	clrf	(_se_cnt+1)^(0+384)
  6007  0E17  01B6               	clrf	_mi_cnt^(0+384)
  6008  0E18  01B7               	clrf	(_mi_cnt+1)^(0+384)
  6009  0E19  0021               	movlb	1	; select bank1
  6010  0E1A  01CC               	clrf	_ho_cnt^(0+128)
  6011  0E1B  01CD               	clrf	(_ho_cnt+1)^(0+128)
  6012  0E1C  0023               	movlb	3	; select bank3
  6013  0E1D  01C2               	clrf	_limit_power_pid_flag^(0+384)
  6014  0E1E  0021               	movlb	1	; select bank1
  6015  0E1F  01D2               	clrf	_Adjust_Pout_Flag^(0+128)
  6016  0E20  01EE               	clrf	_voltage_adjust_index^(0+128)
  6017  0E21  0AEE               	incf	_voltage_adjust_index^(0+128),f
  6018  0E22  0022               	movlb	2	; select bank2
  6019  0E23  01B6               	clrf	_nop_index^(0+256)
  6020  0E24  0008               	return
  6021  0E25                     __end_ofPL48:	
  6022  0E25                     PL64:	
  6023  0E25  01C2               	clrf	_pv_voltage_status^(0+256)
  6024  0E26  0025               	movlb	5	; select bank5
  6025  0E27  01A4               	clrf	_day_time_count^(0+640)
  6026  0E28  01A5               	clrf	(_day_time_count+1)^(0+640)
  6027  0E29  01A6               	clrf	(_day_time_count+2)^(0+640)
  6028  0E2A  01A7               	clrf	(_day_time_count+3)^(0+640)
  6029  0E2B  0024               	movlb	4	; select bank4
  6030  0E2C  01B4               	clrf	_night_time_count^(0+512)
  6031  0E2D  01B5               	clrf	(_night_time_count+1)^(0+512)
  6032  0E2E  01B6               	clrf	(_night_time_count+2)^(0+512)
  6033  0E2F  01B7               	clrf	(_night_time_count+3)^(0+512)
  6034  0E30  0025               	movlb	5	; select bank5
  6035  0E31  01A8               	clrf	_pv_time_count^(0+640)
  6036  0E32  01A9               	clrf	(_pv_time_count+1)^(0+640)
  6037  0E33  01AA               	clrf	(_pv_time_count+2)^(0+640)
  6038  0E34  01AB               	clrf	(_pv_time_count+3)^(0+640)
  6039  0E35  0008               	return
  6040  0E36                     __end_ofPL64:	
  6041  0E36                     PL88:	
  6042  0E36  01B6               	clrf	_nop_index^(0+256)
  6043  0E37  0021               	movlb	1	; select bank1
  6044  0E38  01D4               	clrf	_discharge_index^(0+128)
  6045  0E39  01D3               	clrf	_charge_index^(0+128)
  6046  0E3A  01D6               	clrf	_led_out_ctrl^(0+128)
  6047  0E3B  0856               	movf	_led_out_ctrl^(0+128),w
  6048  0E3C  0020               	movlb	0	; select bank0
  6049  0E3D  00E4               	movwf	eeprom_write@value
  6050  0E3E  3439               	retlw	57
  6051  0E3F                     __end_ofPL88:	
  6052  0E3F                     PL104:	
  6053  0E3F  0022               	movlb	2	; select bank2
  6054  0E40  118E               	bcf	14,3	;volatile
  6055  0E41  0020               	movlb	0	; select bank0
  6056  0E42  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
  6057  0E43  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  6058  0E44  0008               	return
  6059  0E45                     __end_ofPL104:	
  6060  0E45                     PL166:	
  6061  0E45  0022               	movlb	2	; select bank2
  6062  0E46  01B6               	clrf	_nop_index^(0+256)
  6063  0E47  0021               	movlb	1	; select bank1
  6064  0E48  01D4               	clrf	_discharge_index^(0+128)
  6065  0E49  01D3               	clrf	_charge_index^(0+128)
  6066  0E4A  0008               	return
  6067  0E4B                     __end_ofPL166:	
  6068  0E4B                     PL174:	
  6069  0E4B  01D6               	clrf	_led_out_ctrl^(0+128)
  6070  0E4C  0856               	movf	_led_out_ctrl^(0+128),w
  6071  0E4D  0020               	movlb	0	; select bank0
  6072  0E4E  00E4               	movwf	eeprom_write@value
  6073  0E4F  3439               	retlw	57
  6074  0E50                     __end_ofPL174:	
  6075  0E50                     PL182:	
  6076  0E50  0022               	movlb	2	; select bank2
  6077  0E51  140E               	bsf	14,0	;volatile
  6078  0E52  3042               	movlw	66
  6079  0E53  0021               	movlb	1	; select bank1
  6080  0E54  00C3               	movwf	(_PWM+3)^(0+128)
  6081  0E55  3048               	movlw	72
  6082  0E56  00C2               	movwf	(_PWM+2)^(0+128)
  6083  0E57  3032               	movlw	50
  6084  0E58  01C1               	clrf	(_PWM+1)^(0+128)
  6085  0E59  01C0               	clrf	_PWM^(0+128)
  6086  0E5A  0008               	return
  6087  0E5B                     __end_ofPL182:	
  6088  0E5B                     PL202:	
  6089  0E5B  30E8               	movlw	232
  6090  0E5C  0020               	movlb	0	; select bank0
  6091  0E5D  00A3               	movwf	delay_ms@count
  6092  0E5E  3003               	movlw	3
  6093  0E5F  00A4               	movwf	delay_ms@count+1
  6094  0E60  0008               	return
  6095  0E61                     __end_ofPL202:	
  6096  0E61                     PL204:	
  6097  0E61  30C8               	movlw	200
  6098  0E62  0020               	movlb	0	; select bank0
  6099  0E63  00A3               	movwf	delay_ms@count
  6100  0E64  01A4               	clrf	delay_ms@count+1
  6101  0E65  0008               	return
  6102  0E66                     __end_ofPL204:	
  6103  0E66                     PL240:	
  6104  0E66  30C8               	movlw	200
  6105  0E67  0020               	movlb	0	; select bank0
  6106  0E68  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
  6107  0E69  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
  6108  0E6A  0008               	return
  6109  0E6B                     __end_ofPL240:	
  6110  0E6B                     PL266:	
  6111  0E6B  0022               	movlb	2	; select bank2
  6112  0E6C  01C7               	clrf	_sys_power_ch^(0+256)
  6113  0E6D  130C               	bcf	12,6	;volatile
  6114  0E6E  138C               	bcf	12,7	;volatile
  6115  0E6F  0008               	return
  6116  0E70                     __end_ofPL266:	
  6117  0E70                     PL270:	
  6118  0E70  0857               	movf	_light_mode^(0+128),w
  6119  0E71  0020               	movlb	0	; select bank0
  6120  0E72  00E4               	movwf	eeprom_write@value
  6121  0E73  3436               	retlw	54
  6122  0E74                     __end_ofPL270:	
  6123  0E74                     __ptext23:	
  6124 ;; *************** function ___fltol *****************
  6125 ;; Defined at:
  6126 ;;		line 43 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fltol.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  f1              4   58[BANK0 ] unsigned int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  exp1            1   67[BANK0 ] unsigned char 
  6131 ;;  sign1           1   66[BANK0 ] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  4   58[BANK0 ] long 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 1F/0
  6138 ;;		On exit  : 1F/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;Total ram usage:       10 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    2
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_handle_ad_loop
  6152 ;;		_handle_task_process
  6153 ;;		_Mppt_Charge
  6154 ;;		_handle_uart_rx_buf
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function ___fltol
  6160  0E74                     ___fltol:	
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6164  0E74  26BB  3188         	fcall	PL206	;call to abstracted procedure
  6165  0E76  1003               	clrc
  6166  0E77  0D60               	rlf	??___fltol+2,w
  6167  0E78  0D61               	rlf	??___fltol+3,w
  6168  0E79  00E3               	movwf	___fltol@exp1
  6169  0E7A  08E3               	movf	___fltol@exp1,f
  6170  0E7B  1D03               	skipz
  6171  0E7C  2E82               	goto	l19146
  6172  0E7D                     l19144:	
  6173  0E7D  01DA               	clrf	?___fltol
  6174  0E7E  01DB               	clrf	?___fltol+1
  6175  0E7F  01DC               	clrf	?___fltol+2
  6176  0E80  01DD               	clrf	?___fltol+3
  6177  0E81  0008               	return
  6178  0E82                     l19146:	
  6179  0E82  26BB  3188         	fcall	PL206	;call to abstracted procedure
  6180  0E84  301F               	movlw	31
  6181  0E85                     u12125:	
  6182  0E85  36E1               	lsrf	??___fltol+3,f
  6183  0E86  0CE0               	rrf	??___fltol+2,f
  6184  0E87  0CDF               	rrf	??___fltol+1,f
  6185  0E88  0CDE               	rrf	??___fltol,f
  6186  0E89  0B89               	decfsz	9,f
  6187  0E8A  2E85               	goto	u12125
  6188  0E8B  085E               	movf	??___fltol,w
  6189  0E8C  00E2               	movwf	___fltol@sign1
  6190  0E8D  3096               	movlw	150
  6191  0E8E  17DC               	bsf	___fltol@f1+2,7
  6192  0E8F  01DD               	clrf	___fltol@f1+3
  6193  0E90  02E3               	subwf	___fltol@exp1,f
  6194  0E91  1FE3               	btfss	___fltol@exp1,7
  6195  0E92  2E9F               	goto	l19164
  6196  0E93  0863               	movf	___fltol@exp1,w
  6197  0E94  3A80               	xorlw	128
  6198  0E95  3E97               	addlw	151
  6199  0E96  1C03               	btfss	3,0
  6200  0E97  2E7D               	goto	l19144
  6201  0E98                     l19160:	
  6202  0E98  36DD               	lsrf	___fltol@f1+3,f
  6203  0E99  0CDC               	rrf	___fltol@f1+2,f
  6204  0E9A  0CDB               	rrf	___fltol@f1+1,f
  6205  0E9B  0CDA               	rrf	___fltol@f1,f
  6206  0E9C  0FE3               	incfsz	___fltol@exp1,f
  6207  0E9D  2E98               	goto	l19160
  6208  0E9E  2EAC               	goto	l19170
  6209  0E9F                     l19164:	
  6210  0E9F  3020               	movlw	32
  6211  0EA0  0263               	subwf	___fltol@exp1,w
  6212  0EA1  1803               	btfsc	3,0
  6213  0EA2  2E7D               	goto	l19144
  6214  0EA3                     l2171:	
  6215  0EA3  08E3               	movf	___fltol@exp1,f
  6216  0EA4  1903               	btfsc	3,2
  6217  0EA5  2EAC               	goto	l19170
  6218  0EA6  35DA               	lslf	___fltol@f1,f
  6219  0EA7  0DDB               	rlf	___fltol@f1+1,f
  6220  0EA8  0DDC               	rlf	___fltol@f1+2,f
  6221  0EA9  0DDD               	rlf	___fltol@f1+3,f
  6222  0EAA  03E3               	decf	___fltol@exp1,f
  6223  0EAB  2EA3               	goto	l2171
  6224  0EAC                     l19170:	
  6225  0EAC  0862               	movf	___fltol@sign1,w
  6226  0EAD  1903               	btfsc	3,2
  6227  0EAE  0008               	return
  6228  0EAF  09DA               	comf	___fltol@f1,f
  6229  0EB0  09DB               	comf	___fltol@f1+1,f
  6230  0EB1  09DC               	comf	___fltol@f1+2,f
  6231  0EB2  09DD               	comf	___fltol@f1+3,f
  6232  0EB3  0ADA               	incf	___fltol@f1,f
  6233  0EB4  1903               	skipnz
  6234  0EB5  0ADB               	incf	___fltol@f1+1,f
  6235  0EB6  1903               	skipnz
  6236  0EB7  0ADC               	incf	___fltol@f1+2,f
  6237  0EB8  1903               	skipnz
  6238  0EB9  0ADD               	incf	___fltol@f1+3,f
  6239  0EBA  0008               	return
  6240  0EBB                     __end_of___fltol:	
  6241  0EBB                     PL206:	
  6242  0EBB  085A               	movf	___fltol@f1,w
  6243  0EBC  00DE               	movwf	??___fltol
  6244  0EBD  085B               	movf	___fltol@f1+1,w
  6245  0EBE  00DF               	movwf	??___fltol+1
  6246  0EBF  085C               	movf	___fltol@f1+2,w
  6247  0EC0  00E0               	movwf	??___fltol+2
  6248  0EC1  085D               	movf	___fltol@f1+3,w
  6249  0EC2  00E1               	movwf	??___fltol+3
  6250  0EC3  0008               	return
  6251  0EC4                     __end_ofPL206:	
  6252  0EC4                     __ptext51:	
  6253 ;; *************** function i1_Set_Bost_Pwm_Duty *****************
  6254 ;; Defined at:
  6255 ;;		line 216 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  dduty           2    0[COMMON] unsigned int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;		None               void
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 1F/1
  6266 ;;		On exit  : 1F/6
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;Total ram usage:        4 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_isr
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function i1_Set_Bost_Pwm_Duty
  6284  0EC4                     i1_Set_Bost_Pwm_Duty:	
  6285                           
  6286                           ;pwm.c: 219: bost_pwm_value=dduty;
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in i1_Set_Bost_Pwm_Duty: [wreg+status,2+status,0]
  6290  0EC4  0871               	movf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6291  0EC5  00C5               	movwf	(_bost_pwm_value+1)^(0+128)
  6292  0EC6  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6293  0EC7  00C4               	movwf	_bost_pwm_value^(0+128)
  6294                           
  6295                           ;pwm.c: 221: if(dduty<=488)
  6296  0EC8  3001               	movlw	1
  6297  0EC9  0271               	subwf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6298  0ECA  30E9               	movlw	233
  6299  0ECB  1903               	skipnz
  6300  0ECC  0270               	subwf	i1Set_Bost_Pwm_Duty@dduty,w
  6301  0ECD  1803               	skipnc
  6302  0ECE  2EE4               	goto	i1l15408
  6303                           
  6304                           ;pwm.c: 222: {
  6305                           ;pwm.c: 223: CCPR3L=(unsigned char)(dduty>>2);
  6306  0ECF  0871               	movf	i1Set_Bost_Pwm_Duty@dduty+1,w
  6307  0ED0  00F3               	movwf	??i1_Set_Bost_Pwm_Duty+1
  6308  0ED1  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6309  0ED2  00F2               	movwf	??i1_Set_Bost_Pwm_Duty
  6310  0ED3  36F3               	lsrf	??i1_Set_Bost_Pwm_Duty+1,f
  6311  0ED4  0CF2               	rrf	??i1_Set_Bost_Pwm_Duty,f
  6312  0ED5  36F3               	lsrf	??i1_Set_Bost_Pwm_Duty+1,f
  6313  0ED6  0CF2               	rrf	??i1_Set_Bost_Pwm_Duty,f
  6314  0ED7  0872               	movf	??i1_Set_Bost_Pwm_Duty,w
  6315  0ED8  0026               	movlb	6	; select bank6
  6316  0ED9  0091               	movwf	17	;volatile
  6317                           
  6318                           ;pwm.c: 225: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  6319  0EDA  0870               	movf	i1Set_Bost_Pwm_Duty@dduty,w
  6320  0EDB  3903               	andlw	3
  6321  0EDC  00F2               	movwf	??i1_Set_Bost_Pwm_Duty
  6322  0EDD  0EF2               	swapf	??i1_Set_Bost_Pwm_Duty,f
  6323  0EDE  0813               	movf	19,w	;volatile
  6324  0EDF  0672               	xorwf	??i1_Set_Bost_Pwm_Duty,w
  6325  0EE0  39CF               	andlw	-49
  6326  0EE1  0672               	xorwf	??i1_Set_Bost_Pwm_Duty,w
  6327  0EE2  0093               	movwf	19	;volatile
  6328                           
  6329                           ;pwm.c: 226: }
  6330  0EE3  0008               	return
  6331  0EE4                     i1l15408:	
  6332                           
  6333                           ;pwm.c: 231: CCPR3L=(unsigned char)(dduty>>2);
  6334  0EE4  307A               	movlw	122
  6335  0EE5  0026               	movlb	6	; select bank6
  6336                           
  6337                           ;pwm.c: 233: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
  6338  0EE6  2EE7               	ljmp	PL258	;call to abstracted procedure
  6339  0EE7                     __end_ofi1_Set_Bost_Pwm_Duty:	
  6340  0EE7                     PL258:	
  6341  0EE7  0091               	movwf	17	;volatile
  6342  0EE8  30CF               	movlw	-49
  6343  0EE9  0593               	andwf	19,f	;volatile
  6344  0EEA  0008               	return
  6345  0EEB                     __end_ofPL258:	
  6346  0EEB                     __ptext25:	
  6347 ;; *************** function _driver_init *****************
  6348 ;; Defined at:
  6349 ;;		line 225 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, pclath, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 17F/0
  6360 ;;		On exit  : 17F/2
  6361 ;;		Unchanged: 160/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    3
  6370 ;; This function calls:
  6371 ;;		_Init_Ird
  6372 ;;		_init_adc
  6373 ;;		_init_interrupt
  6374 ;;		_init_key
  6375 ;;		_init_osc
  6376 ;;		_init_port
  6377 ;;		_init_pwm
  6378 ;;		_init_timer1
  6379 ;;		_init_uart1
  6380 ;; This function is called by:
  6381 ;;		_main
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function _driver_init
  6387  0EEB                     _driver_init:	
  6388                           
  6389                           ;main.c: 227: init_osc();
  6390                           
  6391                           ;incstack = 0
  6392                           ; Regs used in _driver_init: [wreg+status,2+status,0+pclath+cstack]
  6393  0EEB  2736  3188         	fcall	_init_osc
  6394                           
  6395                           ;main.c: 229: init_port();
  6396  0EED  273E  3188         	fcall	_init_port
  6397                           
  6398                           ;main.c: 231: init_key();
  6399  0EEF  2730  3188         	fcall	_init_key
  6400                           
  6401                           ;main.c: 233: init_timer1();
  6402  0EF1  275A  3188         	fcall	_init_timer1
  6403                           
  6404                           ;main.c: 235: init_uart1();
  6405  0EF3  2767  3188         	fcall	_init_uart1
  6406                           
  6407                           ;main.c: 237: Init_Ird();
  6408  0EF5  26FC  3188         	fcall	_Init_Ird
  6409                           
  6410                           ;main.c: 239: init_adc();
  6411  0EF7  2711  3188         	fcall	_init_adc
  6412                           
  6413                           ;main.c: 241: init_pwm();
  6414  0EF9  278C  3188         	fcall	_init_pwm
  6415                           
  6416                           ;main.c: 243: init_interrupt();
  6417  0EFB  2F78               	ljmp	l12396
  6418  0EFC                     __end_of_driver_init:	
  6419  0EFC                     __ptext34:	
  6420 ;; *************** function _Init_Ird *****************
  6421 ;; Defined at:
  6422 ;;		line 562 in file "D:\MCUProject\ZH-SL-H40\src\ird_remote.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;		None               void
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0
  6431 ;; Tracked objects:
  6432 ;;		On entry : 17F/1
  6433 ;;		On exit  : 17F/0
  6434 ;;		Unchanged: 160/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;Total ram usage:        0 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    2
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_driver_init
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           
  6451                           ;psect for function _Init_Ird
  6452  0EFC                     _Init_Ird:	
  6453                           
  6454                           ;ird_remote.c: 564: TRISBbits.TRISB7 = 1;
  6455                           
  6456                           ;incstack = 0
  6457                           ; Regs used in _Init_Ird: [wreg+status,2+status,0]
  6458  0EFC  178D               	bsf	13,7	;volatile
  6459                           
  6460                           ;ird_remote.c: 566: IOCBNbits.IOCBN7 = 1;
  6461  0EFD  0027               	movlb	7	; select bank7
  6462  0EFE  1795               	bsf	21,7	;volatile
  6463                           
  6464                           ;ird_remote.c: 568: IOCBFbits.IOCBF7 = 0;
  6465  0EFF  1396               	bcf	22,7	;volatile
  6466                           
  6467                           ;ird_remote.c: 570: TRISBbits.TRISB4 = 1;
  6468  0F00  0021               	movlb	1	; select bank1
  6469  0F01  160D               	bsf	13,4	;volatile
  6470                           
  6471                           ;ird_remote.c: 572: IOCBNbits.IOCBN4 = 1;
  6472  0F02  0027               	movlb	7	; select bank7
  6473  0F03  1615               	bsf	21,4	;volatile
  6474                           
  6475                           ;ird_remote.c: 574: IOCBFbits.IOCBF4 = 0;
  6476  0F04  1216               	bcf	22,4	;volatile
  6477                           
  6478                           ;ird_remote.c: 576: IOCIF = 0;
  6479  0F05  100B               	bcf	11,0	;volatile
  6480                           
  6481                           ;ird_remote.c: 578: IOCIE = 1;
  6482  0F06  158B               	bsf	11,3	;volatile
  6483                           
  6484                           ;ird_remote.c: 581: TMR0CS = 0;
  6485  0F07  0021               	movlb	1	; select bank1
  6486  0F08  1295               	bcf	21,5	;volatile
  6487                           
  6488                           ;ird_remote.c: 583: PSA = 0;
  6489  0F09  1195               	bcf	21,3	;volatile
  6490                           
  6491                           ;ird_remote.c: 585: OPTION_REGbits.PS = 0b111;
  6492  0F0A  3007               	movlw	7
  6493  0F0B  0495               	iorwf	21,f	;volatile
  6494                           
  6495                           ;ird_remote.c: 587: TMR0IF = 0;
  6496  0F0C  110B               	bcf	11,2	;volatile
  6497                           
  6498                           ;ird_remote.c: 589: TMR0 = 0;
  6499  0F0D  0020               	movlb	0	; select bank0
  6500  0F0E  0195               	clrf	21	;volatile
  6501                           
  6502                           ;ird_remote.c: 591: TMR0IE = 0;
  6503  0F0F  128B               	bcf	11,5	;volatile
  6504  0F10  0008               	return
  6505  0F11                     __end_of_Init_Ird:	
  6506  0F11                     __ptext33:	
  6507 ;; *************** function _init_adc *****************
  6508 ;; Defined at:
  6509 ;;		line 37 in file "D:\MCUProject\ZH-SL-H40\src\adc.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 17F/0
  6520 ;;		On exit  : 17F/0
  6521 ;;		Unchanged: 160/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;Total ram usage:        0 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    2
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_driver_init
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function _init_adc
  6539  0F11                     _init_adc:	
  6540                           
  6541                           ;adc.c: 40: TRISAbits.TRISA0 = 1;
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  6545  0F11  0021               	movlb	1	; select bank1
  6546                           
  6547                           ;adc.c: 42: TRISAbits.TRISA1 = 1;
  6548                           
  6549                           ;adc.c: 44: TRISAbits.TRISA2 = 1;
  6550                           
  6551                           ;adc.c: 46: TRISAbits.TRISA3 = 1;
  6552                           
  6553                           ;adc.c: 48: TRISAbits.TRISA5 = 1;
  6554  0F12  27E3               	fcall	PL254	;call to abstracted procedure
  6555                           
  6556                           ;adc.c: 50: TRISBbits.TRISB3 = 1;
  6557  0F13  158D               	bsf	13,3	;volatile
  6558                           
  6559                           ;adc.c: 52: TRISBbits.TRISB1 = 1;
  6560  0F14  148D               	bsf	13,1	;volatile
  6561                           
  6562                           ;adc.c: 54: TRISBbits.TRISB0 = 1;
  6563  0F15  140D               	bsf	13,0	;volatile
  6564                           
  6565                           ;adc.c: 58: ADCON1bits.ADFM =0b1;
  6566  0F16  179E               	bsf	30,7	;volatile
  6567                           
  6568                           ;adc.c: 60: ADCON1bits.ADCS =0b110;
  6569  0F17  081E               	movf	30,w	;volatile
  6570  0F18  398F               	andlw	-113
  6571  0F19  3860               	iorlw	96
  6572  0F1A  009E               	movwf	30	;volatile
  6573                           
  6574                           ;adc.c: 62: ADCON1bits.ADNREF =0b0;
  6575  0F1B  111E               	bcf	30,2	;volatile
  6576                           
  6577                           ;adc.c: 64: ADCON1bits.ADPREF =0b11;
  6578  0F1C  3003               	movlw	3
  6579  0F1D  049E               	iorwf	30,f	;volatile
  6580                           
  6581                           ;adc.c: 66: FVRCONbits.ADFVR =0b01;
  6582  0F1E  0022               	movlb	2	; select bank2
  6583  0F1F  0817               	movf	23,w	;volatile
  6584  0F20  39FC               	andlw	-4
  6585  0F21  3801               	iorlw	1
  6586  0F22  0097               	movwf	23	;volatile
  6587                           
  6588                           ;adc.c: 68: FVRCONbits.FVREN =0b1;
  6589  0F23  1797               	bsf	23,7	;volatile
  6590                           
  6591                           ;adc.c: 70: FVRCONbits.TSEN =0b1;
  6592  0F24  1697               	bsf	23,5	;volatile
  6593                           
  6594                           ;adc.c: 72: FVRCONbits.TSRNG=0b1;
  6595  0F25  1617               	bsf	23,4	;volatile
  6596                           
  6597                           ;adc.c: 74: ADCON0bits.CHS =0b11101;
  6598  0F26  0021               	movlb	1	; select bank1
  6599  0F27  081D               	movf	29,w	;volatile
  6600  0F28  3983               	andlw	-125
  6601  0F29  3874               	iorlw	116
  6602  0F2A  009D               	movwf	29	;volatile
  6603                           
  6604                           ;adc.c: 76: ADCON0bits.ADON =0b0;
  6605  0F2B  101D               	bcf	29,0	;volatile
  6606                           
  6607                           ;adc.c: 78: PIE1bits.ADIE=0;
  6608  0F2C  1311               	bcf	17,6	;volatile
  6609                           
  6610                           ;adc.c: 80: PIR1bits.ADIF=0;
  6611  0F2D  0020               	movlb	0	; select bank0
  6612  0F2E  1311               	bcf	17,6	;volatile
  6613  0F2F  0008               	return
  6614  0F30                     __end_of_init_adc:	
  6615  0F30                     __ptext31:	
  6616 ;; *************** function _init_key *****************
  6617 ;; Defined at:
  6618 ;;		line 46 in file "D:\MCUProject\ZH-SL-H40\src\key.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;		None               void
  6625 ;; Registers used:
  6626 ;;		None
  6627 ;; Tracked objects:
  6628 ;;		On entry : 17F/2
  6629 ;;		On exit  : 17F/1
  6630 ;;		Unchanged: 160/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;Total ram usage:        0 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    2
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_driver_init
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _init_key
  6648  0F30                     _init_key:	
  6649                           
  6650                           ;key.c: 48: (TRISBbits.TRISB4) = 1;
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _init_key: []
  6654  0F30  0021               	movlb	1	; select bank1
  6655  0F31  160D               	bsf	13,4	;volatile
  6656                           
  6657                           ;key.c: 49: (TRISCbits.TRISC6) = 1;
  6658  0F32  170E               	bsf	14,6	;volatile
  6659                           
  6660                           ;key.c: 50: (TRISCbits.TRISC5) = 1;
  6661  0F33  168E               	bsf	14,5	;volatile
  6662                           
  6663                           ;key.c: 51: (TRISCbits.TRISC4) = 1;
  6664  0F34  160E               	bsf	14,4	;volatile
  6665  0F35  0008               	return
  6666  0F36                     __end_of_init_key:	
  6667  0F36                     __ptext30:	
  6668 ;; *************** function _init_osc *****************
  6669 ;; Defined at:
  6670 ;;		line 157 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 17F/0
  6681 ;;		On exit  : 17F/1
  6682 ;;		Unchanged: 160/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    2
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_driver_init
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _init_osc
  6700  0F36                     _init_osc:	
  6701                           
  6702                           ;main.c: 159: OSCCON = 0x70;
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _init_osc: [wreg+status,2+status,0]
  6706  0F36  3070               	movlw	112
  6707  0F37  0021               	movlb	1	; select bank1
  6708  0F38  0099               	movwf	25	;volatile
  6709                           
  6710                           ;main.c: 160: WDTCONbits.WDTPS=0b01110;
  6711  0F39  0817               	movf	23,w	;volatile
  6712  0F3A  39C1               	andlw	-63
  6713  0F3B  381C               	iorlw	28
  6714  0F3C  0097               	movwf	23	;volatile
  6715  0F3D  0008               	return
  6716  0F3E                     __end_of_init_osc:	
  6717  0F3E                     __ptext29:	
  6718 ;; *************** function _init_port *****************
  6719 ;; Defined at:
  6720 ;;		line 174 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;		None               void
  6727 ;; Registers used:
  6728 ;;		status,2
  6729 ;; Tracked objects:
  6730 ;;		On entry : 17F/1
  6731 ;;		On exit  : 17F/2
  6732 ;;		Unchanged: 160/0
  6733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;Total ram usage:        0 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    2
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_driver_init
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           
  6749                           ;psect for function _init_port
  6750  0F3E                     _init_port:	
  6751                           
  6752                           ;main.c: 176: ANSELA = 0x00;
  6753                           
  6754                           ;incstack = 0
  6755                           ; Regs used in _init_port: [status,2]
  6756  0F3E  0023               	movlb	3	; select bank3
  6757  0F3F  018C               	clrf	12	;volatile
  6758                           
  6759                           ;main.c: 177: ANSELB = 0x00;
  6760  0F40  018D               	clrf	13	;volatile
  6761                           
  6762                           ;main.c: 179: ANSA0 = 1;
  6763                           
  6764                           ;main.c: 180: ANSA1 = 1;
  6765                           
  6766                           ;main.c: 181: ANSA2 = 1;
  6767                           
  6768                           ;main.c: 182: ANSA3 = 1;
  6769                           
  6770                           ;main.c: 183: ANSA5 = 1;
  6771  0F41  27E3               	fcall	PL254	;call to abstracted procedure
  6772                           
  6773                           ;main.c: 185: ANSB1 = 1;
  6774  0F42  148D               	bsf	13,1	;volatile
  6775                           
  6776                           ;main.c: 186: ANSB3 = 1;
  6777  0F43  158D               	bsf	13,3	;volatile
  6778                           
  6779                           ;main.c: 187: ANSB0 = 1;
  6780  0F44  140D               	bsf	13,0	;volatile
  6781                           
  6782                           ;main.c: 189: TRISCbits.TRISC1=1;
  6783  0F45  0021               	movlb	1	; select bank1
  6784  0F46  148E               	bsf	14,1	;volatile
  6785                           
  6786                           ;main.c: 191: TRISCbits.TRISC3=0;
  6787  0F47  118E               	bcf	14,3	;volatile
  6788                           
  6789                           ;main.c: 193: (LATCbits.LATC3 = 0x00);
  6790  0F48  0022               	movlb	2	; select bank2
  6791  0F49  118E               	bcf	14,3	;volatile
  6792                           
  6793                           ;main.c: 195: TRISCbits.TRISC2=1;
  6794  0F4A  0021               	movlb	1	; select bank1
  6795  0F4B  150E               	bsf	14,2	;volatile
  6796                           
  6797                           ;main.c: 197: TRISBbits.TRISB2=1;
  6798  0F4C  150D               	bsf	13,2	;volatile
  6799                           
  6800                           ;main.c: 199: TRISBbits.TRISB5 =1;
  6801  0F4D  168D               	bsf	13,5	;volatile
  6802                           
  6803                           ;main.c: 203: TRISAbits.TRISA6 = 0;
  6804  0F4E  130C               	bcf	12,6	;volatile
  6805                           
  6806                           ;main.c: 204: (LATAbits.LATA6 = 0x00);
  6807  0F4F  0022               	movlb	2	; select bank2
  6808  0F50  130C               	bcf	12,6	;volatile
  6809                           
  6810                           ;main.c: 206: TRISAbits.TRISA7 = 0;
  6811  0F51  0021               	movlb	1	; select bank1
  6812  0F52  138C               	bcf	12,7	;volatile
  6813                           
  6814                           ;main.c: 207: (LATAbits.LATA7 = 0x00);
  6815  0F53  0022               	movlb	2	; select bank2
  6816  0F54  138C               	bcf	12,7	;volatile
  6817                           
  6818                           ;main.c: 209: TRISCbits.TRISC0 = 0;
  6819  0F55  0021               	movlb	1	; select bank1
  6820  0F56  100E               	bcf	14,0	;volatile
  6821                           
  6822                           ;main.c: 210: (LATCbits.LATC0 = 0x01);
  6823  0F57  0022               	movlb	2	; select bank2
  6824  0F58  140E               	bsf	14,0	;volatile
  6825  0F59  0008               	return
  6826  0F5A                     __end_of_init_port:	
  6827  0F5A                     __ptext27:	
  6828 ;; *************** function _init_timer1 *****************
  6829 ;; Defined at:
  6830 ;;		line 42 in file "D:\MCUProject\ZH-SL-H40\src\timer.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;		None               void
  6837 ;; Registers used:
  6838 ;;		wreg
  6839 ;; Tracked objects:
  6840 ;;		On entry : 17F/1
  6841 ;;		On exit  : 17F/0
  6842 ;;		Unchanged: 160/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    2
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_driver_init
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           
  6859                           ;psect for function _init_timer1
  6860  0F5A                     _init_timer1:	
  6861                           
  6862                           ;timer.c: 44: TMR1H = 0xE0;
  6863                           
  6864                           ;incstack = 0
  6865                           ; Regs used in _init_timer1: [wreg]
  6866  0F5A  30E0               	movlw	224
  6867  0F5B  0020               	movlb	0	; select bank0
  6868  0F5C  0097               	movwf	23	;volatile
  6869                           
  6870                           ;timer.c: 45: TMR1L = 0xC0;
  6871  0F5D  30C0               	movlw	192
  6872  0F5E  0096               	movwf	22	;volatile
  6873                           
  6874                           ;timer.c: 46: T1CON = 0x60;
  6875  0F5F  3060               	movlw	96
  6876  0F60  0098               	movwf	24	;volatile
  6877                           
  6878                           ;timer.c: 50: T1GCONbits.TMR1GE=0;
  6879  0F61  1399               	bcf	25,7	;volatile
  6880                           
  6881                           ;timer.c: 52: TMR1IE = 0x01;
  6882  0F62  0021               	movlb	1	; select bank1
  6883  0F63  1411               	bsf	17,0	;volatile
  6884                           
  6885                           ;timer.c: 53: TMR1ON =0;
  6886  0F64  0020               	movlb	0	; select bank0
  6887  0F65  1018               	bcf	24,0	;volatile
  6888  0F66  0008               	return
  6889  0F67                     __end_of_init_timer1:	
  6890  0F67                     __ptext26:	
  6891 ;; *************** function _init_uart1 *****************
  6892 ;; Defined at:
  6893 ;;		line 81 in file "D:\MCUProject\ZH-SL-H40\src\uart.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;		None               void
  6900 ;; Registers used:
  6901 ;;		wreg, status,2
  6902 ;; Tracked objects:
  6903 ;;		On entry : 17F/0
  6904 ;;		On exit  : 17F/1
  6905 ;;		Unchanged: 160/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    2
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_driver_init
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function _init_uart1
  6923  0F67                     _init_uart1:	
  6924                           
  6925                           ;uart.c: 84: SP1BRGL = 0x40;
  6926                           
  6927                           ;incstack = 0
  6928                           ; Regs used in _init_uart1: [wreg+status,2]
  6929  0F67  3040               	movlw	64
  6930  0F68  0023               	movlb	3	; select bank3
  6931  0F69  009B               	movwf	27	;volatile
  6932                           
  6933                           ;uart.c: 85: SP1BRGH = 0x03;
  6934  0F6A  3003               	movlw	3
  6935  0F6B  009C               	movwf	28	;volatile
  6936                           
  6937                           ;uart.c: 86: BAUDCON = 0x08;
  6938  0F6C  3008               	movlw	8
  6939  0F6D  009F               	movwf	31	;volatile
  6940                           
  6941                           ;uart.c: 96: (TRISCbits.TRISC6) = 0x01;
  6942  0F6E  0021               	movlb	1	; select bank1
  6943  0F6F  170E               	bsf	14,6	;volatile
  6944                           
  6945                           ;uart.c: 97: (TRISCbits.TRISC7) = 0x01;
  6946  0F70  178E               	bsf	14,7	;volatile
  6947                           
  6948                           ;uart.c: 98: TXSTA = 0x00;
  6949  0F71  0023               	movlb	3	; select bank3
  6950  0F72  019E               	clrf	30	;volatile
  6951                           
  6952                           ;uart.c: 107: RCSTA = 0x90;
  6953  0F73  3090               	movlw	144
  6954  0F74  009D               	movwf	29	;volatile
  6955                           
  6956                           ;uart.c: 108: RCIE = 0x01;
  6957  0F75  0021               	movlb	1	; select bank1
  6958  0F76  1691               	bsf	17,5	;volatile
  6959  0F77  0008               	return
  6960  0F78                     __end_of_init_uart1:	
  6961  0F78                     __ptext32:	
  6962 ;; *************** function _init_interrupt *****************
  6963 ;; Defined at:
  6964 ;;		line 519 in file "D:\MCUProject\ZH-SL-H40\src\interrupt.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;		None
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;		None
  6969 ;; Return value:  Size  Location     Type
  6970 ;;		None               void
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0
  6973 ;; Tracked objects:
  6974 ;;		On entry : 17F/0
  6975 ;;		On exit  : 17F/2
  6976 ;;		Unchanged: 160/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;Total ram usage:        0 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; Hardware stack levels required when called:    2
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		_driver_init
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           
  6993                           ;psect for function _init_interrupt
  6994  0F78                     _init_interrupt:	
  6995  0F78                     l12396:	
  6996                           ;incstack = 0
  6997                           ; Regs used in _init_interrupt: [wreg+status,2+status,0]
  6998                           
  6999                           
  7000                           ;interrupt.c: 524: CM1CON0bits.C1POL=0;
  7001  0F78  0022               	movlb	2	; select bank2
  7002  0F79  1211               	bcf	17,4	;volatile
  7003                           
  7004                           ;interrupt.c: 526: CM1CON0bits.C1OE=0;
  7005  0F7A  1291               	bcf	17,5	;volatile
  7006                           
  7007                           ;interrupt.c: 528: CM1CON0bits.C1SP=1;
  7008  0F7B  1511               	bsf	17,2	;volatile
  7009                           
  7010                           ;interrupt.c: 530: CM1CON0bits.C1HYS=1;
  7011  0F7C  1491               	bsf	17,1	;volatile
  7012                           
  7013                           ;interrupt.c: 532: CM1CON0bits.C1SYNC=0;
  7014  0F7D  1011               	bcf	17,0	;volatile
  7015                           
  7016                           ;interrupt.c: 534: CM1CON1bits.C1INTN=1;
  7017  0F7E  1712               	bsf	18,6	;volatile
  7018                           
  7019                           ;interrupt.c: 536: CM1CON1bits.C1PCH=0b00;
  7020  0F7F  30CF               	movlw	-49
  7021  0F80  0592               	andwf	18,f	;volatile
  7022                           
  7023                           ;interrupt.c: 538: CM1CON1bits.C1NCH=0b00;
  7024  0F81  30FC               	movlw	-4
  7025  0F82  0592               	andwf	18,f	;volatile
  7026                           
  7027                           ;interrupt.c: 540: PIE2bits.C1IE=1;
  7028  0F83  0021               	movlb	1	; select bank1
  7029  0F84  1692               	bsf	18,5	;volatile
  7030                           
  7031                           ;interrupt.c: 542: PIR2bits.C1IF=0;
  7032  0F85  0020               	movlb	0	; select bank0
  7033  0F86  1292               	bcf	18,5	;volatile
  7034                           
  7035                           ;interrupt.c: 544: CM1CON0bits.C1ON=1;
  7036  0F87  0022               	movlb	2	; select bank2
  7037  0F88  1791               	bsf	17,7	;volatile
  7038                           
  7039                           ;interrupt.c: 546: PEIE = 0x01;
  7040  0F89  170B               	bsf	11,6	;volatile
  7041                           
  7042                           ;interrupt.c: 547: GIE = 0x01;
  7043  0F8A  178B               	bsf	11,7	;volatile
  7044  0F8B  0008               	return
  7045  0F8C                     __end_of_init_interrupt:	
  7046  0F8C                     __ptext28:	
  7047 ;; *************** function _init_pwm *****************
  7048 ;; Defined at:
  7049 ;;		line 30 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;		None               void
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 17F/0
  7060 ;;		On exit  : 17F/0
  7061 ;;		Unchanged: 160/0
  7062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;Total ram usage:        0 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    2
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_driver_init
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           
  7078                           ;psect for function _init_pwm
  7079  0F8C                     _init_pwm:	
  7080                           
  7081                           ;pwm.c: 33: TRISCbits.TRISC2=1;
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in _init_pwm: [wreg+status,2+status,0]
  7085  0F8C  0021               	movlb	1	; select bank1
  7086  0F8D  150E               	bsf	14,2	;volatile
  7087                           
  7088                           ;pwm.c: 35: TRISBbits.TRISB2=1;
  7089  0F8E  150D               	bsf	13,2	;volatile
  7090                           
  7091                           ;pwm.c: 37: TRISBbits.TRISB5 =1;
  7092  0F8F  168D               	bsf	13,5	;volatile
  7093                           
  7094                           ;pwm.c: 39: APFCONbits.CCP3SEL=1;
  7095  0F90  0022               	movlb	2	; select bank2
  7096  0F91  171D               	bsf	29,6	;volatile
  7097                           
  7098                           ;pwm.c: 45: PR6=0xFF;
  7099  0F92  30FF               	movlw	255
  7100  0F93  0028               	movlb	8	; select bank8
  7101  0F94  009D               	movwf	29	;volatile
  7102                           
  7103                           ;pwm.c: 47: CCP1CONbits.CCP1M=0b1100;
  7104  0F95  0025               	movlb	5	; select bank5
  7105  0F96  0813               	movf	19,w	;volatile
  7106  0F97  39F0               	andlw	-16
  7107  0F98  380C               	iorlw	12
  7108  0F99  0093               	movwf	19	;volatile
  7109                           
  7110                           ;pwm.c: 49: CCP1CONbits.P1M=0b10;
  7111  0F9A  0813               	movf	19,w	;volatile
  7112  0F9B  393F               	andlw	-193
  7113  0F9C  3880               	iorlw	128
  7114  0F9D  0093               	movwf	19	;volatile
  7115                           
  7116                           ;pwm.c: 51: CCPTMRS0bits.C1TSEL=0b10;
  7117  0F9E  081E               	movf	30,w	;volatile
  7118  0F9F  39FC               	andlw	-4
  7119  0FA0  3802               	iorlw	2
  7120  0FA1  009E               	movwf	30	;volatile
  7121                           
  7122                           ;pwm.c: 53: CCPR1L=0x00;
  7123  0FA2  0191               	clrf	17	;volatile
  7124                           
  7125                           ;pwm.c: 55: CCP1CONbits.DC1B=0b00;
  7126  0FA3  30CF               	movlw	-49
  7127  0FA4  0593               	andwf	19,f	;volatile
  7128                           
  7129                           ;pwm.c: 57: TMR6IF=0;
  7130  0FA5  0020               	movlb	0	; select bank0
  7131  0FA6  1193               	bcf	19,3	;volatile
  7132                           
  7133                           ;pwm.c: 59: T6CONbits.T6OUTPS=0b0000;
  7134  0FA7  3087               	movlw	-121
  7135  0FA8  0028               	movlb	8	; select bank8
  7136  0FA9  059E               	andwf	30,f	;volatile
  7137                           
  7138                           ;pwm.c: 61: TMR6ON=0;
  7139  0FAA  111E               	bcf	30,2	;volatile
  7140                           
  7141                           ;pwm.c: 63: T6CONbits.T6CKPS=0b00;
  7142  0FAB  30FC               	movlw	-4
  7143  0FAC  059E               	andwf	30,f	;volatile
  7144                           
  7145                           ;pwm.c: 69: PR4=0x9F;
  7146  0FAD  309F               	movlw	159
  7147  0FAE  0096               	movwf	22	;volatile
  7148                           
  7149                           ;pwm.c: 71: CCP3CONbits.CCP3M=0b1100;
  7150  0FAF  0026               	movlb	6	; select bank6
  7151  0FB0  0813               	movf	19,w	;volatile
  7152  0FB1  39F0               	andlw	-16
  7153  0FB2  380C               	iorlw	12
  7154  0FB3  0093               	movwf	19	;volatile
  7155                           
  7156                           ;pwm.c: 73: CCP3CONbits.P3M=0b00;
  7157  0FB4  303F               	movlw	-193
  7158  0FB5  0593               	andwf	19,f	;volatile
  7159                           
  7160                           ;pwm.c: 75: CCPTMRS0bits.C3TSEL=0b01;
  7161  0FB6  0025               	movlb	5	; select bank5
  7162  0FB7  081E               	movf	30,w	;volatile
  7163  0FB8  39CF               	andlw	-49
  7164  0FB9  3810               	iorlw	16
  7165  0FBA  009E               	movwf	30	;volatile
  7166                           
  7167                           ;pwm.c: 77: CCPR3L=0x00;
  7168  0FBB  0026               	movlb	6	; select bank6
  7169  0FBC  0191               	clrf	17	;volatile
  7170                           
  7171                           ;pwm.c: 79: CCP3CONbits.DC3B=0b00;
  7172  0FBD  30CF               	movlw	-49
  7173  0FBE  0593               	andwf	19,f	;volatile
  7174                           
  7175                           ;pwm.c: 81: TMR4IF=0;
  7176  0FBF  0020               	movlb	0	; select bank0
  7177  0FC0  1093               	bcf	19,1	;volatile
  7178                           
  7179                           ;pwm.c: 83: T4CONbits.T4OUTPS=0b0000;
  7180  0FC1  3087               	movlw	-121
  7181  0FC2  0028               	movlb	8	; select bank8
  7182  0FC3  0597               	andwf	23,f	;volatile
  7183                           
  7184                           ;pwm.c: 85: TMR4ON=0;
  7185  0FC4  1117               	bcf	23,2	;volatile
  7186                           
  7187                           ;pwm.c: 87: T4CONbits.T4CKPS=0b00;
  7188  0FC5  30FC               	movlw	-4
  7189  0FC6  0597               	andwf	23,f	;volatile
  7190                           
  7191                           ;pwm.c: 91: TRISAbits.TRISA4=0;
  7192  0FC7  0021               	movlb	1	; select bank1
  7193  0FC8  120C               	bcf	12,4	;volatile
  7194                           
  7195                           ;pwm.c: 93: PR2=0xCE;
  7196  0FC9  30CE               	movlw	206
  7197  0FCA  0020               	movlb	0	; select bank0
  7198  0FCB  009B               	movwf	27	;volatile
  7199                           
  7200                           ;pwm.c: 95: CCP5CONbits.CCP5M=0b1100;
  7201  0FCC  0026               	movlb	6	; select bank6
  7202  0FCD  081E               	movf	30,w	;volatile
  7203  0FCE  39F0               	andlw	-16
  7204  0FCF  380C               	iorlw	12
  7205  0FD0  009E               	movwf	30	;volatile
  7206                           
  7207                           ;pwm.c: 97: CCP5CONbits.P5M=0b00;
  7208  0FD1  303F               	movlw	-193
  7209  0FD2  059E               	andwf	30,f	;volatile
  7210                           
  7211                           ;pwm.c: 99: CCPTMRS1bits.C5TSEL=0b00;
  7212  0FD3  30FC               	movlw	-4
  7213  0FD4  0025               	movlb	5	; select bank5
  7214  0FD5  059F               	andwf	31,f	;volatile
  7215                           
  7216                           ;pwm.c: 101: CCPR5L=(unsigned char)(0x114>>2);
  7217  0FD6  3045               	movlw	69
  7218  0FD7  0026               	movlb	6	; select bank6
  7219  0FD8  009C               	movwf	28	;volatile
  7220                           
  7221                           ;pwm.c: 103: CCP5CONbits.DC5B=(unsigned char)(0x114&0b11);
  7222  0FD9  30CF               	movlw	-49
  7223  0FDA  059E               	andwf	30,f	;volatile
  7224                           
  7225                           ;pwm.c: 105: TMR2IF=0;
  7226  0FDB  0020               	movlb	0	; select bank0
  7227  0FDC  1091               	bcf	17,1	;volatile
  7228                           
  7229                           ;pwm.c: 107: T2CONbits.T2OUTPS=0b0000;
  7230  0FDD  3087               	movlw	-121
  7231  0FDE  059C               	andwf	28,f	;volatile
  7232                           
  7233                           ;pwm.c: 109: TMR2ON=0;
  7234  0FDF  111C               	bcf	28,2	;volatile
  7235                           
  7236                           ;pwm.c: 111: T2CONbits.T2CKPS=0b00;
  7237  0FE0  30FC               	movlw	-4
  7238  0FE1  059C               	andwf	28,f	;volatile
  7239  0FE2  0008               	return
  7240  0FE3                     __end_of_init_pwm:	
  7241  0FE3                     PL254:	
  7242  0FE3  140C               	bsf	12,0	;volatile
  7243  0FE4  148C               	bsf	12,1	;volatile
  7244  0FE5  150C               	bsf	12,2	;volatile
  7245  0FE6  158C               	bsf	12,3	;volatile
  7246  0FE7  168C               	bsf	12,5	;volatile
  7247  0FE8  0008               	return
  7248  0FE9                     __end_ofPL254:	
  7249  0FE9                     __ptext37:	
  7250 ;; *************** function _memset *****************
  7251 ;; Defined at:
  7252 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  p1              2    3[BANK0 ] PTR void 
  7255 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), uart1_rx_buf(80), 
  7256 ;;  c               2    5[BANK0 ] int 
  7257 ;;  n               2    7[BANK0 ] unsigned int 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  p               2    9[BANK0 ] PTR unsigned char 
  7260 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), uart1_rx_buf(80), 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  2    3[BANK0 ] PTR void 
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7265 ;; Tracked objects:
  7266 ;;		On entry : 1F/0
  7267 ;;		On exit  : 1F/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;Total ram usage:        8 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    2
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_pid_init
  7281 ;;		_handle_uart_rx_buf
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _memset
  7287  0FE9                     _memset:	
  7288  0FE9                     l14952:	
  7289                           ;incstack = 0
  7290                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7291                           
  7292  0FE9  0824               	movf	memset@p1+1,w
  7293  0FEA  00AA               	movwf	memset@p+1
  7294  0FEB  0823               	movf	memset@p1,w
  7295  0FEC  00A9               	movwf	memset@p
  7296  0FED                     l14958:	
  7297  0FED  3001               	movlw	1
  7298  0FEE  02A7               	subwf	memset@n,f
  7299  0FEF  3000               	movlw	0
  7300  0FF0  3BA8               	subwfb	memset@n+1,f
  7301  0FF1  0A27               	incf	memset@n,w
  7302  0FF2  1903               	skipnz
  7303  0FF3  0A28               	incf	memset@n+1,w
  7304  0FF4  1903               	btfsc	3,2
  7305  0FF5  0008               	return
  7306  0FF6  0829               	movf	memset@p,w
  7307  0FF7  0086               	movwf	6
  7308  0FF8  082A               	movf	memset@p+1,w
  7309  0FF9  0087               	movwf	7
  7310  0FFA  0825               	movf	memset@c,w
  7311  0FFB  0081               	movwf	1
  7312  0FFC  0AA9               	incf	memset@p,f
  7313  0FFD  1903               	skipnz
  7314  0FFE  0AAA               	incf	memset@p+1,f
  7315  0FFF  2FED               	goto	l14958
  7316  1000                     __end_of_memset:	
  7317                           
  7318                           	psect	bssCOMMON
  7319  007C                     __pbssCOMMON:	
  7320  007C                     _crc_data:	
  7321  007C                     	ds	2
  7322                           
  7323                           	psect	bssBANK0
  7324  0068                     __pbssBANK0:	
  7325  0068                     _battery_voltage_value:	
  7326  0068                     	ds	2
  7327  006A                     _device_status:	
  7328  006A                     	ds	1
  7329  006B                     _today_index:	
  7330  006B                     	ds	1
  7331                           
  7332                           	psect	bssBANK1
  7333  00C0                     __pbssBANK1:	
  7334  00C0                     _PWM:	
  7335  00C0                     	ds	4
  7336  00C4                     _bost_pwm_value:	
  7337  00C4                     	ds	2
  7338  00C6                     _buck_pwm_value:	
  7339  00C6                     	ds	2
  7340  00C8                     _charge_current_value:	
  7341  00C8                     	ds	2
  7342  00CA                     _discharge_current_value:	
  7343  00CA                     	ds	2
  7344  00CC                     _ho_cnt:	
  7345  00CC                     	ds	2
  7346  00CE                     _load_voltage_value:	
  7347  00CE                     	ds	2
  7348  00D0                     _pv_voltage_value:	
  7349  00D0                     	ds	2
  7350  00D2                     _Adjust_Pout_Flag:	
  7351  00D2                     	ds	1
  7352  00D3                     _charge_index:	
  7353  00D3                     	ds	1
  7354  00D4                     _discharge_index:	
  7355  00D4                     	ds	1
  7356  00D5                     _have_person1_flag:	
  7357  00D5                     	ds	1
  7358  00D6                     _led_out_ctrl:	
  7359  00D6                     	ds	1
  7360  00D7                     _light_mode:	
  7361  00D7                     	ds	1
  7362  00D8                     _system_status:	
  7363  00D8                     	ds	1
  7364  00D9                     _uart1_receive_byte_count:	
  7365  00D9                     	ds	1
  7366  00DA                     _work_mode:	
  7367  00DA                     	ds	1
  7368  00DB                     _light_time:	
  7369  00DB                     	ds	2
  7370                           
  7371                           	psect	dataBANK1
  7372  00DD                     __pdataBANK1:	
  7373  00DD                     _light_pv:	
  7374  00DD                     	ds	4
  7375  00E1                     _load_cc_I:	
  7376  00E1                     	ds	4
  7377  00E5                     _step_01_time_limit:	
  7378  00E5                     	ds	2
  7379  00E7                     _step_02_time_limit:	
  7380  00E7                     	ds	2
  7381  00E9                     _step_03_time_limit:	
  7382  00E9                     	ds	2
  7383  00EB                     _KEY_VALUE:	
  7384  00EB                     	ds	1
  7385  00EC                     _bt_id:	
  7386  00EC                     	ds	1
  7387  00ED                     _volt_id:	
  7388  00ED                     	ds	1
  7389  00EE                     _voltage_adjust_index:	
  7390  00EE                     	ds	1
  7391                           
  7392                           	psect	bssBANK2
  7393  0120                     __pbssBANK2:	
  7394  0120                     _b_v:	
  7395  0120                     	ds	4
  7396  0124                     _temperature_value:	
  7397  0124                     	ds	2
  7398  0126                     _KEY_STATE:	
  7399  0126                     	ds	1
  7400  0127                     _battery_voltage_status:	
  7401  0127                     	ds	1
  7402  0128                     _handle_an0_process_flag:	
  7403  0128                     	ds	1
  7404  0129                     _handle_an10_process_flag:	
  7405  0129                     	ds	1
  7406  012A                     _handle_an1_process_flag:	
  7407  012A                     	ds	1
  7408  012B                     _handle_an2_process_flag:	
  7409  012B                     	ds	1
  7410  012C                     _handle_an3_process_flag:	
  7411  012C                     	ds	1
  7412  012D                     _handle_an4_process_flag:	
  7413  012D                     	ds	1
  7414  012E                     _handle_an9_process_flag:	
  7415  012E                     	ds	1
  7416  012F                     _handle_scan_key_flag:	
  7417  012F                     	ds	1
  7418  0130                     _handle_short_flag:	
  7419  0130                     	ds	1
  7420  0131                     _have_person1_time_count:	
  7421  0131                     	ds	1
  7422  0132                     _ird_receive_flag:	
  7423  0132                     	ds	1
  7424  0133                     _ird_receive_time_count:	
  7425  0133                     	ds	1
  7426  0134                     _ird_status:	
  7427  0134                     	ds	1
  7428  0135                     _key1_time_count:	
  7429  0135                     	ds	1
  7430  0136                     _nop_index:	
  7431  0136                     	ds	1
  7432  0137                     _open_an0_time:	
  7433  0137                     	ds	1
  7434  0138                     _open_an10_time:	
  7435  0138                     	ds	1
  7436  0139                     _open_an1_time:	
  7437  0139                     	ds	1
  7438  013A                     _open_an2_time:	
  7439  013A                     	ds	1
  7440  013B                     _open_an3_time:	
  7441  013B                     	ds	1
  7442  013C                     _open_an4_time:	
  7443  013C                     	ds	1
  7444  013D                     _open_an9_time:	
  7445  013D                     	ds	1
  7446  013E                     _open_discharge_time:	
  7447  013E                     	ds	1
  7448  013F                     _open_sleep_time:	
  7449  013F                     	ds	1
  7450  0140                     _pid_index:	
  7451  0140                     	ds	1
  7452  0141                     _pv_index:	
  7453  0141                     	ds	1
  7454  0142                     _pv_voltage_status:	
  7455  0142                     	ds	1
  7456  0143                     _receive_bit_count:	
  7457  0143                     	ds	1
  7458  0144                     _rx_frame_kind:	
  7459  0144                     	ds	1
  7460  0145                     _scan_key_time_count:	
  7461  0145                     	ds	1
  7462  0146                     _sys_mode:	
  7463  0146                     	ds	1
  7464  0147                     _sys_power_ch:	
  7465  0147                     	ds	1
  7466  0148                     _system_check_time:	
  7467  0148                     	ds	1
  7468  0149                     _t1:	
  7469  0149                     	ds	1
  7470  014A                     _t2:	
  7471  014A                     	ds	1
  7472  014B                     _t3:	
  7473  014B                     	ds	1
  7474  014C                     _t4:	
  7475  014C                     	ds	1
  7476  014D                     _uart1_receive_flag:	
  7477  014D                     	ds	1
  7478  014E                     _uart1_time_count:	
  7479  014E                     	ds	1
  7480  014F                     _uart_send_byte_count:	
  7481  014F                     	ds	1
  7482  0150                     _uart_send_delay_timer:	
  7483  0150                     	ds	1
  7484  0151                     _uart_send_end_flag:	
  7485  0151                     	ds	1
  7486  0152                     _uart_send_point:	
  7487  0152                     	ds	1
  7488                           
  7489                           	psect	dataBANK2
  7490  0153                     __pdataBANK2:	
  7491  0153                     _dianchi_guoya_baohu:	
  7492  0153                     	ds	4
  7493  0157                     _step_01_load_percent:	
  7494  0157                     	ds	4
  7495  015B                     _step_02_load_percent:	
  7496  015B                     	ds	4
  7497  015F                     _step_03_load_percent:	
  7498  015F                     	ds	4
  7499  0163                     _step_04_load_percent:	
  7500  0163                     	ds	4
  7501  0167                     _step_05_load_percent:	
  7502  0167                     	ds	4
  7503  016B                     _step_04_time_limit:	
  7504  016B                     	ds	2
  7505  016D                     _step_05_time_limit:	
  7506  016D                     	ds	2
  7507  016F                     _sys_temper_flag:	
  7508  016F                     	ds	1
  7509                           
  7510                           	psect	bssBANK3
  7511  01A0                     __pbssBANK3:	
  7512  01A0                     _light_time_level:	
  7513  01A0                     	ds	4
  7514  01A4                     _I_prev:	
  7515  01A4                     	ds	2
  7516  01A6                     _an0_time_count:	
  7517  01A6                     	ds	2
  7518  01A8                     _an10_time_count:	
  7519  01A8                     	ds	2
  7520  01AA                     _an1_time_count:	
  7521  01AA                     	ds	2
  7522  01AC                     _an2_time_count:	
  7523  01AC                     	ds	2
  7524  01AE                     _an3_time_count:	
  7525  01AE                     	ds	2
  7526  01B0                     _an4_time_count:	
  7527  01B0                     	ds	2
  7528  01B2                     _an9_time_count:	
  7529  01B2                     	ds	2
  7530  01B4                     _load_short_time_count:	
  7531  01B4                     	ds	2
  7532  01B6                     _mi_cnt:	
  7533  01B6                     	ds	2
  7534  01B8                     _ms_cnt:	
  7535  01B8                     	ds	2
  7536  01BA                     _se_cnt:	
  7537  01BA                     	ds	2
  7538  01BC                     _sleep_time_count:	
  7539  01BC                     	ds	2
  7540  01BE                     _system_time_count:	
  7541  01BE                     	ds	2
  7542  01C0                     _bt_time_count:	
  7543  01C0                     	ds	1
  7544  01C1                     _key1_index:	
  7545  01C1                     	ds	1
  7546  01C2                     _limit_power_pid_flag:	
  7547  01C2                     	ds	1
  7548  01C3                     _mppt_status:	
  7549  01C3                     	ds	1
  7550  01C4                     _over_temper_time_count:	
  7551  01C4                     	ds	1
  7552  01C5                     _t5:	
  7553  01C5                     	ds	1
  7554  01C6                     _temper_time_count:	
  7555  01C6                     	ds	1
  7556  01C7                     _PID_CC_discharge:	
  7557  01C7                     	ds	28
  7558                           
  7559                           	psect	dataBANK3
  7560  01E3                     __pdataBANK3:	
  7561  01E3                     _dianchi_cv_level:	
  7562  01E3                     	ds	4
  7563  01E7                     _dianchi_guoya_huifu:	
  7564  01E7                     	ds	4
  7565  01EB                     _shuchu_shortout_voltage:	
  7566  01EB                     	ds	4
  7567                           
  7568                           	psect	bssBANK4
  7569  0220                     __pbssBANK4:	
  7570  0220                     _bt_00_hv:	
  7571  0220                     	ds	4
  7572  0224                     _bt_00_lv:	
  7573  0224                     	ds	4
  7574  0228                     _charge_I:	
  7575  0228                     	ds	4
  7576  022C                     _load_I:	
  7577  022C                     	ds	4
  7578  0230                     _load_v:	
  7579  0230                     	ds	4
  7580  0234                     _night_time_count:	
  7581  0234                     	ds	4
  7582  0238                     _p_v:	
  7583  0238                     	ds	4
  7584  023C                     _battery_low_time_count:	
  7585  023C                     	ds	2
  7586  023E                     _cv_level_time_count:	
  7587  023E                     	ds	2
  7588  0240                     _index_01_count:	
  7589  0240                     	ds	2
  7590  0242                     _index_02_count:	
  7591  0242                     	ds	2
  7592  0244                     _index_03_count:	
  7593  0244                     	ds	2
  7594  0246                     _index_04_count:	
  7595  0246                     	ds	2
  7596  0248                     _index_05_count:	
  7597  0248                     	ds	2
  7598  024A                     _index_06_count:	
  7599  024A                     	ds	2
  7600  024C                     _involid_time_count:	
  7601  024C                     	ds	2
  7602  024E                     _load_open_time_count:	
  7603  024E                     	ds	2
  7604  0250                     _mppt_time_count:	
  7605  0250                     	ds	2
  7606  0252                     _over_load_time_count:	
  7607  0252                     	ds	2
  7608                           
  7609                           	psect	dataBANK4
  7610  0254                     __pdataBANK4:	
  7611  0254                     _bt_volt_00:	
  7612  0254                     	ds	4
  7613  0258                     _bt_volt_20:	
  7614  0258                     	ds	4
  7615  025C                     _bt_volt_40:	
  7616  025C                     	ds	4
  7617  0260                     _bt_volt_60:	
  7618  0260                     	ds	4
  7619  0264                     _bt_volt_80:	
  7620  0264                     	ds	4
  7621  0268                     _dianchi_qianya_baohu:	
  7622  0268                     	ds	4
  7623  026C                     _ird_data:	
  7624  026C                     	ds	4
  7625                           
  7626                           	psect	bssBANK5
  7627  02A0                     __pbssBANK5:	
  7628  02A0                     _PWM_I:	
  7629  02A0                     	ds	4
  7630  02A4                     _day_time_count:	
  7631  02A4                     	ds	4
  7632  02A8                     _pv_time_count:	
  7633  02A8                     	ds	4
  7634  02AC                     _PID_CV_charge:	
  7635  02AC                     	ds	28
  7636                           
  7637                           	psect	dataBANK5
  7638  02C8                     __pdataBANK5:	
  7639  02C8                     _Load_Pmax:	
  7640  02C8                     	ds	4
  7641  02CC                     _charge_i_limit:	
  7642  02CC                     	ds	4
  7643  02D0                     _dianchi_qianya_huifu:	
  7644  02D0                     	ds	4
  7645  02D4                     _discharge_i_baohu:	
  7646  02D4                     	ds	4
  7647  02D8                     _discharge_i_limit:	
  7648  02D8                     	ds	4
  7649  02DC                     _light_off_pv_level:	
  7650  02DC                     	ds	4
  7651  02E0                     _light_on_pv_level:	
  7652  02E0                     	ds	4
  7653  02E4                     _shuchu_open_voltage:	
  7654  02E4                     	ds	4
  7655                           
  7656                           	psect	bssBANK6
  7657  0320                     __pbssBANK6:	
  7658  0320                     _PID_CC_charge:	
  7659  0320                     	ds	28
  7660                           
  7661                           	psect	bssBANK7
  7662  03A0                     __pbssBANK7:	
  7663  03A0                     _uart1_tx_buf:	
  7664  03A0                     	ds	80
  7665                           
  7666                           	psect	bssBANK8
  7667  0420                     __pbssBANK8:	
  7668  0420                     _uart1_rx_buf:	
  7669  0420                     	ds	80
  7670                           
  7671                           	psect	clrtext
  7672  10DE                     clear_ram0:	
  7673                           ;	Called with FSR0 containing the base address, and
  7674                           ;	btemp/btemp+1 has the size to clear
  7675                           
  7676  10DE  0064               	clrwdt	;clear the watchdog before getting into this loop
  7677  10DF                     clrloop0:	
  7678  10DF  3001               	movlw	1
  7679  10E0  0180               	clrf	0	;clear RAM location pointed to by FSR
  7680  10E1  3101               	addfsr 0,1
  7681  10E2  02FE               	subwf	126,f
  7682  10E3  3000               	movlw	0
  7683  10E4  3BFF               	subwfb	127,f
  7684  10E5  087F               	movf	127,w
  7685  10E6  047E               	iorwf	126,w
  7686  10E7  1903               	btfsc	3,2
  7687  10E8  3400               	retlw	0	;all done for this memory range, return
  7688  10E9  28DF               	goto	clrloop0	;have we reached the end yet?
  7689                           
  7690                           	psect	inittext
  7691  10D2                     init_ram:	
  7692  10D2  00FE               	movwf	126
  7693  10D3                     initloop:	
  7694  10D3  0012               	moviw fsr0++
  7695  10D4  001E               	movwi fsr1++
  7696  10D5  3001               	movlw	1
  7697  10D6  02FE               	subwf	126,f
  7698  10D7  3000               	movlw	0
  7699  10D8  3BFF               	subwfb	127,f
  7700  10D9  087F               	movf	127,w
  7701  10DA  047E               	iorwf	126,w
  7702  10DB  1903               	btfsc	3,2
  7703  10DC  3400               	retlw	0
  7704  10DD  28D3               	goto	initloop
  7705                           
  7706                           	psect	cstackBANK5
  7707  02E8                     __pcstackBANK5:	
  7708  02E8                     handle_ad_loop@data_cc_var:	
  7709                           
  7710                           ; 4 bytes @ 0x0
  7711  02E8                     	ds	4
  7712                           
  7713                           	psect	cstackBANK1
  7714  00A0                     __pcstackBANK1:	
  7715  00A0                     ?_Key_Menu:	
  7716  00A0                     ??_scan_key_value:	
  7717                           ; 0 bytes @ 0x0
  7718                           
  7719  00A0                     ?_pid_calc:	
  7720                           ; 0 bytes @ 0x0
  7721                           
  7722  00A0                     start_ad_convert@ch:	
  7723                           ; 4 bytes @ 0x0
  7724                           
  7725  00A0                     pid_calc@pp:	
  7726                           ; 1 bytes @ 0x0
  7727                           
  7728  00A0                     Key_Menu@key_value:	
  7729                           ; 2 bytes @ 0x0
  7730                           
  7731                           
  7732                           ; 4 bytes @ 0x0
  7733  00A0                     	ds	1
  7734  00A1                     start_ad_convert@ad_h:	
  7735                           
  7736                           ; 2 bytes @ 0x1
  7737  00A1                     	ds	1
  7738  00A2                     pid_calc@NowPoint:	
  7739                           
  7740                           ; 2 bytes @ 0x2
  7741  00A2                     	ds	1
  7742  00A3                     start_ad_convert@ad_l:	
  7743                           
  7744                           ; 2 bytes @ 0x3
  7745  00A3                     	ds	1
  7746  00A4                     ??_pid_calc:	
  7747                           
  7748                           ; 0 bytes @ 0x4
  7749  00A4                     	ds	1
  7750  00A5                     start_ad_convert@temp:	
  7751                           
  7752                           ; 2 bytes @ 0x5
  7753  00A5                     	ds	2
  7754  00A7                     start_ad_convert@ad_ch:	
  7755                           
  7756                           ; 1 bytes @ 0x7
  7757  00A7                     	ds	1
  7758  00A8                     start_ad_convert@j:	
  7759  00A8                     pid_calc@dError:	
  7760                           ; 1 bytes @ 0x8
  7761                           
  7762                           
  7763                           ; 4 bytes @ 0x8
  7764  00A8                     	ds	1
  7765  00A9                     start_ad_convert@i:	
  7766                           
  7767                           ; 1 bytes @ 0x9
  7768  00A9                     	ds	1
  7769  00AA                     auto_system@sys_bt_voltage:	
  7770                           
  7771                           ; 4 bytes @ 0xA
  7772  00AA                     	ds	2
  7773  00AC                     _pid_calc$2870:	
  7774                           
  7775                           ; 4 bytes @ 0xC
  7776  00AC                     	ds	4
  7777  00B0                     _pid_calc$2871:	
  7778                           
  7779                           ; 4 bytes @ 0x10
  7780  00B0                     	ds	4
  7781  00B4                     pid_calc@dk:	
  7782                           
  7783                           ; 4 bytes @ 0x14
  7784  00B4                     	ds	4
  7785  00B8                     pid_calc@PWM_var:	
  7786                           
  7787                           ; 4 bytes @ 0x18
  7788  00B8                     	ds	4
  7789  00BC                     pid_calc@Error:	
  7790                           
  7791                           ; 4 bytes @ 0x1C
  7792  00BC                     	ds	4
  7793                           
  7794                           	psect	cstackCOMMON
  7795  0070                     __pcstackCOMMON:	
  7796  0070                     ?_Disable_Bost_Pwm:	
  7797  0070                     ?_Disable_Buck_Pwm:	
  7798                           ; 0 bytes @ 0x0
  7799                           
  7800  0070                     ?_Enable_Bost_Pwm:	
  7801                           ; 0 bytes @ 0x0
  7802                           
  7803  0070                     ?_init_timer1:	
  7804                           ; 0 bytes @ 0x0
  7805                           
  7806  0070                     ?_init_uart1:	
  7807                           ; 0 bytes @ 0x0
  7808                           
  7809  0070                     ?_init_pwm:	
  7810                           ; 0 bytes @ 0x0
  7811                           
  7812  0070                     ?_handle_ad_loop:	
  7813                           ; 0 bytes @ 0x0
  7814                           
  7815  0070                     ?_handle_task_process:	
  7816                           ; 0 bytes @ 0x0
  7817                           
  7818  0070                     ?_handle_uart_rx_buf:	
  7819                           ; 0 bytes @ 0x0
  7820                           
  7821  0070                     ?_Mppt_Charge:	
  7822                           ; 0 bytes @ 0x0
  7823                           
  7824  0070                     ?_init_adc:	
  7825                           ; 0 bytes @ 0x0
  7826                           
  7827  0070                     ?_delay_1us:	
  7828                           ; 0 bytes @ 0x0
  7829                           
  7830  0070                     ?_isr:	
  7831                           ; 0 bytes @ 0x0
  7832                           
  7833  0070                     ?_init_interrupt:	
  7834                           ; 0 bytes @ 0x0
  7835                           
  7836  0070                     ?_read_param_eeprom:	
  7837                           ; 0 bytes @ 0x0
  7838                           
  7839  0070                     ?_auto_system:	
  7840                           ; 0 bytes @ 0x0
  7841                           
  7842  0070                     ?_Init_Ird:	
  7843                           ; 0 bytes @ 0x0
  7844                           
  7845  0070                     ?_init_key:	
  7846                           ; 0 bytes @ 0x0
  7847                           
  7848  0070                     ?_scan_key_value:	
  7849                           ; 0 bytes @ 0x0
  7850                           
  7851  0070                     ?_init_osc:	
  7852                           ; 0 bytes @ 0x0
  7853                           
  7854  0070                     ?_init_port:	
  7855                           ; 0 bytes @ 0x0
  7856                           
  7857  0070                     ?_driver_init:	
  7858                           ; 0 bytes @ 0x0
  7859                           
  7860  0070                     ?_middle_init:	
  7861                           ; 0 bytes @ 0x0
  7862                           
  7863  0070                     ?_application_init:	
  7864                           ; 0 bytes @ 0x0
  7865                           
  7866  0070                     ?_Enable_Buck_Pwm:	
  7867                           ; 0 bytes @ 0x0
  7868                           
  7869  0070                     ?i1_Disable_Bost_Pwm:	
  7870                           ; 0 bytes @ 0x0
  7871                           
  7872  0070                     ??i1_Disable_Bost_Pwm:	
  7873                           ; 0 bytes @ 0x0
  7874                           
  7875  0070                     ?i1_Set_Bost_Pwm_Duty:	
  7876                           ; 0 bytes @ 0x0
  7877                           
  7878  0070                     ?_eeprom_read:	
  7879                           ; 0 bytes @ 0x0
  7880                           
  7881  0070                     ?_main:	
  7882                           ; 1 bytes @ 0x0
  7883                           
  7884  0070                     i1Set_Bost_Pwm_Duty@dduty:	
  7885                           ; 2 bytes @ 0x0
  7886                           
  7887                           
  7888                           ; 2 bytes @ 0x0
  7889  0070                     	ds	2
  7890  0072                     ??i1_Set_Bost_Pwm_Duty:	
  7891                           
  7892                           ; 0 bytes @ 0x2
  7893  0072                     	ds	2
  7894  0074                     ??_isr:	
  7895                           
  7896                           ; 0 bytes @ 0x4
  7897  0074                     	ds	8
  7898                           
  7899                           	psect	cstackBANK0
  7900  0020                     __pcstackBANK0:	
  7901  0020                     isr@r1_data:	
  7902                           
  7903                           ; 1 bytes @ 0x0
  7904  0020                     	ds	1
  7905  0021                     isr@time_cnt:	
  7906                           
  7907                           ; 2 bytes @ 0x1
  7908  0021                     	ds	2
  7909  0023                     ?_Set_Bost_Pwm_Duty:	
  7910  0023                     ??_Disable_Bost_Pwm:	
  7911                           ; 0 bytes @ 0x3
  7912                           
  7913  0023                     ??_eeprom_read:	
  7914                           ; 0 bytes @ 0x3
  7915                           
  7916  0023                     ??_Disable_Buck_Pwm:	
  7917                           ; 0 bytes @ 0x3
  7918                           
  7919  0023                     ?_Set_Buck_Pwm_Duty:	
  7920                           ; 0 bytes @ 0x3
  7921                           
  7922  0023                     ??_Enable_Bost_Pwm:	
  7923                           ; 0 bytes @ 0x3
  7924                           
  7925  0023                     ??_init_timer1:	
  7926                           ; 0 bytes @ 0x3
  7927                           
  7928  0023                     ??_init_uart1:	
  7929                           ; 0 bytes @ 0x3
  7930                           
  7931  0023                     ??_init_pwm:	
  7932                           ; 0 bytes @ 0x3
  7933                           
  7934  0023                     ??_init_adc:	
  7935                           ; 0 bytes @ 0x3
  7936                           
  7937  0023                     ??_delay_1us:	
  7938                           ; 0 bytes @ 0x3
  7939                           
  7940  0023                     ?_delay_ms:	
  7941                           ; 0 bytes @ 0x3
  7942                           
  7943  0023                     ??_init_interrupt:	
  7944                           ; 0 bytes @ 0x3
  7945                           
  7946  0023                     ??_Init_Ird:	
  7947                           ; 0 bytes @ 0x3
  7948                           
  7949  0023                     ??_init_key:	
  7950                           ; 0 bytes @ 0x3
  7951                           
  7952  0023                     ??_init_osc:	
  7953                           ; 0 bytes @ 0x3
  7954                           
  7955  0023                     ??_init_port:	
  7956                           ; 0 bytes @ 0x3
  7957                           
  7958  0023                     ??_driver_init:	
  7959                           ; 0 bytes @ 0x3
  7960                           
  7961  0023                     ??_Enable_Buck_Pwm:	
  7962                           ; 0 bytes @ 0x3
  7963                           
  7964  0023                     ?_memset:	
  7965                           ; 0 bytes @ 0x3
  7966                           
  7967  0023                     ?_crc16:	
  7968                           ; 2 bytes @ 0x3
  7969                           
  7970  0023                     ?___wmul:	
  7971                           ; 2 bytes @ 0x3
  7972                           
  7973  0023                     ?___flpack:	
  7974                           ; 2 bytes @ 0x3
  7975                           
  7976  0023                     ?___lldiv:	
  7977                           ; 4 bytes @ 0x3
  7978                           
  7979  0023                     ?___lmul:	
  7980                           ; 4 bytes @ 0x3
  7981                           
  7982  0023                     eeprom_read@addr:	
  7983                           ; 4 bytes @ 0x3
  7984                           
  7985  0023                     delay_ms@count:	
  7986                           ; 1 bytes @ 0x3
  7987                           
  7988  0023                     crc16@puchMsg:	
  7989                           ; 2 bytes @ 0x3
  7990                           
  7991  0023                     Set_Buck_Pwm_Duty@duty:	
  7992                           ; 2 bytes @ 0x3
  7993                           
  7994  0023                     Set_Bost_Pwm_Duty@dduty:	
  7995                           ; 2 bytes @ 0x3
  7996                           
  7997  0023                     memset@p1:	
  7998                           ; 2 bytes @ 0x3
  7999                           
  8000  0023                     ___wmul@multiplier:	
  8001                           ; 2 bytes @ 0x3
  8002                           
  8003  0023                     ___flpack@arg:	
  8004                           ; 2 bytes @ 0x3
  8005                           
  8006  0023                     ___lldiv@divisor:	
  8007                           ; 4 bytes @ 0x3
  8008                           
  8009  0023                     ___lmul@multiplier:	
  8010                           ; 4 bytes @ 0x3
  8011                           
  8012                           
  8013                           ; 4 bytes @ 0x3
  8014  0023                     	ds	2
  8015  0025                     ??_Set_Bost_Pwm_Duty:	
  8016  0025                     ??_Set_Buck_Pwm_Duty:	
  8017                           ; 0 bytes @ 0x5
  8018                           
  8019  0025                     ??_delay_ms:	
  8020                           ; 0 bytes @ 0x5
  8021                           
  8022  0025                     crc16@usDataLen:	
  8023                           ; 0 bytes @ 0x5
  8024                           
  8025  0025                     delay_ms@i:	
  8026                           ; 1 bytes @ 0x5
  8027                           
  8028  0025                     memset@c:	
  8029                           ; 2 bytes @ 0x5
  8030                           
  8031  0025                     ___wmul@multiplicand:	
  8032                           ; 2 bytes @ 0x5
  8033                           
  8034                           
  8035                           ; 2 bytes @ 0x5
  8036  0025                     	ds	1
  8037  0026                     ??_crc16:	
  8038  0026                     crc16@uIndex:	
  8039                           ; 0 bytes @ 0x6
  8040                           
  8041                           
  8042                           ; 4 bytes @ 0x6
  8043  0026                     	ds	1
  8044  0027                     ??___wmul:	
  8045  0027                     ___flpack@exp:	
  8046                           ; 0 bytes @ 0x7
  8047                           
  8048  0027                     delay_ms@j:	
  8049                           ; 1 bytes @ 0x7
  8050                           
  8051  0027                     memset@n:	
  8052                           ; 2 bytes @ 0x7
  8053                           
  8054  0027                     ___wmul@product:	
  8055                           ; 2 bytes @ 0x7
  8056                           
  8057  0027                     ___lldiv@dividend:	
  8058                           ; 2 bytes @ 0x7
  8059                           
  8060  0027                     ___lmul@multiplicand:	
  8061                           ; 4 bytes @ 0x7
  8062                           
  8063                           
  8064                           ; 4 bytes @ 0x7
  8065  0027                     	ds	1
  8066  0028                     ___flpack@sign:	
  8067                           
  8068                           ; 1 bytes @ 0x8
  8069  0028                     	ds	1
  8070  0029                     ??_memset:	
  8071  0029                     ??___flpack:	
  8072                           ; 0 bytes @ 0x9
  8073                           
  8074  0029                     ?___lwdiv:	
  8075                           ; 0 bytes @ 0x9
  8076                           
  8077  0029                     ___lwdiv@divisor:	
  8078                           ; 2 bytes @ 0x9
  8079                           
  8080  0029                     memset@p:	
  8081                           ; 2 bytes @ 0x9
  8082                           
  8083                           
  8084                           ; 2 bytes @ 0x9
  8085  0029                     	ds	1
  8086  002A                     crc16@uchCRCHi:	
  8087                           
  8088                           ; 1 bytes @ 0xA
  8089  002A                     	ds	1
  8090  002B                     ?_pid_init:	
  8091  002B                     ??___lldiv:	
  8092                           ; 0 bytes @ 0xB
  8093                           
  8094  002B                     ??___lmul:	
  8095                           ; 0 bytes @ 0xB
  8096                           
  8097  002B                     crc16@uchCRCLo:	
  8098                           ; 0 bytes @ 0xB
  8099                           
  8100  002B                     pid_init@pp:	
  8101                           ; 1 bytes @ 0xB
  8102                           
  8103  002B                     ___lwdiv@dividend:	
  8104                           ; 2 bytes @ 0xB
  8105                           
  8106  002B                     ___lldiv@quotient:	
  8107                           ; 2 bytes @ 0xB
  8108                           
  8109  002B                     ___lmul@product:	
  8110                           ; 4 bytes @ 0xB
  8111                           
  8112                           
  8113                           ; 4 bytes @ 0xB
  8114  002B                     	ds	2
  8115  002D                     ??_pid_init:	
  8116  002D                     ??___lwdiv:	
  8117                           ; 0 bytes @ 0xD
  8118                           
  8119  002D                     ?___awtofl:	
  8120                           ; 0 bytes @ 0xD
  8121                           
  8122  002D                     ?___lbtofl:	
  8123                           ; 4 bytes @ 0xD
  8124                           
  8125  002D                     ___lwdiv@counter:	
  8126                           ; 4 bytes @ 0xD
  8127                           
  8128  002D                     ___awtofl@c:	
  8129                           ; 1 bytes @ 0xD
  8130                           
  8131                           
  8132                           ; 2 bytes @ 0xD
  8133  002D                     	ds	1
  8134  002E                     ___lwdiv@quotient:	
  8135                           
  8136                           ; 2 bytes @ 0xE
  8137  002E                     	ds	1
  8138  002F                     ___lldiv@counter:	
  8139                           
  8140                           ; 1 bytes @ 0xF
  8141  002F                     	ds	1
  8142  0030                     ?_start_ad_convert:	
  8143  0030                     ?___lwtofl:	
  8144                           ; 2 bytes @ 0x10
  8145                           
  8146  0030                     ___lwtofl@c:	
  8147                           ; 4 bytes @ 0x10
  8148                           
  8149                           
  8150                           ; 2 bytes @ 0x10
  8151  0030                     	ds	1
  8152  0031                     ??___awtofl:	
  8153  0031                     ___awtofl@sign:	
  8154                           ; 0 bytes @ 0x11
  8155                           
  8156                           
  8157                           ; 1 bytes @ 0x11
  8158  0031                     	ds	1
  8159  0032                     ??_start_ad_convert:	
  8160  0032                     ??___lbtofl:	
  8161                           ; 0 bytes @ 0x12
  8162                           
  8163  0032                     ___lbtofl@c:	
  8164                           ; 0 bytes @ 0x12
  8165                           
  8166                           
  8167                           ; 1 bytes @ 0x12
  8168  0032                     	ds	2
  8169  0034                     ??___lwtofl:	
  8170  0034                     ?___flmul:	
  8171                           ; 0 bytes @ 0x14
  8172                           
  8173  0034                     ___flmul@f1:	
  8174                           ; 4 bytes @ 0x14
  8175                           
  8176                           
  8177                           ; 4 bytes @ 0x14
  8178  0034                     	ds	4
  8179  0038                     ___flmul@f2:	
  8180                           
  8181                           ; 4 bytes @ 0x18
  8182  0038                     	ds	4
  8183  003C                     ??___flmul:	
  8184                           
  8185                           ; 0 bytes @ 0x1C
  8186  003C                     	ds	4
  8187  0040                     ___flmul@exp:	
  8188                           
  8189                           ; 1 bytes @ 0x20
  8190  0040                     	ds	1
  8191  0041                     ___flmul@f3_as_product:	
  8192                           
  8193                           ; 4 bytes @ 0x21
  8194  0041                     	ds	4
  8195  0045                     ___flmul@cntr:	
  8196                           
  8197                           ; 1 bytes @ 0x25
  8198  0045                     	ds	1
  8199  0046                     ___flmul@sign:	
  8200                           
  8201                           ; 1 bytes @ 0x26
  8202  0046                     	ds	1
  8203  0047                     ?___fladd:	
  8204  0047                     ?___fldiv:	
  8205                           ; 4 bytes @ 0x27
  8206                           
  8207  0047                     ___fladd@f1:	
  8208                           ; 4 bytes @ 0x27
  8209                           
  8210  0047                     ___fldiv@f2:	
  8211                           ; 4 bytes @ 0x27
  8212                           
  8213                           
  8214                           ; 4 bytes @ 0x27
  8215  0047                     	ds	4
  8216  004B                     ___fladd@f2:	
  8217  004B                     ___fldiv@f1:	
  8218                           ; 4 bytes @ 0x2B
  8219                           
  8220                           
  8221                           ; 4 bytes @ 0x2B
  8222  004B                     	ds	4
  8223  004F                     ??___fladd:	
  8224  004F                     ??___fldiv:	
  8225                           ; 0 bytes @ 0x2F
  8226                           
  8227                           
  8228                           ; 0 bytes @ 0x2F
  8229  004F                     	ds	4
  8230  0053                     ___fladd@sign:	
  8231  0053                     ___fldiv@f3:	
  8232                           ; 1 bytes @ 0x33
  8233                           
  8234                           
  8235                           ; 4 bytes @ 0x33
  8236  0053                     	ds	1
  8237  0054                     ___fladd@exp2:	
  8238                           
  8239                           ; 1 bytes @ 0x34
  8240  0054                     	ds	1
  8241  0055                     ___fladd@exp1:	
  8242                           
  8243                           ; 1 bytes @ 0x35
  8244  0055                     	ds	1
  8245  0056                     ?___flsub:	
  8246  0056                     ___flsub@f2:	
  8247                           ; 4 bytes @ 0x36
  8248                           
  8249                           
  8250                           ; 4 bytes @ 0x36
  8251  0056                     	ds	1
  8252  0057                     ___fldiv@cntr:	
  8253                           
  8254                           ; 1 bytes @ 0x37
  8255  0057                     	ds	1
  8256  0058                     ___fldiv@exp:	
  8257                           
  8258                           ; 1 bytes @ 0x38
  8259  0058                     	ds	1
  8260  0059                     ___fldiv@sign:	
  8261                           
  8262                           ; 1 bytes @ 0x39
  8263  0059                     	ds	1
  8264  005A                     ??_read_param_eeprom:	
  8265  005A                     ??_application_init:	
  8266                           ; 0 bytes @ 0x3A
  8267                           
  8268  005A                     ?___flge:	
  8269                           ; 0 bytes @ 0x3A
  8270                           
  8271  005A                     ?___fltol:	
  8272                           ; 1 bit 
  8273                           
  8274  005A                     read_param_eeprom@byte_h:	
  8275                           ; 4 bytes @ 0x3A
  8276                           
  8277  005A                     ___flge@ff1:	
  8278                           ; 1 bytes @ 0x3A
  8279                           
  8280  005A                     ___flsub@f1:	
  8281                           ; 4 bytes @ 0x3A
  8282                           
  8283  005A                     ___fltol@f1:	
  8284                           ; 4 bytes @ 0x3A
  8285                           
  8286                           
  8287                           ; 4 bytes @ 0x3A
  8288  005A                     	ds	1
  8289  005B                     read_param_eeprom@byte_l:	
  8290                           
  8291                           ; 1 bytes @ 0x3B
  8292  005B                     	ds	3
  8293  005E                     ??___flsub:	
  8294  005E                     ??___fltol:	
  8295                           ; 0 bytes @ 0x3E
  8296                           
  8297  005E                     ___flge@ff2:	
  8298                           ; 0 bytes @ 0x3E
  8299                           
  8300                           
  8301                           ; 4 bytes @ 0x3E
  8302  005E                     	ds	4
  8303  0062                     ??___flge:	
  8304  0062                     ___fltol@sign1:	
  8305                           ; 0 bytes @ 0x42
  8306                           
  8307                           
  8308                           ; 1 bytes @ 0x42
  8309  0062                     	ds	1
  8310  0063                     ___fltol@exp1:	
  8311                           
  8312                           ; 1 bytes @ 0x43
  8313  0063                     	ds	1
  8314  0064                     ?_eeprom_write:	
  8315  0064                     eeprom_write@value:	
  8316                           ; 0 bytes @ 0x44
  8317                           
  8318                           
  8319                           ; 1 bytes @ 0x44
  8320  0064                     	ds	1
  8321  0065                     ??_eeprom_write:	
  8322  0065                     eeprom_write@addr:	
  8323                           ; 0 bytes @ 0x45
  8324                           
  8325                           
  8326                           ; 1 bytes @ 0x45
  8327  0065                     	ds	1
  8328  0066                     ??_handle_ad_loop:	
  8329  0066                     ??_handle_task_process:	
  8330                           ; 0 bytes @ 0x46
  8331                           
  8332  0066                     ??_handle_uart_rx_buf:	
  8333                           ; 0 bytes @ 0x46
  8334                           
  8335  0066                     ??_Mppt_Charge:	
  8336                           ; 0 bytes @ 0x46
  8337                           
  8338  0066                     ??_auto_system:	
  8339                           ; 0 bytes @ 0x46
  8340                           
  8341  0066                     ??_Key_Menu:	
  8342                           ; 0 bytes @ 0x46
  8343                           
  8344  0066                     ??_middle_init:	
  8345                           ; 0 bytes @ 0x46
  8346                           
  8347  0066                     Key_Menu@code:	
  8348                           ; 0 bytes @ 0x46
  8349                           
  8350  0066                     scan_key_value@key_temp:	
  8351                           ; 1 bytes @ 0x46
  8352                           
  8353  0066                     handle_uart_rx_buf@crc_in:	
  8354                           ; 2 bytes @ 0x46
  8355                           
  8356                           
  8357                           ; 2 bytes @ 0x46
  8358  0066                     	ds	2
  8359  0068                     ??_main:	
  8360                           
  8361                           	psect	text6
  8362  2CB0                     __ptext6:	
  8363 ;; *************** function _handle_uart_rx_buf *****************
  8364 ;; Defined at:
  8365 ;;		line 232 in file "D:\MCUProject\ZH-SL-H40\src\uart.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  crc_in          2   70[BANK0 ] unsigned int 
  8370 ;;  byte_l          1    0        unsigned char 
  8371 ;;  byte_h          1    0        unsigned char 
  8372 ;;  i               1    0        unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 1F/2
  8379 ;;		On exit  : 1F/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;Total ram usage:        2 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    4
  8389 ;; This function calls:
  8390 ;;		_Disable_Bost_Pwm
  8391 ;;		_Disable_Buck_Pwm
  8392 ;;		_Enable_Bost_Pwm
  8393 ;;		_Set_Bost_Pwm_Duty
  8394 ;;		_Set_Buck_Pwm_Duty
  8395 ;;		___awtofl
  8396 ;;		___fldiv
  8397 ;;		___flge
  8398 ;;		___flmul
  8399 ;;		___fltol
  8400 ;;		___lbtofl
  8401 ;;		___lwtofl
  8402 ;;		___wmul
  8403 ;;		_crc16
  8404 ;;		_delay_ms
  8405 ;;		_eeprom_read
  8406 ;;		_eeprom_write
  8407 ;;		_memset
  8408 ;; This function is called by:
  8409 ;;		_main
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _handle_uart_rx_buf
  8415  2CB0                     _handle_uart_rx_buf:	
  8416                           
  8417                           ;uart.c: 236: unsigned int crc_in;
  8418                           ;uart.c: 238: unsigned char byte_h,byte_l;
  8419                           ;uart.c: 240: switch(rx_frame_kind)
  8420                           
  8421                           ;incstack = 0
  8422                           ; Regs used in _handle_uart_rx_buf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8423  2CB0  3186  2E8D         	goto	l18694
  8424  2CB2                     l18314:	
  8425                           
  8426                           ;uart.c: 243: if(uart1_rx_buf[1]==0xA1)
  8427  2CB2  0028               	movlb	8	; select bank8
  8428  2CB3  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
  8429  2CB4  3AA1               	xorlw	161
  8430  2CB5  1D03               	skipz
  8431  2CB6  2FFE               	goto	L69
  8432                           
  8433                           ;uart.c: 244: {
  8434                           ;uart.c: 245: crc_in=crc16(&uart1_rx_buf[1],1);
  8435  2CB7  3021               	movlw	low (_uart1_rx_buf+1)
  8436  2CB8  3187  27F1  31AC   	fcall	PL234	;call to abstracted procedure
  8437  2CBB  3188  2003  31AC   	fcall	_crc16
  8438  2CBE  0824               	movf	?_crc16+1,w
  8439  2CBF  00E7               	movwf	handle_uart_rx_buf@crc_in+1
  8440                           
  8441                           ;uart.c: 247: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
  8442  2CC0  3187  27CF  31AC   	fcall	PL176	;call to abstracted procedure
  8443  2CC3  1D03               	skipz
  8444  2CC4  2FFE               	goto	L69
  8445                           
  8446                           ;uart.c: 248: {
  8447                           ;uart.c: 250: p_v=(float)(((float)pv_voltage_value)/10)*61;
  8448  2CC5  3042               	movlw	66
  8449  2CC6  3187  27BB  31AC   	fcall	PL164	;call to abstracted procedure
  8450  2CC9  3187  2704  31AC   	fcall	PL84	;call to abstracted procedure
  8451  2CCC  319B  231C  31AC   	fcall	___lwtofl
  8452  2CCF  3186  26E1  31AC   	fcall	PL56	;call to abstracted procedure
  8453  2CD2  31A2  2291  31AC   	fcall	___fldiv
  8454  2CD5  3186  26D8  31AC   	fcall	PL36	;call to abstracted procedure
  8455  2CD8  31A2  22FC  31AC   	fcall	___flmul
  8456  2CDB  0837               	movf	?___flmul+3,w
  8457  2CDC  0024               	movlb	4	; select bank4
  8458  2CDD  00BB               	movwf	(_p_v+3)^(0+512)
  8459  2CDE  0020               	movlb	0	; select bank0
  8460  2CDF  0836               	movf	?___flmul+2,w
  8461  2CE0  0024               	movlb	4	; select bank4
  8462  2CE1  00BA               	movwf	(_p_v+2)^(0+512)
  8463  2CE2  0020               	movlb	0	; select bank0
  8464  2CE3  0835               	movf	?___flmul+1,w
  8465  2CE4  0024               	movlb	4	; select bank4
  8466  2CE5  00B9               	movwf	(_p_v+1)^(0+512)
  8467  2CE6  0020               	movlb	0	; select bank0
  8468  2CE7  0834               	movf	?___flmul,w
  8469  2CE8  0024               	movlb	4	; select bank4
  8470  2CE9  00B8               	movwf	_p_v^(0+512)
  8471                           
  8472                           ;uart.c: 252: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
  8473  2CEA  3041               	movlw	65
  8474  2CEB  0020               	movlb	0	; select bank0
  8475  2CEC  00B7               	movwf	___flmul@f1+3
  8476  2CED  30F8               	movlw	248
  8477  2CEE  00B6               	movwf	___flmul@f1+2
  8478  2CEF  3051               	movlw	81
  8479  2CF0  00B5               	movwf	___flmul@f1+1
  8480  2CF1  30EC               	movlw	236
  8481  2CF2  00B4               	movwf	___flmul@f1
  8482  2CF3  3041               	movlw	65
  8483  2CF4  00CA               	movwf	___fldiv@f2+3
  8484  2CF5  3020               	movlw	32
  8485  2CF6  00C9               	movwf	___fldiv@f2+2
  8486  2CF7  01C8               	clrf	___fldiv@f2+1
  8487  2CF8  01C7               	clrf	___fldiv@f2
  8488  2CF9  0869               	movf	_battery_voltage_value+1,w
  8489  2CFA  00B1               	movwf	___lwtofl@c+1
  8490  2CFB  0868               	movf	_battery_voltage_value,w
  8491  2CFC  00B0               	movwf	___lwtofl@c
  8492  2CFD  319B  231C  31AC   	fcall	___lwtofl
  8493  2D00  3186  26E1  31AC   	fcall	PL56	;call to abstracted procedure
  8494  2D03  31A2  2291  31AC   	fcall	___fldiv
  8495  2D06  3186  26D8  31AC   	fcall	PL36	;call to abstracted procedure
  8496  2D09  31A2  22FC  31AC   	fcall	___flmul
  8497  2D0C  0837               	movf	?___flmul+3,w
  8498  2D0D  0022               	movlb	2	; select bank2
  8499  2D0E  00A3               	movwf	(_b_v+3)^(0+256)
  8500  2D0F  0020               	movlb	0	; select bank0
  8501  2D10  0836               	movf	?___flmul+2,w
  8502  2D11  0022               	movlb	2	; select bank2
  8503  2D12  00A2               	movwf	(_b_v+2)^(0+256)
  8504  2D13  0020               	movlb	0	; select bank0
  8505  2D14  0835               	movf	?___flmul+1,w
  8506  2D15  0022               	movlb	2	; select bank2
  8507  2D16  00A1               	movwf	(_b_v+1)^(0+256)
  8508  2D17  0020               	movlb	0	; select bank0
  8509  2D18  0834               	movf	?___flmul,w
  8510  2D19  0022               	movlb	2	; select bank2
  8511  2D1A  00A0               	movwf	_b_v^(0+256)
  8512                           
  8513                           ;uart.c: 254: load_v=(float)(((float)load_voltage_value)/10)*61;
  8514  2D1B  3042               	movlw	66
  8515  2D1C  3187  27BB  31AC   	fcall	PL164	;call to abstracted procedure
  8516  2D1F  0021               	movlb	1	; select bank1
  8517  2D20  31B4  24BE  31AC   	fcall	PL106	;call to abstracted procedure
  8518  2D23  319B  231C  31AC   	fcall	___lwtofl
  8519  2D26  3186  26E1  31AC   	fcall	PL56	;call to abstracted procedure
  8520  2D29  31A2  2291  31AC   	fcall	___fldiv
  8521  2D2C  3186  26D8  31AC   	fcall	PL36	;call to abstracted procedure
  8522  2D2F  31A2  22FC  31AC   	fcall	___flmul
  8523  2D32  0837               	movf	?___flmul+3,w
  8524  2D33  0024               	movlb	4	; select bank4
  8525  2D34  00B3               	movwf	(_load_v+3)^(0+512)
  8526  2D35  0020               	movlb	0	; select bank0
  8527  2D36  0836               	movf	?___flmul+2,w
  8528  2D37  0024               	movlb	4	; select bank4
  8529  2D38  00B2               	movwf	(_load_v+2)^(0+512)
  8530  2D39  0020               	movlb	0	; select bank0
  8531  2D3A  0835               	movf	?___flmul+1,w
  8532  2D3B  0024               	movlb	4	; select bank4
  8533  2D3C  00B1               	movwf	(_load_v+1)^(0+512)
  8534  2D3D  0020               	movlb	0	; select bank0
  8535  2D3E  0834               	movf	?___flmul,w
  8536  2D3F  0024               	movlb	4	; select bank4
  8537  2D40  00B0               	movwf	_load_v^(0+512)
  8538                           
  8539                           ;uart.c: 256: charge_I=((float)charge_current_value)/0.15;
  8540  2D41  303E               	movlw	62
  8541  2D42  0020               	movlb	0	; select bank0
  8542  2D43  00CA               	movwf	___fldiv@f2+3
  8543  2D44  3019               	movlw	25
  8544  2D45  00C9               	movwf	___fldiv@f2+2
  8545  2D46  3099               	movlw	153
  8546  2D47  00C8               	movwf	___fldiv@f2+1
  8547  2D48  309A               	movlw	154
  8548  2D49  00C7               	movwf	___fldiv@f2
  8549  2D4A  0021               	movlb	1	; select bank1
  8550  2D4B  0849               	movf	(_charge_current_value+1)^(0+128),w
  8551  2D4C  3187  27DB  31AC   	fcall	PL194	;call to abstracted procedure
  8552  2D4F  319B  231C  31AC   	fcall	___lwtofl
  8553  2D52  3186  26E1  31AC   	fcall	PL56	;call to abstracted procedure
  8554  2D55  31A2  2291  31AC   	fcall	___fldiv
  8555  2D58  084A               	movf	?___fldiv+3,w
  8556  2D59  0024               	movlb	4	; select bank4
  8557  2D5A  00AB               	movwf	(_charge_I+3)^(0+512)
  8558  2D5B  0020               	movlb	0	; select bank0
  8559  2D5C  0849               	movf	?___fldiv+2,w
  8560  2D5D  0024               	movlb	4	; select bank4
  8561  2D5E  00AA               	movwf	(_charge_I+2)^(0+512)
  8562  2D5F  0020               	movlb	0	; select bank0
  8563  2D60  0848               	movf	?___fldiv+1,w
  8564  2D61  0024               	movlb	4	; select bank4
  8565  2D62  00A9               	movwf	(_charge_I+1)^(0+512)
  8566  2D63  0020               	movlb	0	; select bank0
  8567  2D64  0847               	movf	?___fldiv,w
  8568  2D65  0024               	movlb	4	; select bank4
  8569  2D66  00A8               	movwf	_charge_I^(0+512)
  8570                           
  8571                           ;uart.c: 258: load_I=((float)discharge_current_value)/1.60;
  8572  2D67  303F               	movlw	63
  8573  2D68  0020               	movlb	0	; select bank0
  8574  2D69  00CA               	movwf	___fldiv@f2+3
  8575  2D6A  30CC               	movlw	204
  8576  2D6B  00C9               	movwf	___fldiv@f2+2
  8577  2D6C  00C8               	movwf	___fldiv@f2+1
  8578  2D6D  30CD               	movlw	205
  8579  2D6E  00C7               	movwf	___fldiv@f2
  8580  2D6F  0021               	movlb	1	; select bank1
  8581  2D70  084B               	movf	(_discharge_current_value+1)^(0+128),w
  8582  2D71  0020               	movlb	0	; select bank0
  8583  2D72  00B1               	movwf	___lwtofl@c+1
  8584  2D73  0021               	movlb	1	; select bank1
  8585  2D74  084A               	movf	_discharge_current_value^(0+128),w
  8586  2D75  0020               	movlb	0	; select bank0
  8587  2D76  00B0               	movwf	___lwtofl@c
  8588  2D77  319B  231C  31AC   	fcall	___lwtofl
  8589  2D7A  3186  26E1  31AC   	fcall	PL56	;call to abstracted procedure
  8590  2D7D  31A2  2291  31AC   	fcall	___fldiv
  8591  2D80  084A               	movf	?___fldiv+3,w
  8592  2D81  0024               	movlb	4	; select bank4
  8593  2D82  00AF               	movwf	(_load_I+3)^(0+512)
  8594  2D83  0020               	movlb	0	; select bank0
  8595  2D84  0849               	movf	?___fldiv+2,w
  8596  2D85  0024               	movlb	4	; select bank4
  8597  2D86  00AE               	movwf	(_load_I+2)^(0+512)
  8598  2D87  0020               	movlb	0	; select bank0
  8599  2D88  0848               	movf	?___fldiv+1,w
  8600  2D89  0024               	movlb	4	; select bank4
  8601  2D8A  00AD               	movwf	(_load_I+1)^(0+512)
  8602  2D8B  0020               	movlb	0	; select bank0
  8603  2D8C  0847               	movf	?___fldiv,w
  8604  2D8D  0024               	movlb	4	; select bank4
  8605  2D8E  00AC               	movwf	_load_I^(0+512)
  8606                           
  8607                           ;uart.c: 260: sys_mode=(volt_id<<4)|system_status;
  8608  2D8F  0021               	movlb	1	; select bank1
  8609  2D90  0E6D               	swapf	_volt_id^(0+128),w
  8610  2D91  39F0               	andlw	240
  8611  2D92  0458               	iorwf	_system_status^(0+128),w
  8612  2D93  0022               	movlb	2	; select bank2
  8613  2D94  00C6               	movwf	_sys_mode^(0+256)
  8614                           
  8615                           ;uart.c: 264: uart1_tx_buf[0]=0x55;
  8616  2D95  3055               	movlw	85
  8617  2D96  0027               	movlb	7	; select bank7
  8618  2D97  00A0               	movwf	_uart1_tx_buf^(0+896)
  8619                           
  8620                           ;uart.c: 266: uart1_tx_buf[1]=0xB1;
  8621  2D98  30B1               	movlw	177
  8622  2D99  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
  8623                           
  8624                           ;uart.c: 268: uart1_tx_buf[2]=(unsigned char )(p_v/256);
  8625  2D9A  0024               	movlb	4	; select bank4
  8626  2D9B  083B               	movf	(_p_v+3)^(0+512),w
  8627  2D9C  0020               	movlb	0	; select bank0
  8628  2D9D  00CE               	movwf	___fldiv@f1+3
  8629  2D9E  0024               	movlb	4	; select bank4
  8630  2D9F  083A               	movf	(_p_v+2)^(0+512),w
  8631  2DA0  0020               	movlb	0	; select bank0
  8632  2DA1  00CD               	movwf	___fldiv@f1+2
  8633  2DA2  0024               	movlb	4	; select bank4
  8634  2DA3  0839               	movf	(_p_v+1)^(0+512),w
  8635  2DA4  0020               	movlb	0	; select bank0
  8636  2DA5  00CC               	movwf	___fldiv@f1+1
  8637  2DA6  0024               	movlb	4	; select bank4
  8638  2DA7  0838               	movf	_p_v^(0+512),w
  8639  2DA8  3186  26C6  31AC   	fcall	PL32	;call to abstracted procedure
  8640  2DAB  31A2  2291  31AC   	fcall	___fldiv
  8641  2DAE  3186  26CF  31AC   	fcall	PL34	;call to abstracted procedure
  8642  2DB1  318E  2674  31AC   	fcall	___fltol
  8643  2DB4  085A               	movf	?___fltol,w
  8644  2DB5  0027               	movlb	7	; select bank7
  8645  2DB6  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
  8646                           
  8647                           ;uart.c: 269: uart1_tx_buf[3]=(unsigned char )p_v;
  8648  2DB7  0024               	movlb	4	; select bank4
  8649  2DB8  083B               	movf	(_p_v+3)^(0+512),w
  8650  2DB9  0020               	movlb	0	; select bank0
  8651  2DBA  00DD               	movwf	___fltol@f1+3
  8652  2DBB  0024               	movlb	4	; select bank4
  8653  2DBC  083A               	movf	(_p_v+2)^(0+512),w
  8654  2DBD  0020               	movlb	0	; select bank0
  8655  2DBE  00DC               	movwf	___fltol@f1+2
  8656  2DBF  0024               	movlb	4	; select bank4
  8657  2DC0  0839               	movf	(_p_v+1)^(0+512),w
  8658  2DC1  0020               	movlb	0	; select bank0
  8659  2DC2  00DB               	movwf	___fltol@f1+1
  8660  2DC3  0024               	movlb	4	; select bank4
  8661  2DC4  0838               	movf	_p_v^(0+512),w
  8662  2DC5  0020               	movlb	0	; select bank0
  8663  2DC6  00DA               	movwf	___fltol@f1
  8664  2DC7  318E  2674  31AC   	fcall	___fltol
  8665  2DCA  085A               	movf	?___fltol,w
  8666  2DCB  0027               	movlb	7	; select bank7
  8667  2DCC  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
  8668                           
  8669                           ;uart.c: 271: uart1_tx_buf[4]=(unsigned char )(b_v/256);
  8670  2DCD  0022               	movlb	2	; select bank2
  8671  2DCE  0823               	movf	(_b_v+3)^(0+256),w
  8672  2DCF  0020               	movlb	0	; select bank0
  8673  2DD0  00CE               	movwf	___fldiv@f1+3
  8674  2DD1  0022               	movlb	2	; select bank2
  8675  2DD2  0822               	movf	(_b_v+2)^(0+256),w
  8676  2DD3  0020               	movlb	0	; select bank0
  8677  2DD4  00CD               	movwf	___fldiv@f1+2
  8678  2DD5  0022               	movlb	2	; select bank2
  8679  2DD6  0821               	movf	(_b_v+1)^(0+256),w
  8680  2DD7  0020               	movlb	0	; select bank0
  8681  2DD8  00CC               	movwf	___fldiv@f1+1
  8682  2DD9  0022               	movlb	2	; select bank2
  8683  2DDA  0820               	movf	_b_v^(0+256),w
  8684  2DDB  3186  26C6  31AC   	fcall	PL32	;call to abstracted procedure
  8685  2DDE  31A2  2291  31AC   	fcall	___fldiv
  8686  2DE1  3186  26CF  31AC   	fcall	PL34	;call to abstracted procedure
  8687  2DE4  318E  2674  31AC   	fcall	___fltol
  8688  2DE7  085A               	movf	?___fltol,w
  8689  2DE8  0027               	movlb	7	; select bank7
  8690  2DE9  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
  8691                           
  8692                           ;uart.c: 272: uart1_tx_buf[5]=(unsigned char )b_v;
  8693  2DEA  0022               	movlb	2	; select bank2
  8694  2DEB  0823               	movf	(_b_v+3)^(0+256),w
  8695  2DEC  0020               	movlb	0	; select bank0
  8696  2DED  00DD               	movwf	___fltol@f1+3
  8697  2DEE  0022               	movlb	2	; select bank2
  8698  2DEF  0822               	movf	(_b_v+2)^(0+256),w
  8699  2DF0  0020               	movlb	0	; select bank0
  8700  2DF1  00DC               	movwf	___fltol@f1+2
  8701  2DF2  0022               	movlb	2	; select bank2
  8702  2DF3  0821               	movf	(_b_v+1)^(0+256),w
  8703  2DF4  0020               	movlb	0	; select bank0
  8704  2DF5  00DB               	movwf	___fltol@f1+1
  8705  2DF6  0022               	movlb	2	; select bank2
  8706  2DF7  0820               	movf	_b_v^(0+256),w
  8707  2DF8  0020               	movlb	0	; select bank0
  8708  2DF9  00DA               	movwf	___fltol@f1
  8709  2DFA  318E  2674  31AC   	fcall	___fltol
  8710  2DFD  085A               	movf	?___fltol,w
  8711  2DFE  0027               	movlb	7	; select bank7
  8712  2DFF  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
  8713                           
  8714                           ;uart.c: 274: uart1_tx_buf[6]=(unsigned char )(load_v/256);
  8715  2E00  0024               	movlb	4	; select bank4
  8716  2E01  0833               	movf	(_load_v+3)^(0+512),w
  8717  2E02  0020               	movlb	0	; select bank0
  8718  2E03  00CE               	movwf	___fldiv@f1+3
  8719  2E04  0024               	movlb	4	; select bank4
  8720  2E05  0832               	movf	(_load_v+2)^(0+512),w
  8721  2E06  0020               	movlb	0	; select bank0
  8722  2E07  00CD               	movwf	___fldiv@f1+2
  8723  2E08  0024               	movlb	4	; select bank4
  8724  2E09  0831               	movf	(_load_v+1)^(0+512),w
  8725  2E0A  0020               	movlb	0	; select bank0
  8726  2E0B  00CC               	movwf	___fldiv@f1+1
  8727  2E0C  0024               	movlb	4	; select bank4
  8728  2E0D  0830               	movf	_load_v^(0+512),w
  8729  2E0E  3186  26C6  31AC   	fcall	PL32	;call to abstracted procedure
  8730  2E11  31A2  2291  31AC   	fcall	___fldiv
  8731  2E14  3186  26CF  31AC   	fcall	PL34	;call to abstracted procedure
  8732  2E17  318E  2674  31AC   	fcall	___fltol
  8733  2E1A  085A               	movf	?___fltol,w
  8734  2E1B  0027               	movlb	7	; select bank7
  8735  2E1C  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
  8736                           
  8737                           ;uart.c: 275: uart1_tx_buf[7]=(unsigned char )load_v;
  8738  2E1D  0024               	movlb	4	; select bank4
  8739  2E1E  0833               	movf	(_load_v+3)^(0+512),w
  8740  2E1F  0020               	movlb	0	; select bank0
  8741  2E20  00DD               	movwf	___fltol@f1+3
  8742  2E21  0024               	movlb	4	; select bank4
  8743  2E22  0832               	movf	(_load_v+2)^(0+512),w
  8744  2E23  0020               	movlb	0	; select bank0
  8745  2E24  00DC               	movwf	___fltol@f1+2
  8746  2E25  0024               	movlb	4	; select bank4
  8747  2E26  0831               	movf	(_load_v+1)^(0+512),w
  8748  2E27  0020               	movlb	0	; select bank0
  8749  2E28  00DB               	movwf	___fltol@f1+1
  8750  2E29  0024               	movlb	4	; select bank4
  8751  2E2A  0830               	movf	_load_v^(0+512),w
  8752  2E2B  0020               	movlb	0	; select bank0
  8753  2E2C  00DA               	movwf	___fltol@f1
  8754  2E2D  318E  2674  31AC   	fcall	___fltol
  8755  2E30  085A               	movf	?___fltol,w
  8756  2E31  0027               	movlb	7	; select bank7
  8757  2E32  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
  8758                           
  8759                           ;uart.c: 277: uart1_tx_buf[8]=(unsigned char )(charge_I/256);
  8760  2E33  0024               	movlb	4	; select bank4
  8761  2E34  082B               	movf	(_charge_I+3)^(0+512),w
  8762  2E35  0020               	movlb	0	; select bank0
  8763  2E36  00CE               	movwf	___fldiv@f1+3
  8764  2E37  0024               	movlb	4	; select bank4
  8765  2E38  082A               	movf	(_charge_I+2)^(0+512),w
  8766  2E39  0020               	movlb	0	; select bank0
  8767  2E3A  00CD               	movwf	___fldiv@f1+2
  8768  2E3B  0024               	movlb	4	; select bank4
  8769  2E3C  0829               	movf	(_charge_I+1)^(0+512),w
  8770  2E3D  0020               	movlb	0	; select bank0
  8771  2E3E  00CC               	movwf	___fldiv@f1+1
  8772  2E3F  0024               	movlb	4	; select bank4
  8773  2E40  0828               	movf	_charge_I^(0+512),w
  8774  2E41  3186  26C6  31AC   	fcall	PL32	;call to abstracted procedure
  8775  2E44  31A2  2291  31AC   	fcall	___fldiv
  8776  2E47  3186  26CF  31AC   	fcall	PL34	;call to abstracted procedure
  8777  2E4A  318E  2674  31AC   	fcall	___fltol
  8778  2E4D  085A               	movf	?___fltol,w
  8779  2E4E  0027               	movlb	7	; select bank7
  8780  2E4F  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
  8781                           
  8782                           ;uart.c: 278: uart1_tx_buf[9]=(unsigned char )charge_I;
  8783  2E50  0024               	movlb	4	; select bank4
  8784  2E51  082B               	movf	(_charge_I+3)^(0+512),w
  8785  2E52  0020               	movlb	0	; select bank0
  8786  2E53  00DD               	movwf	___fltol@f1+3
  8787  2E54  0024               	movlb	4	; select bank4
  8788  2E55  082A               	movf	(_charge_I+2)^(0+512),w
  8789  2E56  0020               	movlb	0	; select bank0
  8790  2E57  00DC               	movwf	___fltol@f1+2
  8791  2E58  0024               	movlb	4	; select bank4
  8792  2E59  0829               	movf	(_charge_I+1)^(0+512),w
  8793  2E5A  0020               	movlb	0	; select bank0
  8794  2E5B  00DB               	movwf	___fltol@f1+1
  8795  2E5C  0024               	movlb	4	; select bank4
  8796  2E5D  0828               	movf	_charge_I^(0+512),w
  8797  2E5E  0020               	movlb	0	; select bank0
  8798  2E5F  00DA               	movwf	___fltol@f1
  8799  2E60  318E  2674  31AC   	fcall	___fltol
  8800  2E63  085A               	movf	?___fltol,w
  8801  2E64  0027               	movlb	7	; select bank7
  8802  2E65  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
  8803                           
  8804                           ;uart.c: 280: uart1_tx_buf[10]=(unsigned char )(load_I/256);
  8805  2E66  0024               	movlb	4	; select bank4
  8806  2E67  082F               	movf	(_load_I+3)^(0+512),w
  8807  2E68  0020               	movlb	0	; select bank0
  8808  2E69  00CE               	movwf	___fldiv@f1+3
  8809  2E6A  0024               	movlb	4	; select bank4
  8810  2E6B  082E               	movf	(_load_I+2)^(0+512),w
  8811  2E6C  0020               	movlb	0	; select bank0
  8812  2E6D  00CD               	movwf	___fldiv@f1+2
  8813  2E6E  0024               	movlb	4	; select bank4
  8814  2E6F  082D               	movf	(_load_I+1)^(0+512),w
  8815  2E70  0020               	movlb	0	; select bank0
  8816  2E71  00CC               	movwf	___fldiv@f1+1
  8817  2E72  0024               	movlb	4	; select bank4
  8818  2E73  082C               	movf	_load_I^(0+512),w
  8819  2E74  3186  26C6  31AC   	fcall	PL32	;call to abstracted procedure
  8820  2E77  31A2  2291  31AC   	fcall	___fldiv
  8821  2E7A  3186  26CF  31AC   	fcall	PL34	;call to abstracted procedure
  8822  2E7D  318E  2674  31AC   	fcall	___fltol
  8823  2E80  085A               	movf	?___fltol,w
  8824  2E81  0027               	movlb	7	; select bank7
  8825  2E82  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
  8826                           
  8827                           ;uart.c: 281: uart1_tx_buf[11]=(unsigned char )load_I;
  8828  2E83  0024               	movlb	4	; select bank4
  8829  2E84  082F               	movf	(_load_I+3)^(0+512),w
  8830  2E85  0020               	movlb	0	; select bank0
  8831  2E86  00DD               	movwf	___fltol@f1+3
  8832  2E87  0024               	movlb	4	; select bank4
  8833  2E88  082E               	movf	(_load_I+2)^(0+512),w
  8834  2E89  0020               	movlb	0	; select bank0
  8835  2E8A  00DC               	movwf	___fltol@f1+2
  8836  2E8B  0024               	movlb	4	; select bank4
  8837  2E8C  082D               	movf	(_load_I+1)^(0+512),w
  8838  2E8D  0020               	movlb	0	; select bank0
  8839  2E8E  00DB               	movwf	___fltol@f1+1
  8840  2E8F  0024               	movlb	4	; select bank4
  8841  2E90  082C               	movf	_load_I^(0+512),w
  8842  2E91  0020               	movlb	0	; select bank0
  8843  2E92  00DA               	movwf	___fltol@f1
  8844  2E93  318E  2674  31AC   	fcall	___fltol
  8845  2E96  085A               	movf	?___fltol,w
  8846  2E97  0027               	movlb	7	; select bank7
  8847  2E98  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
  8848                           
  8849                           ;uart.c: 283: uart1_tx_buf[12]=(unsigned char )sys_mode;
  8850  2E99  0022               	movlb	2	; select bank2
  8851  2E9A  0846               	movf	_sys_mode^(0+256),w
  8852  2E9B  0027               	movlb	7	; select bank7
  8853  2E9C  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
  8854                           
  8855                           ;uart.c: 285: uart1_tx_buf[13]=(unsigned char )(mcu_value/256);
  8856  2E9D  01AD               	clrf	(_uart1_tx_buf^(0+896)+13)
  8857                           
  8858                           ;uart.c: 287: uart1_tx_buf[14]=(unsigned char )(mcu_value);
  8859  2E9E  01AE               	clrf	(_uart1_tx_buf^(0+896)+14)
  8860                           
  8861                           ;uart.c: 289: uart1_tx_buf[15]=(unsigned char )(discharge_current_value/256);
  8862  2E9F  0021               	movlb	1	; select bank1
  8863  2EA0  084B               	movf	(_discharge_current_value+1)^(0+128),w
  8864  2EA1  0027               	movlb	7	; select bank7
  8865  2EA2  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
  8866                           
  8867                           ;uart.c: 291: uart1_tx_buf[16]=(unsigned char )(discharge_current_value);
  8868  2EA3  0021               	movlb	1	; select bank1
  8869  2EA4  084A               	movf	_discharge_current_value^(0+128),w
  8870  2EA5  0027               	movlb	7	; select bank7
  8871  2EA6  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
  8872                           
  8873                           ;uart.c: 293: uart1_tx_buf[17]=(unsigned char )(temperature_value/256);
  8874  2EA7  0022               	movlb	2	; select bank2
  8875  2EA8  0825               	movf	(_temperature_value+1)^(0+256),w
  8876  2EA9  0027               	movlb	7	; select bank7
  8877  2EAA  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
  8878                           
  8879                           ;uart.c: 295: uart1_tx_buf[18]=(unsigned char )(temperature_value);
  8880  2EAB  0022               	movlb	2	; select bank2
  8881  2EAC  0824               	movf	_temperature_value^(0+256),w
  8882  2EAD  0027               	movlb	7	; select bank7
  8883  2EAE  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
  8884                           
  8885                           ;uart.c: 298: uart1_tx_buf[19]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
  8886  2EAF  0020               	movlb	0	; select bank0
  8887  2EB0  3187  270D  31AC   	fcall	PL102	;call to abstracted procedure
  8888  2EB3  3E12               	addlw	18
  8889  2EB4  31A6  2650  31AC   	fcall	_eeprom_read
  8890  2EB7  0027               	movlb	7	; select bank7
  8891  2EB8  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
  8892                           
  8893                           ;uart.c: 300: uart1_tx_buf[20]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
  8894  2EB9  0020               	movlb	0	; select bank0
  8895  2EBA  3187  270D  31AC   	fcall	PL102	;call to abstracted procedure
  8896  2EBD  3E13               	addlw	19
  8897  2EBE  31A6  2650  31AC   	fcall	_eeprom_read
  8898  2EC1  0027               	movlb	7	; select bank7
  8899  2EC2  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
  8900                           
  8901                           ;uart.c: 302: uart1_tx_buf[21]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
  8902  2EC3  0020               	movlb	0	; select bank0
  8903  2EC4  3187  270D  31AC   	fcall	PL102	;call to abstracted procedure
  8904  2EC7  3E14               	addlw	20
  8905  2EC8  31A6  2650  31AC   	fcall	_eeprom_read
  8906  2ECB  0027               	movlb	7	; select bank7
  8907  2ECC  00B5               	movwf	(_uart1_tx_buf^(0+896)+21)
  8908                           
  8909                           ;uart.c: 304: uart1_tx_buf[22]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
  8910  2ECD  0020               	movlb	0	; select bank0
  8911  2ECE  3187  270D  31AC   	fcall	PL102	;call to abstracted procedure
  8912  2ED1  3E15               	addlw	21
  8913  2ED2  31A6  2650  31AC   	fcall	_eeprom_read
  8914  2ED5  0027               	movlb	7	; select bank7
  8915  2ED6  00B6               	movwf	(_uart1_tx_buf^(0+896)+22)
  8916                           
  8917                           ;uart.c: 307: uart1_tx_buf[23]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
  8918  2ED7  0020               	movlb	0	; select bank0
  8919  2ED8  3187  27A8  31AC   	fcall	PL156	;call to abstracted procedure
  8920  2EDB  3E12               	addlw	18
  8921  2EDC  31A6  2650  31AC   	fcall	_eeprom_read
  8922  2EDF  0027               	movlb	7	; select bank7
  8923  2EE0  00B7               	movwf	(_uart1_tx_buf^(0+896)+23)
  8924                           
  8925                           ;uart.c: 309: uart1_tx_buf[24]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
  8926  2EE1  0020               	movlb	0	; select bank0
  8927  2EE2  3187  27A8  31AC   	fcall	PL156	;call to abstracted procedure
  8928  2EE5  3E13               	addlw	19
  8929  2EE6  31A6  2650  31AC   	fcall	_eeprom_read
  8930  2EE9  0027               	movlb	7	; select bank7
  8931  2EEA  00B8               	movwf	(_uart1_tx_buf^(0+896)+24)
  8932                           
  8933                           ;uart.c: 311: uart1_tx_buf[25]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
  8934  2EEB  0020               	movlb	0	; select bank0
  8935  2EEC  3187  27A8  31AC   	fcall	PL156	;call to abstracted procedure
  8936  2EEF  3E14               	addlw	20
  8937  2EF0  31A6  2650  31AC   	fcall	_eeprom_read
  8938  2EF3  0027               	movlb	7	; select bank7
  8939  2EF4  00B9               	movwf	(_uart1_tx_buf^(0+896)+25)
  8940                           
  8941                           ;uart.c: 313: uart1_tx_buf[26]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
  8942  2EF5  0020               	movlb	0	; select bank0
  8943  2EF6  3187  27A8  31AC   	fcall	PL156	;call to abstracted procedure
  8944  2EF9  3E15               	addlw	21
  8945  2EFA  31A6  2650  31AC   	fcall	_eeprom_read
  8946  2EFD  0027               	movlb	7	; select bank7
  8947  2EFE  00BA               	movwf	(_uart1_tx_buf^(0+896)+26)
  8948                           
  8949                           ;uart.c: 316: uart1_tx_buf[27]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
  8950  2EFF  0020               	movlb	0	; select bank0
  8951  2F00  3187  27AE  31AC   	fcall	PL158	;call to abstracted procedure
  8952  2F03  3E12               	addlw	18
  8953  2F04  31A6  2650  31AC   	fcall	_eeprom_read
  8954  2F07  0027               	movlb	7	; select bank7
  8955  2F08  00BB               	movwf	(_uart1_tx_buf^(0+896)+27)
  8956                           
  8957                           ;uart.c: 318: uart1_tx_buf[28]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
  8958  2F09  0020               	movlb	0	; select bank0
  8959  2F0A  3187  27AE  31AC   	fcall	PL158	;call to abstracted procedure
  8960  2F0D  3E13               	addlw	19
  8961  2F0E  31A6  2650  31AC   	fcall	_eeprom_read
  8962  2F11  0027               	movlb	7	; select bank7
  8963  2F12  00BC               	movwf	(_uart1_tx_buf^(0+896)+28)
  8964                           
  8965                           ;uart.c: 320: uart1_tx_buf[29]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
  8966  2F13  0020               	movlb	0	; select bank0
  8967  2F14  3187  27AE  31AC   	fcall	PL158	;call to abstracted procedure
  8968  2F17  3E14               	addlw	20
  8969  2F18  31A6  2650  31AC   	fcall	_eeprom_read
  8970  2F1B  0027               	movlb	7	; select bank7
  8971  2F1C  00BD               	movwf	(_uart1_tx_buf^(0+896)+29)
  8972                           
  8973                           ;uart.c: 322: uart1_tx_buf[30]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
  8974  2F1D  0020               	movlb	0	; select bank0
  8975  2F1E  3187  27AE  31AC   	fcall	PL158	;call to abstracted procedure
  8976  2F21  3E15               	addlw	21
  8977  2F22  31A6  2650  31AC   	fcall	_eeprom_read
  8978  2F25  0027               	movlb	7	; select bank7
  8979  2F26  00BE               	movwf	(_uart1_tx_buf^(0+896)+30)
  8980                           
  8981                           ;uart.c: 325: uart1_tx_buf[31]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
  8982  2F27  0020               	movlb	0	; select bank0
  8983  2F28  3187  27A2  31AC   	fcall	PL154	;call to abstracted procedure
  8984  2F2B  3E12               	addlw	18
  8985  2F2C  31A6  2650  31AC   	fcall	_eeprom_read
  8986  2F2F  0027               	movlb	7	; select bank7
  8987  2F30  00BF               	movwf	(_uart1_tx_buf^(0+896)+31)
  8988                           
  8989                           ;uart.c: 327: uart1_tx_buf[32]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
  8990  2F31  0020               	movlb	0	; select bank0
  8991  2F32  3187  27A2  31AC   	fcall	PL154	;call to abstracted procedure
  8992  2F35  3E13               	addlw	19
  8993  2F36  31A6  2650  31AC   	fcall	_eeprom_read
  8994  2F39  0027               	movlb	7	; select bank7
  8995  2F3A  00C0               	movwf	(_uart1_tx_buf^(0+896)+32)
  8996                           
  8997                           ;uart.c: 329: uart1_tx_buf[33]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
  8998  2F3B  0020               	movlb	0	; select bank0
  8999  2F3C  3187  27A2  31AC   	fcall	PL154	;call to abstracted procedure
  9000  2F3F  3E14               	addlw	20
  9001  2F40  31A6  2650  31AC   	fcall	_eeprom_read
  9002  2F43  0027               	movlb	7	; select bank7
  9003  2F44  00C1               	movwf	(_uart1_tx_buf^(0+896)+33)
  9004                           
  9005                           ;uart.c: 331: uart1_tx_buf[34]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
  9006  2F45  0020               	movlb	0	; select bank0
  9007  2F46  3187  27A2  31AC   	fcall	PL154	;call to abstracted procedure
  9008  2F49  3E15               	addlw	21
  9009  2F4A  31A6  2650  31AC   	fcall	_eeprom_read
  9010  2F4D  0027               	movlb	7	; select bank7
  9011  2F4E  00C2               	movwf	(_uart1_tx_buf^(0+896)+34)
  9012                           
  9013                           ;uart.c: 334: uart1_tx_buf[35]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
  9014  2F4F  0020               	movlb	0	; select bank0
  9015  2F50  3187  279C  31AC   	fcall	PL152	;call to abstracted procedure
  9016  2F53  3E12               	addlw	18
  9017  2F54  31A6  2650  31AC   	fcall	_eeprom_read
  9018  2F57  0027               	movlb	7	; select bank7
  9019  2F58  00C3               	movwf	(_uart1_tx_buf^(0+896)+35)
  9020                           
  9021                           ;uart.c: 336: uart1_tx_buf[36]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
  9022  2F59  0020               	movlb	0	; select bank0
  9023  2F5A  3187  279C  31AC   	fcall	PL152	;call to abstracted procedure
  9024  2F5D  3E13               	addlw	19
  9025  2F5E  31A6  2650  31AC   	fcall	_eeprom_read
  9026  2F61  0027               	movlb	7	; select bank7
  9027  2F62  00C4               	movwf	(_uart1_tx_buf^(0+896)+36)
  9028                           
  9029                           ;uart.c: 338: uart1_tx_buf[37]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
  9030  2F63  0020               	movlb	0	; select bank0
  9031  2F64  3187  279C  31AC   	fcall	PL152	;call to abstracted procedure
  9032  2F67  3E14               	addlw	20
  9033  2F68  31A6  2650  31AC   	fcall	_eeprom_read
  9034  2F6B  0027               	movlb	7	; select bank7
  9035  2F6C  00C5               	movwf	(_uart1_tx_buf^(0+896)+37)
  9036                           
  9037                           ;uart.c: 340: uart1_tx_buf[38]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
  9038  2F6D  0020               	movlb	0	; select bank0
  9039  2F6E  3187  279C  31AC   	fcall	PL152	;call to abstracted procedure
  9040  2F71  3E15               	addlw	21
  9041  2F72  31A6  2650  31AC   	fcall	_eeprom_read
  9042  2F75  0027               	movlb	7	; select bank7
  9043  2F76  00C6               	movwf	(_uart1_tx_buf^(0+896)+38)
  9044                           
  9045                           ;uart.c: 343: uart1_tx_buf[39]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
  9046  2F77  0020               	movlb	0	; select bank0
  9047  2F78  3187  278A  31AC   	fcall	PL144	;call to abstracted procedure
  9048  2F7B  3E12               	addlw	18
  9049  2F7C  31A6  2650  31AC   	fcall	_eeprom_read
  9050  2F7F  0027               	movlb	7	; select bank7
  9051  2F80  00C7               	movwf	(_uart1_tx_buf^(0+896)+39)
  9052                           
  9053                           ;uart.c: 345: uart1_tx_buf[40]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
  9054  2F81  0020               	movlb	0	; select bank0
  9055  2F82  3187  278A  31AC   	fcall	PL144	;call to abstracted procedure
  9056  2F85  3E13               	addlw	19
  9057  2F86  31A6  2650  31AC   	fcall	_eeprom_read
  9058  2F89  0027               	movlb	7	; select bank7
  9059  2F8A  00C8               	movwf	(_uart1_tx_buf^(0+896)+40)
  9060                           
  9061                           ;uart.c: 347: uart1_tx_buf[41]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
  9062  2F8B  0020               	movlb	0	; select bank0
  9063  2F8C  3187  278A  31AC   	fcall	PL144	;call to abstracted procedure
  9064  2F8F  3E14               	addlw	20
  9065  2F90  31A6  2650  31AC   	fcall	_eeprom_read
  9066  2F93  0027               	movlb	7	; select bank7
  9067  2F94  00C9               	movwf	(_uart1_tx_buf^(0+896)+41)
  9068                           
  9069                           ;uart.c: 349: uart1_tx_buf[42]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
  9070  2F95  0020               	movlb	0	; select bank0
  9071  2F96  3187  278A  31AC   	fcall	PL144	;call to abstracted procedure
  9072  2F99  3E15               	addlw	21
  9073  2F9A  31A6  2650  31AC   	fcall	_eeprom_read
  9074  2F9D  0027               	movlb	7	; select bank7
  9075  2F9E  00CA               	movwf	(_uart1_tx_buf^(0+896)+42)
  9076                           
  9077                           ;uart.c: 352: uart1_tx_buf[43]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
  9078  2F9F  0020               	movlb	0	; select bank0
  9079  2FA0  3187  2790  31AC   	fcall	PL146	;call to abstracted procedure
  9080  2FA3  3E12               	addlw	18
  9081  2FA4  31A6  2650  31AC   	fcall	_eeprom_read
  9082  2FA7  0027               	movlb	7	; select bank7
  9083  2FA8  00CB               	movwf	(_uart1_tx_buf^(0+896)+43)
  9084                           
  9085                           ;uart.c: 354: uart1_tx_buf[44]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
  9086  2FA9  0020               	movlb	0	; select bank0
  9087  2FAA  3187  2790  31AC   	fcall	PL146	;call to abstracted procedure
  9088  2FAD  3E13               	addlw	19
  9089  2FAE  31A6  2650  31AC   	fcall	_eeprom_read
  9090  2FB1  0027               	movlb	7	; select bank7
  9091  2FB2  00CC               	movwf	(_uart1_tx_buf^(0+896)+44)
  9092                           
  9093                           ;uart.c: 356: uart1_tx_buf[45]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
  9094  2FB3  0020               	movlb	0	; select bank0
  9095  2FB4  3187  2790  31AC   	fcall	PL146	;call to abstracted procedure
  9096  2FB7  3E14               	addlw	20
  9097  2FB8  31A6  2650  31AC   	fcall	_eeprom_read
  9098  2FBB  0027               	movlb	7	; select bank7
  9099  2FBC  00CD               	movwf	(_uart1_tx_buf^(0+896)+45)
  9100                           
  9101                           ;uart.c: 358: uart1_tx_buf[46]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
  9102  2FBD  0020               	movlb	0	; select bank0
  9103  2FBE  3187  2790  31AC   	fcall	PL146	;call to abstracted procedure
  9104  2FC1  3E15               	addlw	21
  9105  2FC2  31A6  2650  31AC   	fcall	_eeprom_read
  9106  2FC5  0027               	movlb	7	; select bank7
  9107  2FC6  00CE               	movwf	(_uart1_tx_buf^(0+896)+46)
  9108                           
  9109                           ;uart.c: 361: uart1_tx_buf[47]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
  9110  2FC7  0020               	movlb	0	; select bank0
  9111  2FC8  3187  2796  31AC   	fcall	PL150	;call to abstracted procedure
  9112  2FCB  3E12               	addlw	18
  9113  2FCC  31A6  2650  31AC   	fcall	_eeprom_read
  9114  2FCF  0027               	movlb	7	; select bank7
  9115  2FD0  00CF               	movwf	(_uart1_tx_buf^(0+896)+47)
  9116                           
  9117                           ;uart.c: 363: uart1_tx_buf[48]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
  9118  2FD1  0020               	movlb	0	; select bank0
  9119  2FD2  3187  2796  31AC   	fcall	PL150	;call to abstracted procedure
  9120  2FD5  3E13               	addlw	19
  9121  2FD6  31A6  2650  31AC   	fcall	_eeprom_read
  9122  2FD9  0027               	movlb	7	; select bank7
  9123  2FDA  00D0               	movwf	(_uart1_tx_buf^(0+896)+48)
  9124                           
  9125                           ;uart.c: 365: uart1_tx_buf[49]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
  9126  2FDB  0020               	movlb	0	; select bank0
  9127  2FDC  3187  2796  31AC   	fcall	PL150	;call to abstracted procedure
  9128  2FDF  3E14               	addlw	20
  9129  2FE0  31A6  2650  31AC   	fcall	_eeprom_read
  9130  2FE3  0027               	movlb	7	; select bank7
  9131  2FE4  00D1               	movwf	(_uart1_tx_buf^(0+896)+49)
  9132                           
  9133                           ;uart.c: 367: uart1_tx_buf[50]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
  9134  2FE5  0020               	movlb	0	; select bank0
  9135  2FE6  3187  2796  31AC   	fcall	PL150	;call to abstracted procedure
  9136  2FE9  3E15               	addlw	21
  9137  2FEA  31A6  2650  31AC   	fcall	_eeprom_read
  9138  2FED  0027               	movlb	7	; select bank7
  9139  2FEE  00D2               	movwf	(_uart1_tx_buf^(0+896)+50)
  9140                           
  9141                           ;uart.c: 370: crc_data=crc16(&uart1_tx_buf[1],50);
  9142  2FEF  3187  27EB  31AC   	fcall	PL224	;call to abstracted procedure
  9143  2FF2  3032               	movlw	50
  9144  2FF3  00A5               	movwf	crc16@usDataLen
  9145  2FF4  3188  2003  31AC   	fcall	_crc16
  9146                           
  9147                           ;uart.c: 372: uart1_tx_buf[51]=crc_data/256;
  9148  2FF7  3187  27C8         	fcall	PL172	;call to abstracted procedure
  9149  2FF9  00D3               	movwf	(_uart1_tx_buf^(0+896)+51)
  9150                           
  9151                           ;uart.c: 373: uart1_tx_buf[52]=crc_data%256;
  9152  2FFA  087C               	movf	_crc_data,w
  9153  2FFB  00D4               	movwf	(_uart1_tx_buf^(0+896)+52)
  9154                           
  9155                           ;uart.c: 375: uart1_tx_buf[53]=0xAA;
  9156  2FFC  30AA               	movlw	170
  9157  2FFD  00D5               	movwf	(_uart1_tx_buf^(0+896)+53)
  9158  2FFE                     L69:	
  9159  2FFE  3186  2EA1         	goto	l18696
  9160                           
  9161                           	psect	text8
  9162  0803                     __ptext8:	
  9163 ;; *************** function _crc16 *****************
  9164 ;; Defined at:
  9165 ;;		line 75 in file "D:\MCUProject\ZH-SL-H40\src\Modbus.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  puchMsg         2    3[BANK0 ] PTR volatile unsigned ch
  9168 ;;		 -> uart1_tx_buf(80), uart1_rx_buf(80), 
  9169 ;;  usDataLen       1    5[BANK0 ] unsigned char 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  uIndex          4    6[BANK0 ] unsigned long 
  9172 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
  9173 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  2    3[BANK0 ] unsigned int 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9178 ;; Tracked objects:
  9179 ;;		On entry : 1F/0
  9180 ;;		On exit  : 1F/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9183 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;Total ram usage:        9 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    2
  9190 ;; This function calls:
  9191 ;;		Nothing
  9192 ;; This function is called by:
  9193 ;;		_handle_uart_rx_buf
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _crc16
  9199  0803                     _crc16:	
  9200                           
  9201                           ;Modbus.c: 77: unsigned char uchCRCHi = 0xFF ;
  9202                           
  9203                           ;incstack = 0
  9204                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
  9205  0803  30FF               	movlw	255
  9206  0804  00AA               	movwf	crc16@uchCRCHi
  9207  0805                     L6:	
  9208  0805  00AB               	movwf	crc16@uchCRCLo
  9209  0806  03A5               	decf	crc16@usDataLen,f
  9210  0807  0825               	movf	crc16@usDataLen,w
  9211  0808  3AFF               	xorlw	255
  9212  0809  1903               	btfsc	3,2
  9213  080A  2828               	goto	l14826
  9214                           
  9215                           ;Modbus.c: 81: {
  9216                           ;Modbus.c: 82: uIndex = uchCRCHi ^ *puchMsg++ ;
  9217                           
  9218                           ;Modbus.c: 79: unsigned long uIndex ;
  9219                           ;Modbus.c: 80: while (usDataLen--)
  9220                           
  9221                           ;Modbus.c: 78: unsigned char uchCRCLo = 0xFF ;
  9222  080B  0823               	movf	crc16@puchMsg,w
  9223  080C  0086               	movwf	6
  9224  080D  0824               	movf	crc16@puchMsg+1,w
  9225  080E  0087               	movwf	7
  9226  080F  0801               	movf	1,w
  9227  0810  062A               	xorwf	crc16@uchCRCHi,w
  9228  0811  00A6               	movwf	crc16@uIndex
  9229  0812  01A7               	clrf	crc16@uIndex+1
  9230  0813  01A8               	clrf	crc16@uIndex+2
  9231  0814  01A9               	clrf	crc16@uIndex+3
  9232  0815  0AA3               	incf	crc16@puchMsg,f
  9233  0816  1903               	skipnz
  9234  0817  0AA4               	incf	crc16@puchMsg+1,f
  9235                           
  9236                           ;Modbus.c: 83: uchCRCHi = uchCRCLo ^ CRCHi[uIndex] ;
  9237  0818  3E01               	addlw	low (_CRCHi| (0+32768))
  9238  0819  0084               	movwf	4
  9239  081A  30B8               	movlw	high (_CRCHi| (0+32768))
  9240  081B  3D27               	addwfc	crc16@uIndex+1,w
  9241  081C  0085               	movwf	5
  9242  081D  0800               	movf	0,w	;code access
  9243  081E  062B               	xorwf	crc16@uchCRCLo,w
  9244  081F  00AA               	movwf	crc16@uchCRCHi
  9245                           
  9246                           ;Modbus.c: 84: uchCRCLo = CRCLo[uIndex] ;
  9247  0820  3001               	movlw	low (_CRCLo| (0+32768))
  9248  0821  0726               	addwf	crc16@uIndex,w
  9249  0822  0084               	movwf	4
  9250  0823  30B9               	movlw	high (_CRCLo| (0+32768))
  9251  0824  3D27               	addwfc	crc16@uIndex+1,w
  9252  0825  0085               	movwf	5
  9253  0826  0800               	movf	0,w	;code access
  9254  0827  2805               	goto	L6
  9255  0828                     l14826:	
  9256                           
  9257                           ;Modbus.c: 85: }
  9258                           ;Modbus.c: 86: return ( uchCRCHi<< 8 | uchCRCLo);
  9259  0828  082A               	movf	crc16@uchCRCHi,w
  9260  0829  00A4               	movwf	?_crc16+1
  9261  082A  01A3               	clrf	?_crc16
  9262  082B  082B               	movf	crc16@uchCRCLo,w
  9263  082C  04A3               	iorwf	?_crc16,f
  9264  082D  0008               	return
  9265  082E                     __end_of_crc16:	
  9266                           
  9267                           	psect	text11
  9268  2988                     __ptext11:	
  9269 ;; *************** function _handle_ad_loop *****************
  9270 ;; Defined at:
  9271 ;;		line 122 in file "D:\MCUProject\ZH-SL-H40\src\task.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  data_cc_var     4    0[BANK5 ] float 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;		None               void
  9278 ;; Registers used:
  9279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 1F/2
  9282 ;;		On exit  : 1F/2
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:         0       0       0       0       0       0       4       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:         0       2       0       0       0       0       4       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:        6 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    7
  9292 ;; This function calls:
  9293 ;;		_Disable_Bost_Pwm
  9294 ;;		_Disable_Buck_Pwm
  9295 ;;		_Enable_Bost_Pwm
  9296 ;;		_Enable_Buck_Pwm
  9297 ;;		_Mppt_Charge
  9298 ;;		_Set_Bost_Pwm_Duty
  9299 ;;		_Set_Buck_Pwm_Duty
  9300 ;;		___awtofl
  9301 ;;		___fladd
  9302 ;;		___fldiv
  9303 ;;		___flge
  9304 ;;		___flmul
  9305 ;;		___fltol
  9306 ;;		___lldiv
  9307 ;;		___lwdiv
  9308 ;;		___lwtofl
  9309 ;;		___wmul
  9310 ;;		_delay_1us
  9311 ;;		_delay_ms
  9312 ;;		_pid_calc
  9313 ;;		_start_ad_convert
  9314 ;; This function is called by:
  9315 ;;		_main
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function _handle_ad_loop
  9321  2988                     _handle_ad_loop:	
  9322                           
  9323                           ;task.c: 124: float data_cc_var;
  9324                           ;task.c: 126: if(handle_an0_process_flag==0x01)
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in _handle_ad_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9328  2988  0B28               	decfsz	_handle_an0_process_flag^(0+256),w
  9329  2989  298B               	goto	l17294
  9330                           
  9331                           ;task.c: 127: {
  9332                           ;task.c: 199: handle_an0_process_flag=0x00;
  9333  298A  01A8               	clrf	_handle_an0_process_flag^(0+256)
  9334  298B                     l17294:	
  9335                           
  9336                           ;task.c: 201: }
  9337                           ;task.c: 205: if(handle_an1_process_flag==0x01)
  9338  298B  0B2A               	decfsz	_handle_an1_process_flag^(0+256),w
  9339  298C  29BE               	goto	l17320
  9340                           
  9341                           ;task.c: 206: {
  9342                           ;task.c: 208: temperature_value=start_ad_convert(0b00001);
  9343  298D  3001               	movlw	1
  9344  298E  31B5  25A5  31A9   	fcall	_start_ad_convert
  9345  2991  0831               	movf	?_start_ad_convert+1,w
  9346  2992  0022               	movlb	2	; select bank2
  9347  2993  00A5               	movwf	(_temperature_value+1)^(0+256)
  9348  2994  0020               	movlb	0	; select bank0
  9349  2995  0830               	movf	?_start_ad_convert,w
  9350  2996  0022               	movlb	2	; select bank2
  9351  2997  00A4               	movwf	_temperature_value^(0+256)
  9352                           
  9353                           ;task.c: 210: if((temperature_value>4)&&(temperature_value<602))
  9354  2998  3000               	movlw	0
  9355  2999  0225               	subwf	(_temperature_value+1)^(0+256),w
  9356  299A  3005               	movlw	5
  9357  299B  1903               	skipnz
  9358  299C  0224               	subwf	_temperature_value^(0+256),w
  9359  299D  1C03               	skipc
  9360  299E  29B2               	goto	l17312
  9361  299F  3002               	movlw	2
  9362  29A0  0225               	subwf	(_temperature_value+1)^(0+256),w
  9363  29A1  305A               	movlw	90
  9364  29A2  1903               	skipnz
  9365  29A3  0224               	subwf	_temperature_value^(0+256),w
  9366  29A4  1803               	skipnc
  9367  29A5  29B2               	goto	l17312
  9368                           
  9369                           ;task.c: 211: {
  9370                           ;task.c: 212: temper_time_count++;
  9371  29A6  0023               	movlb	3	; select bank3
  9372  29A7  300A               	movlw	10
  9373  29A8  0AC6               	incf	_temper_time_count^(0+384),f
  9374                           
  9375                           ;task.c: 214: over_temper_time_count=0x00;
  9376  29A9  01C4               	clrf	_over_temper_time_count^(0+384)
  9377                           
  9378                           ;task.c: 216: if(temper_time_count>=10)
  9379  29AA  0246               	subwf	_temper_time_count^(0+384),w
  9380  29AB  1C03               	skipc
  9381  29AC  29BC               	goto	l1296
  9382                           
  9383                           ;task.c: 217: {
  9384                           ;task.c: 218: temper_time_count=0x00;
  9385  29AD  01C6               	clrf	_temper_time_count^(0+384)
  9386                           
  9387                           ;task.c: 220: sys_temper_flag=0x01;
  9388  29AE  0022               	movlb	2	; select bank2
  9389  29AF  01EF               	clrf	_sys_temper_flag^(0+256)
  9390  29B0  0AEF               	incf	_sys_temper_flag^(0+256),f
  9391  29B1  29BC               	goto	l1296
  9392  29B2                     l17312:	
  9393                           
  9394                           ;task.c: 223: else
  9395                           ;task.c: 224: {
  9396                           ;task.c: 225: over_temper_time_count++;
  9397  29B2  0023               	movlb	3	; select bank3
  9398  29B3  300A               	movlw	10
  9399  29B4  0AC4               	incf	_over_temper_time_count^(0+384),f
  9400                           
  9401                           ;task.c: 227: temper_time_count=0x00;
  9402  29B5  01C6               	clrf	_temper_time_count^(0+384)
  9403                           
  9404                           ;task.c: 229: if(over_temper_time_count>=10)
  9405  29B6  0244               	subwf	_over_temper_time_count^(0+384),w
  9406  29B7  1C03               	skipc
  9407  29B8  29BC               	goto	l1296
  9408                           
  9409                           ;task.c: 230: {
  9410                           ;task.c: 231: over_temper_time_count=0x00;
  9411  29B9  01C4               	clrf	_over_temper_time_count^(0+384)
  9412                           
  9413                           ;task.c: 233: sys_temper_flag=0x00;
  9414  29BA  0022               	movlb	2	; select bank2
  9415  29BB  01EF               	clrf	_sys_temper_flag^(0+256)
  9416  29BC                     l1296:	
  9417                           
  9418                           ;task.c: 234: }
  9419                           ;task.c: 235: }
  9420                           ;task.c: 237: handle_an1_process_flag=0x00;
  9421  29BC  0022               	movlb	2	; select bank2
  9422  29BD  01AA               	clrf	_handle_an1_process_flag^(0+256)
  9423  29BE                     l17320:	
  9424                           
  9425                           ;task.c: 239: }
  9426                           ;task.c: 244: if(handle_an2_process_flag==0x01)
  9427  29BE  0B2B               	decfsz	_handle_an2_process_flag^(0+256),w
  9428  29BF  2B11               	goto	l17382
  9429                           
  9430                           ;task.c: 245: {
  9431                           ;task.c: 247: pv_voltage_value=start_ad_convert(0b00010);
  9432  29C0  3002               	movlw	2
  9433  29C1  31B5  25A5  31A9   	fcall	_start_ad_convert
  9434  29C4  0831               	movf	?_start_ad_convert+1,w
  9435  29C5  0021               	movlb	1	; select bank1
  9436  29C6  00D1               	movwf	(_pv_voltage_value+1)^(0+128)
  9437  29C7  0020               	movlb	0	; select bank0
  9438  29C8  0830               	movf	?_start_ad_convert,w
  9439  29C9  0021               	movlb	1	; select bank1
  9440  29CA  00D0               	movwf	_pv_voltage_value^(0+128)
  9441                           
  9442                           ;task.c: 258: if(pv_index==0x00)
  9443  29CB  0022               	movlb	2	; select bank2
  9444  29CC  08C1               	movf	_pv_index^(0+256),f
  9445  29CD  1D03               	skipz
  9446  29CE  2A56               	goto	l17350
  9447                           
  9448                           ;task.c: 259: {
  9449                           ;task.c: 260: if(pv_voltage_value<=light_on_pv_level)
  9450  29CF  0025               	movlb	5	; select bank5
  9451  29D0  31B4  243B  31A9   	fcall	PL76	;call to abstracted procedure
  9452  29D3  319B  231C  31A9   	fcall	___lwtofl
  9453  29D6  31B3  23BC  31A9   	fcall	PL20	;call to abstracted procedure
  9454  29D9  319D  25DA  31A9   	fcall	___flge
  9455  29DC  1C03               	btfss	3,0
  9456  29DD  2A08               	goto	l17338
  9457                           
  9458                           ;task.c: 261: {
  9459                           ;task.c: 262: night_time_count++;
  9460  29DE  0024               	movlb	4	; select bank4
  9461  29DF  0AB4               	incf	_night_time_count^(0+512),f
  9462  29E0  1903               	skipnz
  9463  29E1  0AB5               	incf	(_night_time_count+1)^(0+512),f
  9464  29E2  1903               	skipnz
  9465  29E3  0AB6               	incf	(_night_time_count+2)^(0+512),f
  9466  29E4  1903               	skipnz
  9467  29E5  0AB7               	incf	(_night_time_count+3)^(0+512),f
  9468                           
  9469                           ;task.c: 264: day_time_count=0x00;
  9470  29E6  0025               	movlb	5	; select bank5
  9471  29E7  01A4               	clrf	_day_time_count^(0+640)
  9472  29E8  01A5               	clrf	(_day_time_count+1)^(0+640)
  9473  29E9  01A6               	clrf	(_day_time_count+2)^(0+640)
  9474  29EA  01A7               	clrf	(_day_time_count+3)^(0+640)
  9475                           
  9476                           ;task.c: 266: if(night_time_count>light_time_level)
  9477  29EB  0024               	movlb	4	; select bank4
  9478  29EC  0837               	movf	(_night_time_count+3)^(0+512),w
  9479  29ED  0023               	movlb	3	; select bank3
  9480  29EE  0223               	subwf	(_light_time_level+3)^(0+384),w
  9481  29EF  1D03               	skipz
  9482  29F0  2A01               	goto	u9445
  9483  29F1  0024               	movlb	4	; select bank4
  9484  29F2  0836               	movf	(_night_time_count+2)^(0+512),w
  9485  29F3  0023               	movlb	3	; select bank3
  9486  29F4  0222               	subwf	(_light_time_level+2)^(0+384),w
  9487  29F5  1D03               	skipz
  9488  29F6  2A01               	goto	u9445
  9489  29F7  0024               	movlb	4	; select bank4
  9490  29F8  0835               	movf	(_night_time_count+1)^(0+512),w
  9491  29F9  0023               	movlb	3	; select bank3
  9492  29FA  0221               	subwf	(_light_time_level+1)^(0+384),w
  9493  29FB  1D03               	skipz
  9494  29FC  2A01               	goto	u9445
  9495  29FD  0024               	movlb	4	; select bank4
  9496  29FE  0834               	movf	_night_time_count^(0+512),w
  9497  29FF  0023               	movlb	3	; select bank3
  9498  2A00  0220               	subwf	_light_time_level^(0+384),w
  9499  2A01                     u9445:	
  9500  2A01  1803               	skipnc
  9501  2A02  2A56               	goto	l17350
  9502                           
  9503                           ;task.c: 267: {
  9504                           ;task.c: 268: night_time_count=0x00;
  9505  2A03  0024               	movlb	4	; select bank4
  9506                           
  9507                           ;task.c: 270: pv_voltage_status=0x02;
  9508  2A04  31B5  2576  31A9   	fcall	PL218	;call to abstracted procedure
  9509  2A07  2A56               	goto	l17350
  9510  2A08                     l17338:	
  9511                           
  9512                           ;task.c: 275: else if((pv_voltage_value>(light_off_pv_level)))
  9513  2A08  0025               	movlb	5	; select bank5
  9514  2A09  085F               	movf	(_light_off_pv_level+3)^(0+640),w
  9515  2A0A  0020               	movlb	0	; select bank0
  9516  2A0B  00DD               	movwf	___flge@ff1+3
  9517  2A0C  0025               	movlb	5	; select bank5
  9518  2A0D  085E               	movf	(_light_off_pv_level+2)^(0+640),w
  9519  2A0E  0020               	movlb	0	; select bank0
  9520  2A0F  00DC               	movwf	___flge@ff1+2
  9521  2A10  0025               	movlb	5	; select bank5
  9522  2A11  085D               	movf	(_light_off_pv_level+1)^(0+640),w
  9523  2A12  0020               	movlb	0	; select bank0
  9524  2A13  00DB               	movwf	___flge@ff1+1
  9525  2A14  0025               	movlb	5	; select bank5
  9526  2A15  085C               	movf	_light_off_pv_level^(0+640),w
  9527  2A16  0020               	movlb	0	; select bank0
  9528  2A17  00DA               	movwf	___flge@ff1
  9529  2A18  3187  2704  31A9   	fcall	PL84	;call to abstracted procedure
  9530  2A1B  319B  231C  31A9   	fcall	___lwtofl
  9531  2A1E  31B3  23BC  31A9   	fcall	PL20	;call to abstracted procedure
  9532  2A21  319D  25DA  31A9   	fcall	___flge
  9533  2A24  1803               	btfsc	3,0
  9534  2A25  2A53               	goto	l1303
  9535                           
  9536                           ;task.c: 276: {
  9537                           ;task.c: 277: day_time_count++;
  9538  2A26  0025               	movlb	5	; select bank5
  9539  2A27  0AA4               	incf	_day_time_count^(0+640),f
  9540  2A28  1903               	skipnz
  9541  2A29  0AA5               	incf	(_day_time_count+1)^(0+640),f
  9542  2A2A  1903               	skipnz
  9543  2A2B  0AA6               	incf	(_day_time_count+2)^(0+640),f
  9544  2A2C  1903               	skipnz
  9545  2A2D  0AA7               	incf	(_day_time_count+3)^(0+640),f
  9546                           
  9547                           ;task.c: 279: night_time_count=0x00;
  9548  2A2E  0024               	movlb	4	; select bank4
  9549  2A2F  01B4               	clrf	_night_time_count^(0+512)
  9550  2A30  01B5               	clrf	(_night_time_count+1)^(0+512)
  9551  2A31  01B6               	clrf	(_night_time_count+2)^(0+512)
  9552  2A32  01B7               	clrf	(_night_time_count+3)^(0+512)
  9553                           
  9554                           ;task.c: 281: if(day_time_count>light_time_level)
  9555  2A33  0025               	movlb	5	; select bank5
  9556  2A34  0827               	movf	(_day_time_count+3)^(0+640),w
  9557  2A35  0023               	movlb	3	; select bank3
  9558  2A36  0223               	subwf	(_light_time_level+3)^(0+384),w
  9559  2A37  1D03               	skipz
  9560  2A38  2A49               	goto	u9465
  9561  2A39  0025               	movlb	5	; select bank5
  9562  2A3A  0826               	movf	(_day_time_count+2)^(0+640),w
  9563  2A3B  0023               	movlb	3	; select bank3
  9564  2A3C  0222               	subwf	(_light_time_level+2)^(0+384),w
  9565  2A3D  1D03               	skipz
  9566  2A3E  2A49               	goto	u9465
  9567  2A3F  0025               	movlb	5	; select bank5
  9568  2A40  0825               	movf	(_day_time_count+1)^(0+640),w
  9569  2A41  0023               	movlb	3	; select bank3
  9570  2A42  0221               	subwf	(_light_time_level+1)^(0+384),w
  9571  2A43  1D03               	skipz
  9572  2A44  2A49               	goto	u9465
  9573  2A45  0025               	movlb	5	; select bank5
  9574  2A46  0824               	movf	_day_time_count^(0+640),w
  9575  2A47  0023               	movlb	3	; select bank3
  9576  2A48  0220               	subwf	_light_time_level^(0+384),w
  9577  2A49                     u9465:	
  9578  2A49  1803               	skipnc
  9579  2A4A  2A56               	goto	l17350
  9580                           
  9581                           ;task.c: 282: {
  9582                           ;task.c: 283: day_time_count=0x00;
  9583  2A4B  0025               	movlb	5	; select bank5
  9584  2A4C  01A4               	clrf	_day_time_count^(0+640)
  9585  2A4D  01A5               	clrf	(_day_time_count+1)^(0+640)
  9586  2A4E  01A6               	clrf	(_day_time_count+2)^(0+640)
  9587  2A4F  01A7               	clrf	(_day_time_count+3)^(0+640)
  9588                           
  9589                           ;task.c: 285: pv_voltage_status=0x00;
  9590  2A50  0022               	movlb	2	; select bank2
  9591  2A51  01C2               	clrf	_pv_voltage_status^(0+256)
  9592  2A52  2A56               	goto	l17350
  9593  2A53                     l1303:	
  9594                           
  9595                           ;task.c: 289: else
  9596                           ;task.c: 290: {
  9597                           ;task.c: 291: day_time_count=0x00;
  9598                           
  9599                           ;task.c: 293: night_time_count=0x00;
  9600  2A53  3186  26EA  31A9   	fcall	PL68	;call to abstracted procedure
  9601  2A56                     l17350:	
  9602                           
  9603                           ;task.c: 294: }
  9604                           ;task.c: 295: }
  9605                           ;task.c: 297: if((pv_voltage_value>=light_off_pv_level)&&(pv_voltage_value<1000))
  9606  2A56  3187  2704  31A9   	fcall	PL84	;call to abstracted procedure
  9607  2A59  319B  231C  31A9   	fcall	___lwtofl
  9608  2A5C  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
  9609  2A5F  0025               	movlb	5	; select bank5
  9610  2A60  085F               	movf	(_light_off_pv_level+3)^(0+640),w
  9611  2A61  0020               	movlb	0	; select bank0
  9612  2A62  00E1               	movwf	___flge@ff2+3
  9613  2A63  0025               	movlb	5	; select bank5
  9614  2A64  085E               	movf	(_light_off_pv_level+2)^(0+640),w
  9615  2A65  0020               	movlb	0	; select bank0
  9616  2A66  00E0               	movwf	___flge@ff2+2
  9617  2A67  0025               	movlb	5	; select bank5
  9618  2A68  085D               	movf	(_light_off_pv_level+1)^(0+640),w
  9619  2A69  0020               	movlb	0	; select bank0
  9620  2A6A  00DF               	movwf	___flge@ff2+1
  9621  2A6B  0025               	movlb	5	; select bank5
  9622  2A6C  085C               	movf	_light_off_pv_level^(0+640),w
  9623  2A6D  0020               	movlb	0	; select bank0
  9624  2A6E  00DE               	movwf	___flge@ff2
  9625  2A6F  319D  25DA  31A9   	fcall	___flge
  9626  2A72  3003               	movlw	3
  9627  2A73  1C03               	btfss	3,0
  9628  2A74  2AC2               	goto	L43
  9629  2A75  0021               	movlb	1	; select bank1
  9630  2A76  0251               	subwf	(_pv_voltage_value+1)^(0+128),w
  9631  2A77  30E8               	movlw	232
  9632  2A78  1903               	skipnz
  9633  2A79  0250               	subwf	_pv_voltage_value^(0+128),w
  9634  2A7A  1803               	skipnc
  9635  2A7B  2AC1               	goto	l17360
  9636                           
  9637                           ;task.c: 298: {
  9638                           ;task.c: 299: pv_time_count++;
  9639  2A7C  0025               	movlb	5	; select bank5
  9640  2A7D  0AA8               	incf	_pv_time_count^(0+640),f
  9641  2A7E  1903               	skipnz
  9642  2A7F  0AA9               	incf	(_pv_time_count+1)^(0+640),f
  9643  2A80  1903               	skipnz
  9644  2A81  0AAA               	incf	(_pv_time_count+2)^(0+640),f
  9645  2A82  1903               	skipnz
  9646  2A83  0AAB               	incf	(_pv_time_count+3)^(0+640),f
  9647                           
  9648                           ;task.c: 301: if(pv_time_count>(light_time_level/5))
  9649  2A84  3005               	movlw	5
  9650  2A85  0020               	movlb	0	; select bank0
  9651  2A86  00A3               	movwf	___lldiv@divisor
  9652  2A87  01A4               	clrf	___lldiv@divisor+1
  9653  2A88  01A5               	clrf	___lldiv@divisor+2
  9654  2A89  01A6               	clrf	___lldiv@divisor+3
  9655  2A8A  0023               	movlb	3	; select bank3
  9656  2A8B  0823               	movf	(_light_time_level+3)^(0+384),w
  9657  2A8C  0020               	movlb	0	; select bank0
  9658  2A8D  00AA               	movwf	___lldiv@dividend+3
  9659  2A8E  0023               	movlb	3	; select bank3
  9660  2A8F  0822               	movf	(_light_time_level+2)^(0+384),w
  9661  2A90  0020               	movlb	0	; select bank0
  9662  2A91  00A9               	movwf	___lldiv@dividend+2
  9663  2A92  0023               	movlb	3	; select bank3
  9664  2A93  0821               	movf	(_light_time_level+1)^(0+384),w
  9665  2A94  0020               	movlb	0	; select bank0
  9666  2A95  00A8               	movwf	___lldiv@dividend+1
  9667  2A96  0023               	movlb	3	; select bank3
  9668  2A97  0820               	movf	_light_time_level^(0+384),w
  9669  2A98  0020               	movlb	0	; select bank0
  9670  2A99  00A7               	movwf	___lldiv@dividend
  9671  2A9A  3188  202E  31A9   	fcall	___lldiv
  9672  2A9D  0025               	movlb	5	; select bank5
  9673  2A9E  082B               	movf	(_pv_time_count+3)^(0+640),w
  9674  2A9F  0020               	movlb	0	; select bank0
  9675  2AA0  0226               	subwf	?___lldiv+3,w
  9676  2AA1  1D03               	skipz
  9677  2AA2  2AB3               	goto	u9495
  9678  2AA3  0025               	movlb	5	; select bank5
  9679  2AA4  082A               	movf	(_pv_time_count+2)^(0+640),w
  9680  2AA5  0020               	movlb	0	; select bank0
  9681  2AA6  0225               	subwf	?___lldiv+2,w
  9682  2AA7  1D03               	skipz
  9683  2AA8  2AB3               	goto	u9495
  9684  2AA9  0025               	movlb	5	; select bank5
  9685  2AAA  0829               	movf	(_pv_time_count+1)^(0+640),w
  9686  2AAB  0020               	movlb	0	; select bank0
  9687  2AAC  0224               	subwf	?___lldiv+1,w
  9688  2AAD  1D03               	skipz
  9689  2AAE  2AB3               	goto	u9495
  9690  2AAF  0025               	movlb	5	; select bank5
  9691  2AB0  0828               	movf	_pv_time_count^(0+640),w
  9692  2AB1  0020               	movlb	0	; select bank0
  9693  2AB2  0223               	subwf	?___lldiv,w
  9694  2AB3                     u9495:	
  9695  2AB3  1803               	skipnc
  9696  2AB4  2AD3               	goto	l17366
  9697                           
  9698                           ;task.c: 302: {
  9699                           ;task.c: 303: pv_time_count=0x00;
  9700  2AB5  0025               	movlb	5	; select bank5
  9701                           
  9702                           ;task.c: 305: pv_voltage_status=0x01;
  9703  2AB6  31B5  2584  31A9   	fcall	PL238	;call to abstracted procedure
  9704  2AB9  0AC2               	incf	_pv_voltage_status^(0+256),f
  9705                           
  9706                           ;task.c: 307: day_time_count=0x00;
  9707                           
  9708                           ;task.c: 309: night_time_count=0x00;
  9709  2ABA  3186  26EA  31A9   	fcall	PL68	;call to abstracted procedure
  9710                           
  9711                           ;task.c: 311: pv_index=0x01;
  9712  2ABD  0022               	movlb	2	; select bank2
  9713  2ABE  01C1               	clrf	_pv_index^(0+256)
  9714  2ABF  0AC1               	incf	_pv_index^(0+256),f
  9715  2AC0  2AD3               	goto	l17366
  9716  2AC1                     l17360:	
  9717                           
  9718                           ;task.c: 316: else if(pv_voltage_value>=1000)
  9719  2AC1  3003               	movlw	3
  9720  2AC2                     L43:	
  9721  2AC2  0021               	movlb	1	; select bank1
  9722  2AC3  0251               	subwf	(_pv_voltage_value+1)^(0+128),w
  9723  2AC4  30E8               	movlw	232
  9724  2AC5  1903               	skipnz
  9725  2AC6  0250               	subwf	_pv_voltage_value^(0+128),w
  9726  2AC7  1C03               	skipc
  9727  2AC8  2ACE               	goto	l1309
  9728                           
  9729                           ;task.c: 317: {
  9730                           ;task.c: 318: pv_time_count=0x00;
  9731  2AC9  0025               	movlb	5	; select bank5
  9732                           
  9733                           ;task.c: 320: pv_voltage_status=0x00;
  9734  2ACA  31B5  2584  31A9   	fcall	PL238	;call to abstracted procedure
  9735                           
  9736                           ;task.c: 321: }
  9737  2ACD  2AD3               	goto	l17366
  9738  2ACE                     l1309:	
  9739                           
  9740                           ;task.c: 322: else
  9741                           ;task.c: 323: {
  9742                           ;task.c: 324: pv_time_count=0x00;
  9743  2ACE  0025               	movlb	5	; select bank5
  9744  2ACF  01A8               	clrf	_pv_time_count^(0+640)
  9745  2AD0  01A9               	clrf	(_pv_time_count+1)^(0+640)
  9746  2AD1  01AA               	clrf	(_pv_time_count+2)^(0+640)
  9747  2AD2  01AB               	clrf	(_pv_time_count+3)^(0+640)
  9748  2AD3                     l17366:	
  9749                           
  9750                           ;task.c: 326: }
  9751                           ;task.c: 328: if(pv_index==0x01)
  9752  2AD3  0022               	movlb	2	; select bank2
  9753  2AD4  0B41               	decfsz	_pv_index^(0+256),w
  9754  2AD5  2B0F               	goto	l17380
  9755                           
  9756                           ;task.c: 329: {
  9757                           ;task.c: 330: if(pv_voltage_value<=light_on_pv_level)
  9758  2AD6  0025               	movlb	5	; select bank5
  9759  2AD7  31B4  243B  31A9   	fcall	PL76	;call to abstracted procedure
  9760  2ADA  319B  231C  31A9   	fcall	___lwtofl
  9761  2ADD  31B3  23BC  31A9   	fcall	PL20	;call to abstracted procedure
  9762  2AE0  319D  25DA  31A9   	fcall	___flge
  9763  2AE3  1C03               	btfss	3,0
  9764  2AE4  2B0A               	goto	l1312
  9765                           
  9766                           ;task.c: 331: {
  9767                           ;task.c: 332: night_time_count++;
  9768  2AE5  0024               	movlb	4	; select bank4
  9769  2AE6  0AB4               	incf	_night_time_count^(0+512),f
  9770  2AE7  1903               	skipnz
  9771  2AE8  0AB5               	incf	(_night_time_count+1)^(0+512),f
  9772  2AE9  1903               	skipnz
  9773  2AEA  0AB6               	incf	(_night_time_count+2)^(0+512),f
  9774  2AEB  1903               	skipnz
  9775  2AEC  0AB7               	incf	(_night_time_count+3)^(0+512),f
  9776                           
  9777                           ;task.c: 334: if(night_time_count>light_time_level)
  9778  2AED  0837               	movf	(_night_time_count+3)^(0+512),w
  9779  2AEE  0023               	movlb	3	; select bank3
  9780  2AEF  0223               	subwf	(_light_time_level+3)^(0+384),w
  9781  2AF0  1D03               	skipz
  9782  2AF1  2B02               	goto	u9535
  9783  2AF2  0024               	movlb	4	; select bank4
  9784  2AF3  0836               	movf	(_night_time_count+2)^(0+512),w
  9785  2AF4  0023               	movlb	3	; select bank3
  9786  2AF5  0222               	subwf	(_light_time_level+2)^(0+384),w
  9787  2AF6  1D03               	skipz
  9788  2AF7  2B02               	goto	u9535
  9789  2AF8  0024               	movlb	4	; select bank4
  9790  2AF9  0835               	movf	(_night_time_count+1)^(0+512),w
  9791  2AFA  0023               	movlb	3	; select bank3
  9792  2AFB  0221               	subwf	(_light_time_level+1)^(0+384),w
  9793  2AFC  1D03               	skipz
  9794  2AFD  2B02               	goto	u9535
  9795  2AFE  0024               	movlb	4	; select bank4
  9796  2AFF  0834               	movf	_night_time_count^(0+512),w
  9797  2B00  0023               	movlb	3	; select bank3
  9798  2B01  0220               	subwf	_light_time_level^(0+384),w
  9799  2B02                     u9535:	
  9800  2B02  1803               	skipnc
  9801  2B03  2B0F               	goto	l17380
  9802                           
  9803                           ;task.c: 335: {
  9804                           ;task.c: 336: night_time_count=0x00;
  9805  2B04  0024               	movlb	4	; select bank4
  9806                           
  9807                           ;task.c: 338: pv_voltage_status=0x02;
  9808  2B05  31B5  2576  31A9   	fcall	PL218	;call to abstracted procedure
  9809                           
  9810                           ;task.c: 340: pv_index=0x00;
  9811  2B08  01C1               	clrf	_pv_index^(0+256)
  9812  2B09  2B0F               	goto	l17380
  9813  2B0A                     l1312:	
  9814                           
  9815                           ;task.c: 344: else
  9816                           ;task.c: 345: {
  9817                           ;task.c: 346: night_time_count=0x00;
  9818  2B0A  0024               	movlb	4	; select bank4
  9819  2B0B  01B4               	clrf	_night_time_count^(0+512)
  9820  2B0C  01B5               	clrf	(_night_time_count+1)^(0+512)
  9821  2B0D  01B6               	clrf	(_night_time_count+2)^(0+512)
  9822  2B0E  01B7               	clrf	(_night_time_count+3)^(0+512)
  9823  2B0F                     l17380:	
  9824                           
  9825                           ;task.c: 347: }
  9826                           ;task.c: 349: }
  9827                           ;task.c: 351: handle_an2_process_flag=0x00;
  9828  2B0F  0022               	movlb	2	; select bank2
  9829  2B10  01AB               	clrf	_handle_an2_process_flag^(0+256)
  9830  2B11                     l17382:	
  9831                           
  9832                           ;task.c: 353: }
  9833                           ;task.c: 356: if(handle_an9_process_flag==0x01)
  9834  2B11  0B2E               	decfsz	_handle_an9_process_flag^(0+256),w
  9835  2B12  2B4C               	goto	l17402
  9836                           
  9837                           ;task.c: 357: {
  9838                           ;task.c: 358: charge_current_value=0x00;
  9839  2B13  0021               	movlb	1	; select bank1
  9840  2B14  01C8               	clrf	_charge_current_value^(0+128)
  9841  2B15  01C9               	clrf	(_charge_current_value+1)^(0+128)
  9842                           
  9843                           ;task.c: 360: if(system_status == 0x01)
  9844  2B16  0B58               	decfsz	_system_status^(0+128),w
  9845  2B17  2B4A               	goto	l17400
  9846                           
  9847                           ;task.c: 361: {
  9848                           ;task.c: 362: charge_current_value=start_ad_convert(0b01001);
  9849  2B18  3009               	movlw	9
  9850  2B19  31B5  25A5  31A9   	fcall	_start_ad_convert
  9851  2B1C  0831               	movf	?_start_ad_convert+1,w
  9852  2B1D  0021               	movlb	1	; select bank1
  9853  2B1E  00C9               	movwf	(_charge_current_value+1)^(0+128)
  9854  2B1F  0020               	movlb	0	; select bank0
  9855  2B20  0830               	movf	?_start_ad_convert,w
  9856  2B21  0021               	movlb	1	; select bank1
  9857  2B22  00C8               	movwf	_charge_current_value^(0+128)
  9858                           
  9859                           ;task.c: 372: if((charge_current_value>=charge_i_limit)&&(charge_index>=0x03))
  9860  2B23  0849               	movf	(_charge_current_value+1)^(0+128),w
  9861  2B24  3187  27DB  31A9   	fcall	PL194	;call to abstracted procedure
  9862  2B27  319B  231C  31A9   	fcall	___lwtofl
  9863  2B2A  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
  9864  2B2D  31B4  24CE  31A9   	fcall	PL118	;call to abstracted procedure
  9865  2B30  319D  25DA  31A9   	fcall	___flge
  9866  2B33  1C03               	btfss	3,0
  9867  2B34  2B4A               	goto	l17400
  9868  2B35  3003               	movlw	3
  9869  2B36  0021               	movlb	1	; select bank1
  9870  2B37  0253               	subwf	_charge_index^(0+128),w
  9871  2B38  1C03               	skipc
  9872  2B39  2B4A               	goto	l17400
  9873                           
  9874                           ;task.c: 373: {
  9875                           ;task.c: 375: if(buck_pwm_value>50)
  9876  2B3A  3000               	movlw	0
  9877  2B3B  0247               	subwf	(_buck_pwm_value+1)^(0+128),w
  9878  2B3C  3033               	movlw	51
  9879  2B3D  1903               	skipnz
  9880  2B3E  0246               	subwf	_buck_pwm_value^(0+128),w
  9881  2B3F  1C03               	skipc
  9882  2B40  2B44               	goto	l17398
  9883                           
  9884                           ;task.c: 376: {
  9885                           ;task.c: 377: buck_pwm_value = buck_pwm_value - 1;
  9886  2B41  30FF               	movlw	255
  9887  2B42  07C6               	addwf	_buck_pwm_value^(0+128),f
  9888  2B43  3DC7               	addwfc	(_buck_pwm_value+1)^(0+128),f
  9889  2B44                     l17398:	
  9890                           
  9891                           ;task.c: 378: }
  9892                           ;task.c: 379: Set_Buck_Pwm_Duty(buck_pwm_value);
  9893  2B44  319F  276D  31A9   	fcall	PL148	;call to abstracted procedure
  9894  2B47  318D  25A7  31A9   	fcall	_Set_Buck_Pwm_Duty
  9895  2B4A                     l17400:	
  9896                           
  9897                           ;task.c: 381: }
  9898                           ;task.c: 383: }
  9899                           ;task.c: 385: handle_an9_process_flag=0x00;
  9900  2B4A  0022               	movlb	2	; select bank2
  9901  2B4B  01AE               	clrf	_handle_an9_process_flag^(0+256)
  9902  2B4C                     l17402:	
  9903                           
  9904                           ;task.c: 387: }
  9905                           ;task.c: 392: if(handle_an3_process_flag==0x01)
  9906  2B4C  3191  0B2C         	decfsz	_handle_an3_process_flag^(0+256),w
  9907  2B4E  2978               	goto	l17484
  9908                           
  9909                           ;task.c: 393: {
  9910                           ;task.c: 395: battery_voltage_value=start_ad_convert(0b01100);
  9911  2B4F  300C               	movlw	12
  9912  2B50  31B5  25A5  31A9   	fcall	_start_ad_convert
  9913  2B53  0831               	movf	?_start_ad_convert+1,w
  9914  2B54  00E9               	movwf	_battery_voltage_value+1
  9915  2B55  0830               	movf	?_start_ad_convert,w
  9916  2B56  00E8               	movwf	_battery_voltage_value
  9917                           
  9918                           ;task.c: 398: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
  9919  2B57  3041               	movlw	65
  9920  2B58  00B7               	movwf	___flmul@f1+3
  9921  2B59  30F8               	movlw	248
  9922  2B5A  00B6               	movwf	___flmul@f1+2
  9923  2B5B  3051               	movlw	81
  9924  2B5C  00B5               	movwf	___flmul@f1+1
  9925  2B5D  30EC               	movlw	236
  9926  2B5E  00B4               	movwf	___flmul@f1
  9927  2B5F  3041               	movlw	65
  9928  2B60  00CA               	movwf	___fldiv@f2+3
  9929  2B61  3020               	movlw	32
  9930  2B62  00C9               	movwf	___fldiv@f2+2
  9931  2B63  01C8               	clrf	___fldiv@f2+1
  9932  2B64  01C7               	clrf	___fldiv@f2
  9933  2B65  0869               	movf	_battery_voltage_value+1,w
  9934  2B66  00B1               	movwf	___lwtofl@c+1
  9935  2B67  0868               	movf	_battery_voltage_value,w
  9936  2B68  00B0               	movwf	___lwtofl@c
  9937  2B69  319B  231C  31A9   	fcall	___lwtofl
  9938  2B6C  3186  26E1  31A9   	fcall	PL56	;call to abstracted procedure
  9939  2B6F  31A2  2291  31A9   	fcall	___fldiv
  9940  2B72  3186  26D8  31A9   	fcall	PL36	;call to abstracted procedure
  9941  2B75  31A2  22FC  31A9   	fcall	___flmul
  9942  2B78  0837               	movf	?___flmul+3,w
  9943  2B79  0022               	movlb	2	; select bank2
  9944  2B7A  00A3               	movwf	(_b_v+3)^(0+256)
  9945  2B7B  0020               	movlb	0	; select bank0
  9946  2B7C  0836               	movf	?___flmul+2,w
  9947  2B7D  0022               	movlb	2	; select bank2
  9948  2B7E  00A2               	movwf	(_b_v+2)^(0+256)
  9949  2B7F  0020               	movlb	0	; select bank0
  9950  2B80  0835               	movf	?___flmul+1,w
  9951  2B81  0022               	movlb	2	; select bank2
  9952  2B82  00A1               	movwf	(_b_v+1)^(0+256)
  9953  2B83  0020               	movlb	0	; select bank0
  9954  2B84  0834               	movf	?___flmul,w
  9955  2B85  0022               	movlb	2	; select bank2
  9956  2B86  00A0               	movwf	_b_v^(0+256)
  9957                           
  9958                           ;task.c: 402: if(((battery_voltage_value<(dianchi_guoya_baohu+volt_id*5))||(sys_power_ch
      +                          ==0x01))&&(charge_index==0x00))
  9959  2B87  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
  9960  2B8A  319B  231C  31A9   	fcall	___lwtofl
  9961  2B8D  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
  9962  2B90  31B5  2566  31A9   	fcall	PL214	;call to abstracted procedure
  9963  2B93  3191  2108  31A9   	fcall	___wmul
  9964  2B96  31B5  2596  31A9   	fcall	PL262	;call to abstracted procedure
  9965  2B99  31A6  2667  31A9   	fcall	___awtofl
  9966  2B9C  31B4  240A  31A9   	fcall	PL72	;call to abstracted procedure
  9967  2B9F  319E  261A  31A9   	fcall	___fladd
  9968  2BA2  31B5  254B  31A9   	fcall	PL208	;call to abstracted procedure
  9969  2BA5  319D  25DA  31A9   	fcall	___flge
  9970  2BA8  1C03               	btfss	3,0
  9971  2BA9  2BAD               	goto	l17412
  9972  2BAA  0022               	movlb	2	; select bank2
  9973  2BAB  0B47               	decfsz	_sys_power_ch^(0+256),w
  9974  2BAC  2BBF               	goto	l17424
  9975  2BAD                     l17412:	
  9976  2BAD  0021               	movlb	1	; select bank1
  9977  2BAE  08D3               	movf	_charge_index^(0+128),f
  9978  2BAF  1D03               	skipz
  9979  2BB0  2BBF               	goto	l17424
  9980                           
  9981                           ;task.c: 403: {
  9982                           ;task.c: 404: bt_time_count++;
  9983  2BB1  0023               	movlb	3	; select bank3
  9984  2BB2  3064               	movlw	100
  9985  2BB3  0AC0               	incf	_bt_time_count^(0+384),f
  9986                           
  9987                           ;task.c: 406: if(bt_time_count>=100)
  9988  2BB4  0240               	subwf	_bt_time_count^(0+384),w
  9989  2BB5  1C03               	skipc
  9990  2BB6  2BEF               	goto	l17432
  9991                           
  9992                           ;task.c: 410: bt_led_status=0x01;
  9993  2BB7  01C0               	clrf	_bt_time_count^(0+384)
  9994                           
  9995                           ;task.c: 412: charge_index=0x01;
  9996  2BB8  0021               	movlb	1	; select bank1
  9997  2BB9  01D3               	clrf	_charge_index^(0+128)
  9998  2BBA  0AD3               	incf	_charge_index^(0+128),f
  9999                           
 10000                           ;task.c: 414: battery_voltage_status=0x01;
 10001  2BBB  0022               	movlb	2	; select bank2
 10002  2BBC  01A7               	clrf	_battery_voltage_status^(0+256)
 10003  2BBD  0AA7               	incf	_battery_voltage_status^(0+256),f
 10004  2BBE  2BEF               	goto	l17432
 10005  2BBF                     l17424:	
 10006                           
 10007                           ;task.c: 418: else if((battery_voltage_value>=(dianchi_guoya_baohu+volt_id*5))&&(charge_
      +                          index<=0x01)&&(sys_power_ch==0x00))
 10008  2BBF  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
 10009  2BC2  319B  231C  31A9   	fcall	___lwtofl
 10010  2BC5  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10011  2BC8  31B5  2566  31A9   	fcall	PL214	;call to abstracted procedure
 10012  2BCB  3191  2108  31A9   	fcall	___wmul
 10013  2BCE  31B5  2596  31A9   	fcall	PL262	;call to abstracted procedure
 10014  2BD1  31A6  2667  31A9   	fcall	___awtofl
 10015  2BD4  31B4  240A  31A9   	fcall	PL72	;call to abstracted procedure
 10016  2BD7  319E  261A  31A9   	fcall	___fladd
 10017  2BDA  31B5  254B  31A9   	fcall	PL208	;call to abstracted procedure
 10018  2BDD  319D  25DA  31A9   	fcall	___flge
 10019  2BE0  1C03               	btfss	3,0
 10020  2BE1  2BEF               	goto	l17432
 10021  2BE2  3002               	movlw	2
 10022  2BE3  0021               	movlb	1	; select bank1
 10023  2BE4  0253               	subwf	_charge_index^(0+128),w
 10024  2BE5  1803               	skipnc
 10025  2BE6  2BEF               	goto	l17432
 10026                           
 10027                           ;task.c: 419: {
 10028                           ;task.c: 420: bt_led_status=0x00;
 10029  2BE7  0022               	movlb	2	; select bank2
 10030  2BE8  08C7               	movf	_sys_power_ch^(0+256),f
 10031  2BE9  1D03               	skipz
 10032  2BEA  2BEF               	goto	l17432
 10033                           
 10034                           ;task.c: 422: bt_time_count=0x00;
 10035  2BEB  0023               	movlb	3	; select bank3
 10036  2BEC  01C0               	clrf	_bt_time_count^(0+384)
 10037                           
 10038                           ;task.c: 424: battery_voltage_status=0x00;
 10039  2BED  0022               	movlb	2	; select bank2
 10040  2BEE  01A7               	clrf	_battery_voltage_status^(0+256)
 10041  2BEF                     l17432:	
 10042                           
 10043                           ;task.c: 425: }
 10044                           ;task.c: 428: if( (battery_voltage_value<dianchi_guoya_huifu) && (charge_index==0x02) )
 10045  2BEF  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
 10046  2BF2  319B  231C  31A9   	fcall	___lwtofl
 10047  2BF5  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10048  2BF8  319F  2737  31A9   	fcall	PL62	;call to abstracted procedure
 10049  2BFB  319D  25DA  31A9   	fcall	___flge
 10050  2BFE  1803               	btfsc	3,0
 10051  2BFF  2C0C               	goto	l17440
 10052  2C00  0021               	movlb	1	; select bank1
 10053  2C01  0853               	movf	_charge_index^(0+128),w
 10054  2C02  3A02               	xorlw	2
 10055  2C03  1D03               	skipz
 10056  2C04  2C0C               	goto	l17440
 10057                           
 10058                           ;task.c: 433: charge_led_status=0x01;
 10059  2C05  3003               	movlw	3
 10060  2C06  00D3               	movwf	_charge_index^(0+128)
 10061                           
 10062                           ;task.c: 435: Enable_Buck_Pwm();
 10063  2C07  3190  20C9  31A9   	fcall	_Enable_Buck_Pwm
 10064  2C0A                     L71:	
 10065                           
 10066                           ;task.c: 437: }
 10067  2C0A  3191  2976         	goto	l17482
 10068  2C0C                     l17440:	
 10069                           
 10070                           ;task.c: 438: else if( (battery_voltage_value>=dianchi_guoya_huifu) && (charge_index==0x
      +                          02) )
 10071  2C0C  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
 10072  2C0F  319B  231C  31A9   	fcall	___lwtofl
 10073  2C12  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10074  2C15  319F  2737  31A9   	fcall	PL62	;call to abstracted procedure
 10075  2C18  319D  25DA  31A9   	fcall	___flge
 10076  2C1B  1C03               	btfss	3,0
 10077  2C1C  2C33               	goto	l17446
 10078  2C1D  0021               	movlb	1	; select bank1
 10079  2C1E  0853               	movf	_charge_index^(0+128),w
 10080  2C1F  3A02               	xorlw	2
 10081  2C20  1D03               	skipz
 10082  2C21  2C33               	goto	l17446
 10083                           
 10084                           ;task.c: 442: charge_led_status=0x00;
 10085  2C22  0022               	movlb	2	; select bank2
 10086  2C23  0823               	movf	(_b_v+3)^(0+256),w
 10087  2C24  0024               	movlb	4	; select bank4
 10088  2C25  00A7               	movwf	(_bt_00_lv+3)^(0+512)
 10089  2C26  0022               	movlb	2	; select bank2
 10090  2C27  0822               	movf	(_b_v+2)^(0+256),w
 10091  2C28  0024               	movlb	4	; select bank4
 10092  2C29  00A6               	movwf	(_bt_00_lv+2)^(0+512)
 10093  2C2A  0022               	movlb	2	; select bank2
 10094  2C2B  0821               	movf	(_b_v+1)^(0+256),w
 10095  2C2C  0024               	movlb	4	; select bank4
 10096  2C2D  00A5               	movwf	(_bt_00_lv+1)^(0+512)
 10097  2C2E  0022               	movlb	2	; select bank2
 10098  2C2F  0820               	movf	_b_v^(0+256),w
 10099  2C30  0024               	movlb	4	; select bank4
 10100  2C31  00A4               	movwf	_bt_00_lv^(0+512)
 10101                           
 10102                           ;task.c: 443: }
 10103  2C32  2C0A               	goto	L71
 10104  2C33                     l17446:	
 10105                           
 10106                           ;task.c: 444: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index>=0x0
      +                          3) )
 10107  2C33  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
 10108  2C36  319B  231C  31A9   	fcall	___lwtofl
 10109  2C39  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10110  2C3C  319F  2704  31A9   	fcall	PL44	;call to abstracted procedure
 10111  2C3F  319D  25DA  31A9   	fcall	___flge
 10112  2C42  1803               	btfsc	3,0
 10113  2C43  2C7C               	goto	l17466
 10114  2C44  3003               	movlw	3
 10115  2C45  0021               	movlb	1	; select bank1
 10116  2C46  0253               	subwf	_charge_index^(0+128),w
 10117  2C47  1C03               	skipc
 10118  2C48  2C7C               	goto	l17466
 10119                           
 10120                           ;task.c: 445: {
 10121                           ;task.c: 447: if((charge_current_value<charge_i_limit)&&(charge_index>=0x03))
 10122  2C49  0849               	movf	(_charge_current_value+1)^(0+128),w
 10123  2C4A  3187  27DB  31A9   	fcall	PL194	;call to abstracted procedure
 10124  2C4D  319B  231C  31A9   	fcall	___lwtofl
 10125  2C50  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10126  2C53  31B4  24CE  31A9   	fcall	PL118	;call to abstracted procedure
 10127  2C56  319D  25DA  31A9   	fcall	___flge
 10128  2C59  1803               	btfsc	3,0
 10129  2C5A  2C78               	goto	l17464
 10130  2C5B  3003               	movlw	3
 10131  2C5C  0021               	movlb	1	; select bank1
 10132  2C5D  0253               	subwf	_charge_index^(0+128),w
 10133  2C5E  1C03               	skipc
 10134  2C5F  2C78               	goto	l17464
 10135                           
 10136                           ;task.c: 448: {
 10137                           ;task.c: 449: mppt_time_count++;
 10138  2C60  0024               	movlb	4	; select bank4
 10139  2C61  0AD0               	incf	_mppt_time_count^(0+512),f
 10140  2C62  1903               	skipnz
 10141  2C63  0AD1               	incf	(_mppt_time_count+1)^(0+512),f
 10142                           
 10143                           ;task.c: 451: if(mppt_time_count>5)
 10144  2C64  3000               	movlw	0
 10145  2C65  0251               	subwf	(_mppt_time_count+1)^(0+512),w
 10146  2C66  3006               	movlw	6
 10147  2C67  1903               	skipnz
 10148  2C68  0250               	subwf	_mppt_time_count^(0+512),w
 10149  2C69  1C03               	skipc
 10150  2C6A  2C78               	goto	l17464
 10151                           
 10152                           ;task.c: 452: {
 10153                           ;task.c: 453: mppt_time_count=0x00;
 10154  2C6B  01D0               	clrf	_mppt_time_count^(0+512)
 10155  2C6C  01D1               	clrf	(_mppt_time_count+1)^(0+512)
 10156                           
 10157                           ;task.c: 455: Mppt_Charge();
 10158  2C6D  3199  21A2  31A9   	fcall	_Mppt_Charge
 10159                           
 10160                           ;task.c: 457: I_prev=charge_current_value;
 10161  2C70  0021               	movlb	1	; select bank1
 10162  2C71  0849               	movf	(_charge_current_value+1)^(0+128),w
 10163  2C72  0023               	movlb	3	; select bank3
 10164  2C73  00A5               	movwf	(_I_prev+1)^(0+384)
 10165  2C74  0021               	movlb	1	; select bank1
 10166  2C75  0848               	movf	_charge_current_value^(0+128),w
 10167  2C76  0023               	movlb	3	; select bank3
 10168  2C77  00A4               	movwf	_I_prev^(0+384)
 10169  2C78                     l17464:	
 10170                           
 10171                           ;task.c: 458: }
 10172                           ;task.c: 460: }
 10173                           ;task.c: 462: involid_time_count=0x00;
 10174  2C78  0024               	movlb	4	; select bank4
 10175  2C79  01CC               	clrf	_involid_time_count^(0+512)
 10176  2C7A  01CD               	clrf	(_involid_time_count+1)^(0+512)
 10177                           
 10178                           ;task.c: 464: }
 10179  2C7B  2C0A               	goto	L71
 10180  2C7C                     l17466:	
 10181                           
 10182                           ;task.c: 465: else if( (battery_voltage_value>=dianchi_guoya_baohu) && (charge_index>=0x
      +                          03) )
 10183  2C7C  31B4  2480  31A9   	fcall	PL92	;call to abstracted procedure
 10184  2C7F  319B  231C  31A9   	fcall	___lwtofl
 10185  2C82  31B3  23B3  31A9   	fcall	PL18	;call to abstracted procedure
 10186  2C85  319F  2704  31A9   	fcall	PL44	;call to abstracted procedure
 10187  2C88  319D  25DA  31A9   	fcall	___flge
 10188  2C8B  1C03               	btfss	3,0
 10189  2C8C  2C0A               	goto	L71
 10190  2C8D  3003               	movlw	3
 10191  2C8E  0021               	movlb	1	; select bank1
 10192  2C8F  0253               	subwf	_charge_index^(0+128),w
 10193  2C90  1C03               	skipc
 10194  2C91  2C0A               	goto	L71
 10195                           
 10196                           ;task.c: 466: {
 10197                           ;task.c: 467: involid_time_count++;
 10198  2C92  0024               	movlb	4	; select bank4
 10199  2C93  0ACC               	incf	_involid_time_count^(0+512),f
 10200  2C94  1903               	skipnz
 10201  2C95  0ACD               	incf	(_involid_time_count+1)^(0+512),f
 10202                           
 10203                           ;task.c: 469: if(involid_time_count>200)
 10204  2C96  3000               	movlw	0
 10205  2C97  024D               	subwf	(_involid_time_count+1)^(0+512),w
 10206  2C98  30C9               	movlw	201
 10207  2C99  1903               	skipnz
 10208  2C9A  024C               	subwf	_involid_time_count^(0+512),w
 10209  2C9B  1C03               	skipc
 10210  2C9C  2C0A               	goto	L71
 10211  2C9D  3003               	movlw	3
 10212                           
 10213                           ;task.c: 470: {
 10214                           ;task.c: 471: involid_time_count=0x00;
 10215  2C9E  01CC               	clrf	_involid_time_count^(0+512)
 10216  2C9F  01CD               	clrf	(_involid_time_count+1)^(0+512)
 10217                           
 10218                           ;task.c: 473: if(charge_index>=0x03)
 10219  2CA0  0021               	movlb	1	; select bank1
 10220  2CA1  0253               	subwf	_charge_index^(0+128),w
 10221  2CA2  1C03               	skipc
 10222  2CA3  2C0A               	goto	L71
 10223                           
 10224                           ;task.c: 474: {
 10225                           ;task.c: 475: charge_index=0x05;
 10226  2CA4  3005               	movlw	5
 10227  2CA5  00D3               	movwf	_charge_index^(0+128)
 10228                           
 10229                           ;task.c: 477: Disable_Buck_Pwm();
 10230  2CA6  318D  25A1  31A9   	fcall	_Disable_Buck_Pwm
 10231                           
 10232                           ;task.c: 481: charge_led_status=0x00;
 10233  2CA9  0020               	movlb	0	; select bank0
 10234  2CAA  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 10235  2CAB  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 10236  2CAC  318D  25A7  31A9   	fcall	_Set_Buck_Pwm_Duty
 10237  2CAF                     l1337:	
 10238                           ;task.c: 483: while(1);
 10239                           
 10240  2CAF  2CAF               	goto	l1337
 10241                           
 10242                           	psect	text12
 10243  35A5                     __ptext12:	
 10244 ;; *************** function _start_ad_convert *****************
 10245 ;; Defined at:
 10246 ;;		line 1043 in file "D:\MCUProject\ZH-SL-H40\src\task.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  ch              1    wreg     unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  ch              1    0[BANK1 ] unsigned char 
 10251 ;;  temp            2    5[BANK1 ] unsigned int 
 10252 ;;  ad_l            2    3[BANK1 ] unsigned int 
 10253 ;;  ad_h            2    1[BANK1 ] unsigned int 
 10254 ;;  i               1    9[BANK1 ] unsigned char 
 10255 ;;  j               1    8[BANK1 ] unsigned char 
 10256 ;;  ad_ch           1    7[BANK1 ] unsigned char 
 10257 ;;  k               1    0        unsigned char 
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  2   16[BANK0 ] unsigned int 
 10260 ;; Registers used:
 10261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10262 ;; Tracked objects:
 10263 ;;		On entry : 1C/1
 10264 ;;		On exit  : 1F/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Temps:          0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Totals:         0      52      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;Total ram usage:       62 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:    3
 10274 ;; This function calls:
 10275 ;;		___lwdiv
 10276 ;; This function is called by:
 10277 ;;		_auto_system
 10278 ;;		_handle_ad_loop
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           
 10283                           ;psect for function _start_ad_convert
 10284  35A5                     _start_ad_convert:	
 10285                           
 10286                           ;incstack = 0
 10287                           ; Regs used in _start_ad_convert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10288                           ;start_ad_convert@ch stored from wreg
 10289  35A5  0021               	movlb	1	; select bank1
 10290  35A6  00A0               	movwf	start_ad_convert@ch^(0+128)
 10291                           
 10292                           ;task.c: 1057: ad_ch=ch;
 10293  35A7  00A7               	movwf	start_ad_convert@ad_ch^(0+128)
 10294                           
 10295                           ;task.c: 1059: ADCON0bits.CHS =ch;
 10296  35A8  0820               	movf	start_ad_convert@ch^(0+128),w
 10297  35A9  0020               	movlb	0	; select bank0
 10298  35AA  00B2               	movwf	??_start_ad_convert
 10299  35AB  0DB2               	rlf	??_start_ad_convert,f
 10300  35AC  0DB2               	rlf	??_start_ad_convert,f
 10301  35AD  0021               	movlb	1	; select bank1
 10302  35AE  081D               	movf	29,w	;volatile
 10303  35AF  0020               	movlb	0	; select bank0
 10304  35B0  0632               	xorwf	??_start_ad_convert,w
 10305  35B1  3983               	andlw	-125
 10306  35B2  0632               	xorwf	??_start_ad_convert,w
 10307  35B3  0021               	movlb	1	; select bank1
 10308  35B4  009D               	movwf	29	;volatile
 10309                           
 10310                           ;task.c: 1061: ADCON0bits.ADON =1;
 10311  35B5  141D               	bsf	29,0	;volatile
 10312                           
 10313                           ;task.c: 1063: if((ad_ch==0b01010)||(ad_ch==0b01001))
 10314  35B6  0827               	movf	start_ad_convert@ad_ch^(0+128),w
 10315  35B7  3A0A               	xorlw	10
 10316  35B8  1903               	skipnz
 10317  35B9  2DBE               	goto	l16550
 10318  35BA  0827               	movf	start_ad_convert@ad_ch^(0+128),w
 10319  35BB  3A09               	xorlw	9
 10320  35BC  1D03               	skipz
 10321  35BD  2EDB               	goto	l16598
 10322  35BE                     l16550:	
 10323                           
 10324                           ;task.c: 1064: {
 10325                           ;task.c: 1065: for(i=0;i<51;i++)
 10326  35BE  01A9               	clrf	start_ad_convert@i^(0+128)
 10327  35BF                     l16556:	
 10328                           
 10329                           ;task.c: 1066: {
 10330                           ;task.c: 1067: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10331  35BF  300D               	movlw	13
 10332  35C0  0020               	movlb	0	; select bank0
 10333  35C1  00B2               	movwf	??_start_ad_convert
 10334  35C2                     u12297:	
 10335  35C2  0BB2               	decfsz	??_start_ad_convert,f
 10336  35C3  2DC2               	goto	u12297
 10337                           
 10338                           ;task.c: 1069: ADCON0bits.GO=1;
 10339  35C4  0021               	movlb	1	; select bank1
 10340  35C5  149D               	bsf	29,1	;volatile
 10341  35C6                     l1478:	
 10342                           ;task.c: 1071: while(ADCON0bits.nDONE);
 10343                           
 10344  35C6  189D               	btfsc	29,1	;volatile
 10345  35C7  2DC6               	goto	l1478
 10346                           
 10347                           ;task.c: 1073: ad_h=0b00000011&ADRESH;
 10348  35C8  081C               	movf	28,w	;volatile
 10349                           
 10350                           ;task.c: 1075: ad_l=ADRESL;
 10351                           
 10352                           ;task.c: 1077: adc_buffer[i]=(ad_h<<8)|ad_l;
 10353  35C9  27C8  31B5         	fcall	PL42	;call to abstracted procedure
 10354  35CB  3033               	movlw	51
 10355  35CC  0AA9               	incf	start_ad_convert@i^(0+128),f
 10356  35CD  0229               	subwf	start_ad_convert@i^(0+128),w
 10357  35CE  1C03               	skipc
 10358  35CF  2DBF               	goto	l16556
 10359                           
 10360                           ;task.c: 1078: }
 10361                           ;task.c: 1079: for(j=0;j<50;j++)
 10362  35D0  01A8               	clrf	start_ad_convert@j^(0+128)
 10363  35D1                     l16576:	
 10364                           
 10365                           ;task.c: 1080: {
 10366                           ;task.c: 1081: for(i=0;i<50-j;i++)
 10367  35D1  01A9               	clrf	start_ad_convert@i^(0+128)
 10368  35D2                     l16588:	
 10369  35D2  0020               	movlb	0	; select bank0
 10370  35D3  01B3               	clrf	??_start_ad_convert+1
 10371  35D4  0021               	movlb	1	; select bank1
 10372  35D5  0828               	movf	start_ad_convert@j^(0+128),w
 10373  35D6  3C32               	sublw	50
 10374  35D7  27F3  31B5         	fcall	PL170	;call to abstracted procedure
 10375  35D9  1803               	btfsc	3,0
 10376  35DA  2DE3               	goto	l16590
 10377                           
 10378                           ;task.c: 1082: {
 10379                           ;task.c: 1083: if(adc_buffer[i]>adc_buffer[i+1])
 10380  35DB  0021               	movlb	1	; select bank1
 10381  35DC  27C4  31B5         	fcall	PL38	;call to abstracted procedure
 10382  35DE  27BA  31B5         	fcall	PL28	;call to abstracted procedure
 10383                           
 10384                           ;task.c: 1084: {
 10385                           ;task.c: 1085: temp=adc_buffer[i];
 10386                           
 10387                           ;task.c: 1087: adc_buffer[i]=adc_buffer[i+1];
 10388                           
 10389                           ;task.c: 1089: adc_buffer[i+1]=temp;
 10390  35E0  2742  31B5         	fcall	PL10	;call to abstracted procedure
 10391  35E2  2DD2               	goto	l16588
 10392  35E3                     l16590:	
 10393  35E3  0021               	movlb	1	; select bank1
 10394  35E4  3032               	movlw	50
 10395  35E5  0AA8               	incf	start_ad_convert@j^(0+128),f
 10396  35E6  0228               	subwf	start_ad_convert@j^(0+128),w
 10397  35E7  1C03               	skipc
 10398  35E8  2DD1               	goto	l16576
 10399                           
 10400                           ;task.c: 1090: }
 10401                           ;task.c: 1092: }
 10402                           ;task.c: 1093: }
 10403                           ;task.c: 1095: ADCON0bits.ADON =0;
 10404  35E9  101D               	bcf	29,0	;volatile
 10405                           
 10406                           ;task.c: 1097: return((adc_buffer[24]+adc_buffer[26]+
 10407                           ;task.c: 1098: adc_buffer[22]+adc_buffer[28]+
 10408                           ;task.c: 1099: adc_buffer[20]+adc_buffer[30]+
 10409                           ;task.c: 1100: adc_buffer[18]+adc_buffer[32]+
 10410                           ;task.c: 1101: adc_buffer[16]+adc_buffer[34]+
 10411                           ;task.c: 1102: adc_buffer[14]+adc_buffer[36]+
 10412                           ;task.c: 1103: adc_buffer[12]+adc_buffer[38]+
 10413                           ;task.c: 1104: adc_buffer[10]+adc_buffer[40]+
 10414                           ;task.c: 1105: adc_buffer[8]+adc_buffer[42]+
 10415                           ;task.c: 1106: adc_buffer[6]+adc_buffer[44]+
 10416                           ;task.c: 1107: adc_buffer[4]+adc_buffer[46]+
 10417                           ;task.c: 1108: adc_buffer[2]+adc_buffer[48]+
 10418  35EA  301A               	movlw	26
 10419  35EB  0020               	movlb	0	; select bank0
 10420  35EC  00A9               	movwf	___lwdiv@divisor
 10421  35ED  3070               	movlw	112
 10422  35EE  01AA               	clrf	___lwdiv@divisor+1
 10423  35EF  0086               	movwf	6
 10424  35F0  3023               	movlw	35
 10425  35F1  0087               	movwf	7
 10426  35F2  30A0               	movlw	160
 10427  35F3  0084               	movwf	4
 10428  35F4  3023               	movlw	35
 10429  35F5  0085               	movwf	5
 10430  35F6  3F00               	moviw [0]fsr0
 10431  35F7  00B2               	movwf	??_start_ad_convert
 10432  35F8  3F01               	moviw [1]fsr0
 10433  35F9  00B3               	movwf	??_start_ad_convert+1
 10434  35FA  30A4               	movlw	164
 10435  35FB  0084               	movwf	4
 10436  35FC  3F00               	moviw [0]fsr0
 10437  35FD  0732               	addwf	??_start_ad_convert,w
 10438  35FE  00B4               	movwf	??_start_ad_convert+2
 10439  35FF  3F01               	moviw [1]fsr0
 10440  3600  3D33               	addwfc	??_start_ad_convert+1,w
 10441  3601  00B5               	movwf	??_start_ad_convert+3
 10442  3602  309C               	movlw	156
 10443  3603  0084               	movwf	4
 10444  3604  3F00               	moviw [0]fsr0
 10445  3605  0734               	addwf	??_start_ad_convert+2,w
 10446  3606  00B6               	movwf	??_start_ad_convert+4
 10447  3607  3F01               	moviw [1]fsr0
 10448  3608  3D35               	addwfc	??_start_ad_convert+3,w
 10449  3609  00B7               	movwf	??_start_ad_convert+5
 10450  360A  30A8               	movlw	168
 10451  360B  0084               	movwf	4
 10452  360C  3F00               	moviw [0]fsr0
 10453  360D  0736               	addwf	??_start_ad_convert+4,w
 10454  360E  00B8               	movwf	??_start_ad_convert+6
 10455  360F  3F01               	moviw [1]fsr0
 10456  3610  3D37               	addwfc	??_start_ad_convert+5,w
 10457  3611  00B9               	movwf	??_start_ad_convert+7
 10458  3612  3098               	movlw	152
 10459  3613  0084               	movwf	4
 10460  3614  3F00               	moviw [0]fsr0
 10461  3615  0738               	addwf	??_start_ad_convert+6,w
 10462  3616  00BA               	movwf	??_start_ad_convert+8
 10463  3617  3F01               	moviw [1]fsr0
 10464  3618  3D39               	addwfc	??_start_ad_convert+7,w
 10465  3619  00BB               	movwf	??_start_ad_convert+9
 10466  361A  30AC               	movlw	172
 10467  361B  0084               	movwf	4
 10468  361C  3F00               	moviw [0]fsr0
 10469  361D  073A               	addwf	??_start_ad_convert+8,w
 10470  361E  00BC               	movwf	??_start_ad_convert+10
 10471  361F  3F01               	moviw [1]fsr0
 10472  3620  3D3B               	addwfc	??_start_ad_convert+9,w
 10473  3621  00BD               	movwf	??_start_ad_convert+11
 10474  3622  3094               	movlw	148
 10475  3623  0084               	movwf	4
 10476  3624  3F00               	moviw [0]fsr0
 10477  3625  073C               	addwf	??_start_ad_convert+10,w
 10478  3626  00BE               	movwf	??_start_ad_convert+12
 10479  3627  3F01               	moviw [1]fsr0
 10480  3628  3D3D               	addwfc	??_start_ad_convert+11,w
 10481  3629  00BF               	movwf	??_start_ad_convert+13
 10482  362A  30B0               	movlw	176
 10483  362B  0084               	movwf	4
 10484  362C  3F00               	moviw [0]fsr0
 10485  362D  073E               	addwf	??_start_ad_convert+12,w
 10486  362E  00C0               	movwf	??_start_ad_convert+14
 10487  362F  3F01               	moviw [1]fsr0
 10488  3630  3D3F               	addwfc	??_start_ad_convert+13,w
 10489  3631  00C1               	movwf	??_start_ad_convert+15
 10490  3632  3090               	movlw	144
 10491  3633  0084               	movwf	4
 10492  3634  3F00               	moviw [0]fsr0
 10493  3635  0740               	addwf	??_start_ad_convert+14,w
 10494  3636  00C2               	movwf	??_start_ad_convert+16
 10495  3637  3F01               	moviw [1]fsr0
 10496  3638  3D41               	addwfc	??_start_ad_convert+15,w
 10497  3639  00C3               	movwf	??_start_ad_convert+17
 10498  363A  30B4               	movlw	180
 10499  363B  0084               	movwf	4
 10500  363C  3F00               	moviw [0]fsr0
 10501  363D  0742               	addwf	??_start_ad_convert+16,w
 10502  363E  00C4               	movwf	??_start_ad_convert+18
 10503  363F  3F01               	moviw [1]fsr0
 10504  3640  3D43               	addwfc	??_start_ad_convert+17,w
 10505  3641  00C5               	movwf	??_start_ad_convert+19
 10506  3642  3070               	movlw	112
 10507  3643  0084               	movwf	4
 10508  3644  311C               	addfsr 0,28
 10509  3645  3F00               	moviw [0]fsr0
 10510  3646  0744               	addwf	??_start_ad_convert+18,w
 10511  3647  00C6               	movwf	??_start_ad_convert+20
 10512  3648  3F01               	moviw [1]fsr0
 10513  3649  3D45               	addwfc	??_start_ad_convert+19,w
 10514  364A  00C7               	movwf	??_start_ad_convert+21
 10515  364B  30B8               	movlw	184
 10516  364C  0084               	movwf	4
 10517  364D  3023               	movlw	35
 10518  364E  0085               	movwf	5
 10519  364F  3F00               	moviw [0]fsr0
 10520  3650  0746               	addwf	??_start_ad_convert+20,w
 10521  3651  00C8               	movwf	??_start_ad_convert+22
 10522  3652  3F01               	moviw [1]fsr0
 10523  3653  3D47               	addwfc	??_start_ad_convert+21,w
 10524  3654  00C9               	movwf	??_start_ad_convert+23
 10525  3655  3070               	movlw	112
 10526  3656  0084               	movwf	4
 10527  3657  3118               	addfsr 0,24
 10528  3658  3F00               	moviw [0]fsr0
 10529  3659  0748               	addwf	??_start_ad_convert+22,w
 10530  365A  00CA               	movwf	??_start_ad_convert+24
 10531  365B  3F01               	moviw [1]fsr0
 10532  365C  3D49               	addwfc	??_start_ad_convert+23,w
 10533  365D  00CB               	movwf	??_start_ad_convert+25
 10534  365E  30BC               	movlw	188
 10535  365F  0084               	movwf	4
 10536  3660  3023               	movlw	35
 10537  3661  0085               	movwf	5
 10538  3662  3F00               	moviw [0]fsr0
 10539  3663  074A               	addwf	??_start_ad_convert+24,w
 10540  3664  00CC               	movwf	??_start_ad_convert+26
 10541  3665  3F01               	moviw [1]fsr0
 10542  3666  3D4B               	addwfc	??_start_ad_convert+25,w
 10543  3667  00CD               	movwf	??_start_ad_convert+27
 10544  3668  3070               	movlw	112
 10545  3669  0084               	movwf	4
 10546  366A  3114               	addfsr 0,20
 10547  366B  3F00               	moviw [0]fsr0
 10548  366C  074C               	addwf	??_start_ad_convert+26,w
 10549  366D  00CE               	movwf	??_start_ad_convert+28
 10550  366E  3F01               	moviw [1]fsr0
 10551  366F  3D4D               	addwfc	??_start_ad_convert+27,w
 10552  3670  00CF               	movwf	??_start_ad_convert+29
 10553  3671  30C0               	movlw	192
 10554  3672  0084               	movwf	4
 10555  3673  3023               	movlw	35
 10556  3674  0085               	movwf	5
 10557  3675  3F00               	moviw [0]fsr0
 10558  3676  074E               	addwf	??_start_ad_convert+28,w
 10559  3677  00D0               	movwf	??_start_ad_convert+30
 10560  3678  3F01               	moviw [1]fsr0
 10561  3679  3D4F               	addwfc	??_start_ad_convert+29,w
 10562  367A  00D1               	movwf	??_start_ad_convert+31
 10563  367B  3070               	movlw	112
 10564  367C  0084               	movwf	4
 10565  367D  3110               	addfsr 0,16
 10566  367E  3F00               	moviw [0]fsr0
 10567  367F  0750               	addwf	??_start_ad_convert+30,w
 10568  3680  00D2               	movwf	??_start_ad_convert+32
 10569  3681  3F01               	moviw [1]fsr0
 10570  3682  3D51               	addwfc	??_start_ad_convert+31,w
 10571  3683  00D3               	movwf	??_start_ad_convert+33
 10572  3684  30C4               	movlw	196
 10573  3685  0084               	movwf	4
 10574  3686  3023               	movlw	35
 10575  3687  0085               	movwf	5
 10576  3688  3F00               	moviw [0]fsr0
 10577  3689  0752               	addwf	??_start_ad_convert+32,w
 10578  368A  00D4               	movwf	??_start_ad_convert+34
 10579  368B  3F01               	moviw [1]fsr0
 10580  368C  3D53               	addwfc	??_start_ad_convert+33,w
 10581  368D  00D5               	movwf	??_start_ad_convert+35
 10582  368E  3070               	movlw	112
 10583  368F  0084               	movwf	4
 10584  3690  310C               	addfsr 0,12
 10585  3691  3F00               	moviw [0]fsr0
 10586  3692  0754               	addwf	??_start_ad_convert+34,w
 10587  3693  00D6               	movwf	??_start_ad_convert+36
 10588  3694  3F01               	moviw [1]fsr0
 10589  3695  3D55               	addwfc	??_start_ad_convert+35,w
 10590  3696  00D7               	movwf	??_start_ad_convert+37
 10591  3697  30C8               	movlw	200
 10592  3698  0084               	movwf	4
 10593  3699  3023               	movlw	35
 10594  369A  0085               	movwf	5
 10595  369B  3F00               	moviw [0]fsr0
 10596  369C  0756               	addwf	??_start_ad_convert+36,w
 10597  369D  00D8               	movwf	??_start_ad_convert+38
 10598  369E  3F01               	moviw [1]fsr0
 10599  369F  3D57               	addwfc	??_start_ad_convert+37,w
 10600  36A0  00D9               	movwf	??_start_ad_convert+39
 10601  36A1  3070               	movlw	112
 10602  36A2  0084               	movwf	4
 10603  36A3  3108               	addfsr 0,8
 10604  36A4  3F00               	moviw [0]fsr0
 10605  36A5  0758               	addwf	??_start_ad_convert+38,w
 10606  36A6  00DA               	movwf	??_start_ad_convert+40
 10607  36A7  3F01               	moviw [1]fsr0
 10608  36A8  3D59               	addwfc	??_start_ad_convert+39,w
 10609  36A9  00DB               	movwf	??_start_ad_convert+41
 10610  36AA  30CC               	movlw	204
 10611  36AB  0084               	movwf	4
 10612  36AC  3023               	movlw	35
 10613  36AD  0085               	movwf	5
 10614  36AE  3F00               	moviw [0]fsr0
 10615  36AF  075A               	addwf	??_start_ad_convert+40,w
 10616  36B0  00DC               	movwf	??_start_ad_convert+42
 10617  36B1  3F01               	moviw [1]fsr0
 10618  36B2  3D5B               	addwfc	??_start_ad_convert+41,w
 10619  36B3  00DD               	movwf	??_start_ad_convert+43
 10620  36B4  3070               	movlw	112
 10621  36B5  0084               	movwf	4
 10622  36B6  3104               	addfsr 0,4
 10623  36B7  3F00               	moviw [0]fsr0
 10624  36B8  075C               	addwf	??_start_ad_convert+42,w
 10625  36B9  00DE               	movwf	??_start_ad_convert+44
 10626  36BA  3F01               	moviw [1]fsr0
 10627  36BB  3D5D               	addwfc	??_start_ad_convert+43,w
 10628  36BC  00DF               	movwf	??_start_ad_convert+45
 10629  36BD  30D0               	movlw	208
 10630  36BE  0084               	movwf	4
 10631  36BF  3023               	movlw	35
 10632  36C0  0085               	movwf	5
 10633  36C1  3F00               	moviw [0]fsr0
 10634  36C2  075E               	addwf	??_start_ad_convert+44,w
 10635  36C3  00E0               	movwf	??_start_ad_convert+46
 10636  36C4  3F01               	moviw [1]fsr0
 10637  36C5  3D5F               	addwfc	??_start_ad_convert+45,w
 10638  36C6  00E1               	movwf	??_start_ad_convert+47
 10639  36C7  30D4               	movlw	212
 10640  36C8  0084               	movwf	4
 10641  36C9  3F00               	moviw [0]fsr0
 10642  36CA  0760               	addwf	??_start_ad_convert+46,w
 10643  36CB  00E2               	movwf	??_start_ad_convert+48
 10644  36CC  3F01               	moviw [1]fsr0
 10645  36CD  3D61               	addwfc	??_start_ad_convert+47,w
 10646  36CE  00E3               	movwf	??_start_ad_convert+49
 10647  36CF  3F40               	moviw [0]fsr1
 10648  36D0  0762               	addwf	??_start_ad_convert+48,w
 10649  36D1  00AB               	movwf	___lwdiv@dividend
 10650  36D2  3F41               	moviw [1]fsr1
 10651  36D3  3D63               	addwfc	??_start_ad_convert+49,w
 10652  36D4  00AC               	movwf	___lwdiv@dividend+1
 10653  36D5  271D               	fcall	___lwdiv
 10654  36D6  082A               	movf	?___lwdiv+1,w
 10655  36D7  00B1               	movwf	?_start_ad_convert+1
 10656  36D8  0829               	movf	?___lwdiv,w
 10657  36D9  00B0               	movwf	?_start_ad_convert
 10658  36DA  0008               	return
 10659  36DB                     l16598:	
 10660                           
 10661                           ;task.c: 1110: }
 10662                           ;task.c: 1114: for(i=0;i<11;i++)
 10663  36DB  01A9               	clrf	start_ad_convert@i^(0+128)
 10664  36DC                     l16604:	
 10665                           
 10666                           ;task.c: 1115: {
 10667                           ;task.c: 1116: _delay((unsigned long)((10)*(32000000/4000000.0)));
 10668  36DC  301A               	movlw	26
 10669  36DD  0020               	movlb	0	; select bank0
 10670  36DE  00B2               	movwf	??_start_ad_convert
 10671  36DF                     u12307:	
 10672  36DF  0BB2               	decfsz	??_start_ad_convert,f
 10673  36E0  2EDF               	goto	u12307
 10674  36E1  0000               	nop
 10675                           
 10676                           ;task.c: 1118: ADCON0bits.GO=1;
 10677  36E2  0021               	movlb	1	; select bank1
 10678  36E3  149D               	bsf	29,1	;volatile
 10679  36E4                     l1490:	
 10680                           ;task.c: 1120: while(ADCON0bits.nDONE);
 10681                           
 10682  36E4  189D               	btfsc	29,1	;volatile
 10683  36E5  2EE4               	goto	l1490
 10684                           
 10685                           ;task.c: 1122: ad_h=0b00000011&ADRESH;
 10686  36E6  081C               	movf	28,w	;volatile
 10687                           
 10688                           ;task.c: 1124: ad_l=ADRESL;
 10689                           
 10690                           ;task.c: 1126: adc_buffer[i]=(ad_h<<8)|ad_l;
 10691  36E7  27C8  31B5         	fcall	PL42	;call to abstracted procedure
 10692  36E9  300B               	movlw	11
 10693  36EA  0AA9               	incf	start_ad_convert@i^(0+128),f
 10694  36EB  0229               	subwf	start_ad_convert@i^(0+128),w
 10695  36EC  1C03               	skipc
 10696  36ED  2EDC               	goto	l16604
 10697                           
 10698                           ;task.c: 1127: }
 10699                           ;task.c: 1129: for(j=0;j<11-1;j++)
 10700  36EE  01A8               	clrf	start_ad_convert@j^(0+128)
 10701  36EF                     l16624:	
 10702                           
 10703                           ;task.c: 1130: {
 10704                           ;task.c: 1131: for(i=0;i<11-j;i++)
 10705  36EF  01A9               	clrf	start_ad_convert@i^(0+128)
 10706  36F0                     l16636:	
 10707  36F0  0020               	movlb	0	; select bank0
 10708  36F1  01B3               	clrf	??_start_ad_convert+1
 10709  36F2  0021               	movlb	1	; select bank1
 10710  36F3  0828               	movf	start_ad_convert@j^(0+128),w
 10711  36F4  3C0B               	sublw	11
 10712  36F5  27F3  31B5         	fcall	PL170	;call to abstracted procedure
 10713  36F7  1803               	btfsc	3,0
 10714  36F8  2F01               	goto	l16638
 10715                           
 10716                           ;task.c: 1132: {
 10717                           ;task.c: 1133: if(adc_buffer[i]>adc_buffer[i+1])
 10718  36F9  0021               	movlb	1	; select bank1
 10719  36FA  27C4  31B5         	fcall	PL38	;call to abstracted procedure
 10720  36FC  27BA  31B5         	fcall	PL28	;call to abstracted procedure
 10721                           
 10722                           ;task.c: 1134: {
 10723                           ;task.c: 1135: temp=adc_buffer[i];
 10724                           
 10725                           ;task.c: 1137: adc_buffer[i]=adc_buffer[i+1];
 10726                           
 10727                           ;task.c: 1139: adc_buffer[i+1]=temp;
 10728  36FE  2742  31B5         	fcall	PL10	;call to abstracted procedure
 10729  3700  2EF0               	goto	l16636
 10730  3701                     l16638:	
 10731  3701  0021               	movlb	1	; select bank1
 10732  3702  300A               	movlw	10
 10733  3703  0AA8               	incf	start_ad_convert@j^(0+128),f
 10734  3704  0228               	subwf	start_ad_convert@j^(0+128),w
 10735  3705  1C03               	skipc
 10736  3706  2EEF               	goto	l16624
 10737                           
 10738                           ;task.c: 1140: }
 10739                           ;task.c: 1142: }
 10740                           ;task.c: 1143: }
 10741                           ;task.c: 1145: ADCON0bits.ADON =0;
 10742  3707  101D               	bcf	29,0	;volatile
 10743                           
 10744                           ;task.c: 1147: return((adc_buffer[((11-1)/2)-1]+adc_buffer[((11-1)/2)+1])/2);
 10745  3708  3070               	movlw	112
 10746  3709  0086               	movwf	6
 10747  370A  3023               	movlw	35
 10748  370B  0087               	movwf	7
 10749  370C  3070               	movlw	112
 10750  370D  314C               	addfsr 1,12
 10751  370E  0084               	movwf	4
 10752  370F  3023               	movlw	35
 10753  3710  0085               	movwf	5
 10754  3711  3108               	addfsr 0,8
 10755  3712  3F40               	moviw [0]fsr1
 10756  3713  0700               	addwf	0,w
 10757  3714  0020               	movlb	0	; select bank0
 10758  3715  00B0               	movwf	?_start_ad_convert
 10759  3716  3101               	addfsr 0,1
 10760  3717  3F41               	moviw [1]fsr1
 10761  3718  3D00               	addwfc	0,w
 10762  3719  00B1               	movwf	?_start_ad_convert+1
 10763  371A  36B1               	lsrf	?_start_ad_convert+1,f
 10764  371B  0CB0               	rrf	?_start_ad_convert,f
 10765  371C  0008               	return
 10766  371D                     __end_of_start_ad_convert:	
 10767  371D                     __ptext13:	
 10768 ;; *************** function ___lwdiv *****************
 10769 ;; Defined at:
 10770 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  divisor         2    9[BANK0 ] unsigned int 
 10773 ;;  dividend        2   11[BANK0 ] unsigned int 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  quotient        2   14[BANK0 ] unsigned int 
 10776 ;;  counter         1   13[BANK0 ] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  2    9[BANK0 ] unsigned int 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 1F/0
 10783 ;;		On exit  : 1F/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;Total ram usage:        7 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    2
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_handle_ad_loop
 10797 ;;		_start_ad_convert
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           
 10802                           ;psect for function ___lwdiv
 10803  371D                     ___lwdiv:	
 10804                           
 10805                           ;incstack = 0
 10806                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10807  371D  01AE               	clrf	___lwdiv@quotient
 10808  371E  01AF               	clrf	___lwdiv@quotient+1
 10809  371F  082A               	movf	___lwdiv@divisor+1,w
 10810  3720  0429               	iorwf	___lwdiv@divisor,w
 10811  3721  1903               	skipnz
 10812  3722  2F3D               	goto	l19226
 10813  3723  01AD               	clrf	___lwdiv@counter
 10814  3724                     L44:	
 10815  3724  0AAD               	incf	___lwdiv@counter,f
 10816  3725  1BAA               	btfsc	___lwdiv@divisor+1,7
 10817  3726  2F2A               	goto	l19214
 10818  3727  35A9               	lslf	___lwdiv@divisor,f
 10819  3728  0DAA               	rlf	___lwdiv@divisor+1,f
 10820  3729  2F24               	goto	L44
 10821  372A                     l19214:	
 10822  372A  35AE               	lslf	___lwdiv@quotient,f
 10823  372B  0DAF               	rlf	___lwdiv@quotient+1,f
 10824  372C  082A               	movf	___lwdiv@divisor+1,w
 10825  372D  022C               	subwf	___lwdiv@dividend+1,w
 10826  372E  1D03               	skipz
 10827  372F  2F32               	goto	u12255
 10828  3730  0829               	movf	___lwdiv@divisor,w
 10829  3731  022B               	subwf	___lwdiv@dividend,w
 10830  3732                     u12255:	
 10831  3732  1C03               	skipc
 10832  3733  2F39               	goto	l19222
 10833  3734  0829               	movf	___lwdiv@divisor,w
 10834  3735  02AB               	subwf	___lwdiv@dividend,f
 10835  3736  082A               	movf	___lwdiv@divisor+1,w
 10836  3737  3BAC               	subwfb	___lwdiv@dividend+1,f
 10837  3738  142E               	bsf	___lwdiv@quotient,0
 10838  3739                     l19222:	
 10839  3739  36AA               	lsrf	___lwdiv@divisor+1,f
 10840  373A  0CA9               	rrf	___lwdiv@divisor,f
 10841  373B  0BAD               	decfsz	___lwdiv@counter,f
 10842  373C  2F2A               	goto	l19214
 10843  373D                     l19226:	
 10844  373D  082F               	movf	___lwdiv@quotient+1,w
 10845  373E  00AA               	movwf	?___lwdiv+1
 10846  373F  082E               	movf	___lwdiv@quotient,w
 10847  3740  00A9               	movwf	?___lwdiv
 10848  3741  0008               	return
 10849  3742                     __end_of___lwdiv:	
 10850  3742                     PL10:	
 10851  3742  0833               	movf	??_start_ad_convert+1,w
 10852  3743  3D35               	addwfc	??_start_ad_convert+3,w
 10853  3744  0087               	movwf	7
 10854  3745  3F40               	moviw [0]fsr1
 10855  3746  00B6               	movwf	??_start_ad_convert+4
 10856  3747  3F41               	moviw [1]fsr1
 10857  3748  00B7               	movwf	??_start_ad_convert+5
 10858  3749  0021               	movlb	1	; select bank1
 10859  374A  0829               	movf	start_ad_convert@i^(0+128),w
 10860  374B  0020               	movlb	0	; select bank0
 10861  374C  00B8               	movwf	??_start_ad_convert+6
 10862  374D  3072               	movlw	114
 10863  374E  01B9               	clrf	??_start_ad_convert+7
 10864  374F  35B8               	lslf	??_start_ad_convert+6,f
 10865  3750  0DB9               	rlf	??_start_ad_convert+7,f
 10866  3751  00BA               	movwf	??_start_ad_convert+8
 10867  3752  3023               	movlw	35
 10868  3753  00BB               	movwf	??_start_ad_convert+9
 10869  3754  0838               	movf	??_start_ad_convert+6,w
 10870  3755  073A               	addwf	??_start_ad_convert+8,w
 10871  3756  0086               	movwf	6
 10872  3757  0839               	movf	??_start_ad_convert+7,w
 10873  3758  3D3B               	addwfc	??_start_ad_convert+9,w
 10874  3759  0087               	movwf	7
 10875  375A  3F40               	moviw [0]fsr1
 10876  375B  00BC               	movwf	??_start_ad_convert+10
 10877  375C  3F41               	moviw [1]fsr1
 10878  375D  00BD               	movwf	??_start_ad_convert+11
 10879  375E  0837               	movf	??_start_ad_convert+5,w
 10880  375F  023D               	subwf	??_start_ad_convert+11,w
 10881  3760  1D03               	skipz
 10882  3761  2F64               	goto	u8975
 10883  3762  0836               	movf	??_start_ad_convert+4,w
 10884  3763  023C               	subwf	??_start_ad_convert+10,w
 10885  3764                     u8975:	
 10886  3764  1803               	skipnc
 10887  3765  2FB7               	goto	l16586
 10888  3766  0021               	movlb	1	; select bank1
 10889  3767  0829               	movf	start_ad_convert@i^(0+128),w
 10890  3768  0020               	movlb	0	; select bank0
 10891  3769  00B2               	movwf	??_start_ad_convert
 10892  376A  3070               	movlw	112
 10893  376B  01B3               	clrf	??_start_ad_convert+1
 10894  376C  35B2               	lslf	??_start_ad_convert,f
 10895  376D  0DB3               	rlf	??_start_ad_convert+1,f
 10896  376E  00B4               	movwf	??_start_ad_convert+2
 10897  376F  3023               	movlw	35
 10898  3770  00B5               	movwf	??_start_ad_convert+3
 10899  3771  0832               	movf	??_start_ad_convert,w
 10900  3772  0734               	addwf	??_start_ad_convert+2,w
 10901  3773  0086               	movwf	6
 10902  3774  0833               	movf	??_start_ad_convert+1,w
 10903  3775  3D35               	addwfc	??_start_ad_convert+3,w
 10904  3776  0087               	movwf	7
 10905  3777  3F40               	moviw [0]fsr1
 10906  3778  0021               	movlb	1	; select bank1
 10907  3779  00A5               	movwf	start_ad_convert@temp^(0+128)
 10908  377A  3F41               	moviw [1]fsr1
 10909  377B  00A6               	movwf	(start_ad_convert@temp+1)^(0+128)
 10910  377C  0829               	movf	start_ad_convert@i^(0+128),w
 10911  377D  0020               	movlb	0	; select bank0
 10912  377E  00B2               	movwf	??_start_ad_convert
 10913  377F  3072               	movlw	114
 10914  3780  01B3               	clrf	??_start_ad_convert+1
 10915  3781  35B2               	lslf	??_start_ad_convert,f
 10916  3782  0DB3               	rlf	??_start_ad_convert+1,f
 10917  3783  00B4               	movwf	??_start_ad_convert+2
 10918  3784  3023               	movlw	35
 10919  3785  00B5               	movwf	??_start_ad_convert+3
 10920  3786  0832               	movf	??_start_ad_convert,w
 10921  3787  0734               	addwf	??_start_ad_convert+2,w
 10922  3788  0086               	movwf	6
 10923  3789  0833               	movf	??_start_ad_convert+1,w
 10924  378A  3D35               	addwfc	??_start_ad_convert+3,w
 10925  378B  0087               	movwf	7
 10926  378C  0021               	movlb	1	; select bank1
 10927  378D  0829               	movf	start_ad_convert@i^(0+128),w
 10928  378E  0020               	movlb	0	; select bank0
 10929  378F  00B6               	movwf	??_start_ad_convert+4
 10930  3790  3070               	movlw	112
 10931  3791  01B7               	clrf	??_start_ad_convert+5
 10932  3792  35B6               	lslf	??_start_ad_convert+4,f
 10933  3793  0DB7               	rlf	??_start_ad_convert+5,f
 10934  3794  00B8               	movwf	??_start_ad_convert+6
 10935  3795  3023               	movlw	35
 10936  3796  00B9               	movwf	??_start_ad_convert+7
 10937  3797  0836               	movf	??_start_ad_convert+4,w
 10938  3798  0738               	addwf	??_start_ad_convert+6,w
 10939  3799  0084               	movwf	4
 10940  379A  0837               	movf	??_start_ad_convert+5,w
 10941  379B  3D39               	addwfc	??_start_ad_convert+7,w
 10942  379C  0085               	movwf	5
 10943  379D  3F40               	moviw [0]fsr1
 10944  379E  3F80               	movwi [0]fsr0
 10945  379F  3F41               	moviw [1]fsr1
 10946  37A0  3F81               	movwi [1]fsr0
 10947  37A1  0021               	movlb	1	; select bank1
 10948  37A2  0829               	movf	start_ad_convert@i^(0+128),w
 10949  37A3  0020               	movlb	0	; select bank0
 10950  37A4  00B2               	movwf	??_start_ad_convert
 10951  37A5  3072               	movlw	114
 10952  37A6  01B3               	clrf	??_start_ad_convert+1
 10953  37A7  35B2               	lslf	??_start_ad_convert,f
 10954  37A8  0DB3               	rlf	??_start_ad_convert+1,f
 10955  37A9  00B4               	movwf	??_start_ad_convert+2
 10956  37AA  3023               	movlw	35
 10957  37AB  00B5               	movwf	??_start_ad_convert+3
 10958  37AC  0832               	movf	??_start_ad_convert,w
 10959  37AD  0734               	addwf	??_start_ad_convert+2,w
 10960  37AE  0086               	movwf	6
 10961  37AF  0833               	movf	??_start_ad_convert+1,w
 10962  37B0  3D35               	addwfc	??_start_ad_convert+3,w
 10963  37B1  0087               	movwf	7
 10964  37B2  0021               	movlb	1	; select bank1
 10965  37B3  0825               	movf	start_ad_convert@temp^(0+128),w
 10966  37B4  3FC0               	movwi [0]fsr1
 10967  37B5  0826               	movf	(start_ad_convert@temp+1)^(0+128),w
 10968  37B6  3FC1               	movwi [1]fsr1
 10969  37B7                     l16586:	
 10970  37B7  0021               	movlb	1	; select bank1
 10971  37B8  0AA9               	incf	start_ad_convert@i^(0+128),f
 10972  37B9  0008               	return
 10973  37BA                     __end_ofPL10:	
 10974  37BA                     PL28:	
 10975  37BA  01B3               	clrf	??_start_ad_convert+1
 10976  37BB  35B2               	lslf	??_start_ad_convert,f
 10977  37BC  0DB3               	rlf	??_start_ad_convert+1,f
 10978  37BD  00B4               	movwf	??_start_ad_convert+2
 10979  37BE  3023               	movlw	35
 10980  37BF  00B5               	movwf	??_start_ad_convert+3
 10981  37C0  0832               	movf	??_start_ad_convert,w
 10982  37C1  0734               	addwf	??_start_ad_convert+2,w
 10983  37C2  0086               	movwf	6
 10984  37C3  0008               	return
 10985  37C4                     __end_ofPL28:	
 10986  37C4                     PL38:	
 10987  37C4  0829               	movf	start_ad_convert@i^(0+128),w
 10988  37C5  0020               	movlb	0	; select bank0
 10989  37C6  00B2               	movwf	??_start_ad_convert
 10990  37C7  3470               	retlw	112
 10991  37C8                     __end_ofPL38:	
 10992  37C8                     PL42:	
 10993  37C8  3903               	andlw	3
 10994  37C9  00A1               	movwf	start_ad_convert@ad_h^(0+128)
 10995  37CA  01A2               	clrf	(start_ad_convert@ad_h+1)^(0+128)
 10996  37CB  081B               	movf	27,w	;volatile
 10997  37CC  00A3               	movwf	start_ad_convert@ad_l^(0+128)
 10998  37CD  01A4               	clrf	(start_ad_convert@ad_l+1)^(0+128)
 10999  37CE  0821               	movf	start_ad_convert@ad_h^(0+128),w
 11000  37CF  0020               	movlb	0	; select bank0
 11001  37D0  00B3               	movwf	??_start_ad_convert+1
 11002  37D1  01B2               	clrf	??_start_ad_convert
 11003  37D2  0021               	movlb	1	; select bank1
 11004  37D3  0823               	movf	start_ad_convert@ad_l^(0+128),w
 11005  37D4  0020               	movlb	0	; select bank0
 11006  37D5  0432               	iorwf	??_start_ad_convert,w
 11007  37D6  00B4               	movwf	??_start_ad_convert+2
 11008  37D7  0021               	movlb	1	; select bank1
 11009  37D8  0824               	movf	(start_ad_convert@ad_l+1)^(0+128),w
 11010  37D9  0020               	movlb	0	; select bank0
 11011  37DA  0433               	iorwf	??_start_ad_convert+1,w
 11012  37DB  00B5               	movwf	??_start_ad_convert+3
 11013  37DC  0021               	movlb	1	; select bank1
 11014  37DD  0829               	movf	start_ad_convert@i^(0+128),w
 11015  37DE  0020               	movlb	0	; select bank0
 11016  37DF  00B6               	movwf	??_start_ad_convert+4
 11017  37E0  3070               	movlw	112
 11018  37E1  01B7               	clrf	??_start_ad_convert+5
 11019  37E2  35B6               	lslf	??_start_ad_convert+4,f
 11020  37E3  0DB7               	rlf	??_start_ad_convert+5,f
 11021  37E4  00B8               	movwf	??_start_ad_convert+6
 11022  37E5  3023               	movlw	35
 11023  37E6  00B9               	movwf	??_start_ad_convert+7
 11024  37E7  0836               	movf	??_start_ad_convert+4,w
 11025  37E8  0738               	addwf	??_start_ad_convert+6,w
 11026  37E9  0086               	movwf	6
 11027  37EA  0837               	movf	??_start_ad_convert+5,w
 11028  37EB  3D39               	addwfc	??_start_ad_convert+7,w
 11029  37EC  0087               	movwf	7
 11030  37ED  0834               	movf	??_start_ad_convert+2,w
 11031  37EE  3FC0               	movwi [0]fsr1
 11032  37EF  0835               	movf	??_start_ad_convert+3,w
 11033  37F0  3FC1               	movwi [1]fsr1
 11034  37F1  0021               	movlb	1	; select bank1
 11035  37F2  0008               	return
 11036  37F3                     __end_ofPL42:	
 11037  37F3                     PL170:	
 11038  37F3  0020               	movlb	0	; select bank0
 11039  37F4  00B2               	movwf	??_start_ad_convert
 11040  37F5  1C03               	skipc
 11041  37F6  03B3               	decf	??_start_ad_convert+1,f
 11042  37F7  0833               	movf	??_start_ad_convert+1,w
 11043  37F8  3A80               	xorlw	128
 11044  37F9  3C80               	sublw	128
 11045  37FA  1D03               	skipz
 11046  37FB  0008               	return
 11047  37FC  0832               	movf	??_start_ad_convert,w
 11048  37FD  0021               	movlb	1	; select bank1
 11049  37FE  0229               	subwf	start_ad_convert@i^(0+128),w
 11050  37FF  0008               	return
 11051  3800                     __end_ofPL170:	
 11052                           
 11053                           	psect	text15
 11054  1108                     __ptext15:	
 11055 ;; *************** function ___wmul *****************
 11056 ;; Defined at:
 11057 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  multiplier      2    3[BANK0 ] unsigned int 
 11060 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;  product         2    7[BANK0 ] unsigned int 
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  2    3[BANK0 ] unsigned int 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0
 11067 ;; Tracked objects:
 11068 ;;		On entry : 1F/0
 11069 ;;		On exit  : 1F/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;Total ram usage:        6 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    2
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_handle_ad_loop
 11083 ;;		_handle_uart_rx_buf
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           
 11088                           ;psect for function ___wmul
 11089  1108                     ___wmul:	
 11090                           
 11091                           ;incstack = 0
 11092                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11093  1108  01A7               	clrf	___wmul@product
 11094  1109  01A8               	clrf	___wmul@product+1
 11095  110A                     l19236:	
 11096  110A  1C23               	btfss	___wmul@multiplier,0
 11097  110B  2910               	goto	l19240
 11098  110C  0825               	movf	___wmul@multiplicand,w
 11099  110D  07A7               	addwf	___wmul@product,f
 11100  110E  0826               	movf	___wmul@multiplicand+1,w
 11101  110F  3DA8               	addwfc	___wmul@product+1,f
 11102  1110                     l19240:	
 11103  1110  35A5               	lslf	___wmul@multiplicand,f
 11104  1111  0DA6               	rlf	___wmul@multiplicand+1,f
 11105  1112  36A4               	lsrf	___wmul@multiplier+1,f
 11106  1113  0CA3               	rrf	___wmul@multiplier,f
 11107  1114  0824               	movf	___wmul@multiplier+1,w
 11108  1115  0423               	iorwf	___wmul@multiplier,w
 11109  1116  1D03               	skipz
 11110  1117  290A               	goto	l19236
 11111  1118  0828               	movf	___wmul@product+1,w
 11112  1119  00A4               	movwf	?___wmul+1
 11113  111A  0827               	movf	___wmul@product,w
 11114  111B  00A3               	movwf	?___wmul
 11115  111C  0008               	return
 11116  111D                     __end_of___wmul:	
 11117                           
 11118                           	psect	text16
 11119  082E                     __ptext16:	
 11120 ;; *************** function ___lldiv *****************
 11121 ;; Defined at:
 11122 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  divisor         4    3[BANK0 ] unsigned long 
 11125 ;;  dividend        4    7[BANK0 ] unsigned long 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  quotient        4   11[BANK0 ] unsigned long 
 11128 ;;  counter         1   15[BANK0 ] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  4    3[BANK0 ] unsigned long 
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0
 11133 ;; Tracked objects:
 11134 ;;		On entry : 1F/0
 11135 ;;		On exit  : 1F/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;Total ram usage:       13 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    2
 11145 ;; This function calls:
 11146 ;;		Nothing
 11147 ;; This function is called by:
 11148 ;;		_handle_ad_loop
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           
 11153                           ;psect for function ___lldiv
 11154  082E                     ___lldiv:	
 11155                           
 11156                           ;incstack = 0
 11157                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11158  082E  01AB               	clrf	___lldiv@quotient
 11159  082F  01AC               	clrf	___lldiv@quotient+1
 11160  0830  01AD               	clrf	___lldiv@quotient+2
 11161  0831  01AE               	clrf	___lldiv@quotient+3
 11162  0832  0826               	movf	___lldiv@divisor+3,w
 11163  0833  0425               	iorwf	___lldiv@divisor+2,w
 11164  0834  0424               	iorwf	___lldiv@divisor+1,w
 11165  0835  0423               	iorwf	___lldiv@divisor,w
 11166  0836  1903               	skipnz
 11167  0837  2864               	goto	l19200
 11168  0838  01AF               	clrf	___lldiv@counter
 11169  0839                     L45:	
 11170  0839  0AAF               	incf	___lldiv@counter,f
 11171  083A  1BA6               	btfsc	___lldiv@divisor+3,7
 11172  083B  2841               	goto	l19188
 11173  083C  35A3               	lslf	___lldiv@divisor,f
 11174  083D  0DA4               	rlf	___lldiv@divisor+1,f
 11175  083E  0DA5               	rlf	___lldiv@divisor+2,f
 11176  083F  0DA6               	rlf	___lldiv@divisor+3,f
 11177  0840  2839               	goto	L45
 11178  0841                     l19188:	
 11179  0841  35AB               	lslf	___lldiv@quotient,f
 11180  0842  0DAC               	rlf	___lldiv@quotient+1,f
 11181  0843  0DAD               	rlf	___lldiv@quotient+2,f
 11182  0844  0DAE               	rlf	___lldiv@quotient+3,f
 11183  0845  0826               	movf	___lldiv@divisor+3,w
 11184  0846  022A               	subwf	___lldiv@dividend+3,w
 11185  0847  1D03               	skipz
 11186  0848  2853               	goto	u12215
 11187  0849  0825               	movf	___lldiv@divisor+2,w
 11188  084A  0229               	subwf	___lldiv@dividend+2,w
 11189  084B  1D03               	skipz
 11190  084C  2853               	goto	u12215
 11191  084D  0824               	movf	___lldiv@divisor+1,w
 11192  084E  0228               	subwf	___lldiv@dividend+1,w
 11193  084F  1D03               	skipz
 11194  0850  2853               	goto	u12215
 11195  0851  0823               	movf	___lldiv@divisor,w
 11196  0852  0227               	subwf	___lldiv@dividend,w
 11197  0853                     u12215:	
 11198  0853  1C03               	skipc
 11199  0854  285E               	goto	l19196
 11200  0855  0823               	movf	___lldiv@divisor,w
 11201  0856  02A7               	subwf	___lldiv@dividend,f
 11202  0857  0824               	movf	___lldiv@divisor+1,w
 11203  0858  3BA8               	subwfb	___lldiv@dividend+1,f
 11204  0859  0825               	movf	___lldiv@divisor+2,w
 11205  085A  3BA9               	subwfb	___lldiv@dividend+2,f
 11206  085B  0826               	movf	___lldiv@divisor+3,w
 11207  085C  3BAA               	subwfb	___lldiv@dividend+3,f
 11208  085D  142B               	bsf	___lldiv@quotient,0
 11209  085E                     l19196:	
 11210  085E  36A6               	lsrf	___lldiv@divisor+3,f
 11211  085F  0CA5               	rrf	___lldiv@divisor+2,f
 11212  0860  0CA4               	rrf	___lldiv@divisor+1,f
 11213  0861  0CA3               	rrf	___lldiv@divisor,f
 11214  0862  0BAF               	decfsz	___lldiv@counter,f
 11215  0863  2841               	goto	l19188
 11216  0864                     l19200:	
 11217  0864  082E               	movf	___lldiv@quotient+3,w
 11218  0865  00A6               	movwf	?___lldiv+3
 11219  0866  082D               	movf	___lldiv@quotient+2,w
 11220  0867  00A5               	movwf	?___lldiv+2
 11221  0868  082C               	movf	___lldiv@quotient+1,w
 11222  0869  00A4               	movwf	?___lldiv+1
 11223  086A  082B               	movf	___lldiv@quotient,w
 11224  086B  00A3               	movwf	?___lldiv
 11225  086C  0008               	return
 11226  086D                     __end_of___lldiv:	
 11227                           
 11228                           	psect	text17
 11229  19A2                     __ptext17:	
 11230 ;; *************** function _Mppt_Charge *****************
 11231 ;; Defined at:
 11232 ;;		line 1544 in file "D:\MCUProject\ZH-SL-H40\src\task.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;		None
 11237 ;; Return value:  Size  Location     Type
 11238 ;;		None               void
 11239 ;; Registers used:
 11240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11241 ;; Tracked objects:
 11242 ;;		On entry : 1F/4
 11243 ;;		On exit  : 1A/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;Total ram usage:        0 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    6
 11253 ;; This function calls:
 11254 ;;		_Set_Buck_Pwm_Duty
 11255 ;;		___fladd
 11256 ;;		___flge
 11257 ;;		___fltol
 11258 ;;		___lwtofl
 11259 ;;		_pid_calc
 11260 ;; This function is called by:
 11261 ;;		_handle_ad_loop
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           
 11266                           ;psect for function _Mppt_Charge
 11267  19A2                     _Mppt_Charge:	
 11268                           
 11269                           ;task.c: 1547: if((battery_voltage_value<dianchi_guoya_huifu)&&(charge_index==0x03))
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in _Mppt_Charge: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11273  19A2  31B4  2480  3199   	fcall	PL92	;call to abstracted procedure
 11274  19A5  231C               	fcall	___lwtofl
 11275  19A6  31B3  23B3  3199   	fcall	PL18	;call to abstracted procedure
 11276  19A9  2737  3199         	fcall	PL62	;call to abstracted procedure
 11277  19AB  25DA  3199         	fcall	___flge
 11278  19AD  1803               	btfsc	3,0
 11279  19AE  2A1E               	goto	l18876
 11280  19AF  0021               	movlb	1	; select bank1
 11281  19B0  0853               	movf	_charge_index^(0+128),w
 11282  19B1  3A03               	xorlw	3
 11283  19B2  1D03               	skipz
 11284  19B3  2A1E               	goto	l18876
 11285                           
 11286                           ;task.c: 1548: {
 11287                           ;task.c: 1550: if(mppt_status==0x00)
 11288  19B4  0023               	movlb	3	; select bank3
 11289  19B5  08C3               	movf	_mppt_status^(0+384),f
 11290  19B6  1D03               	skipz
 11291  19B7  29E5               	goto	l18850
 11292                           
 11293                           ;task.c: 1551: {
 11294                           ;task.c: 1552: if (charge_current_value>=I_prev)
 11295  19B8  0825               	movf	(_I_prev+1)^(0+384),w
 11296  19B9  0021               	movlb	1	; select bank1
 11297  19BA  0249               	subwf	(_charge_current_value+1)^(0+128),w
 11298  19BB  1D03               	skipz
 11299  19BC  29C1               	goto	u11575
 11300  19BD  0023               	movlb	3	; select bank3
 11301  19BE  0824               	movf	_I_prev^(0+384),w
 11302  19BF  0021               	movlb	1	; select bank1
 11303  19C0  0248               	subwf	_charge_current_value^(0+128),w
 11304  19C1                     u11575:	
 11305  19C1  1803               	btfsc	3,0
 11306  19C2  29F3               	goto	L51
 11307                           
 11308                           ;task.c: 1565: else
 11309                           ;task.c: 1566: {
 11310                           ;task.c: 1567: mppt_status=1;
 11311                           
 11312                           ;task.c: 1564: }
 11313                           
 11314                           ;task.c: 1557: if(buck_pwm_value>=900)
 11315                           
 11316                           ;task.c: 1553: {
 11317                           ;task.c: 1555: buck_pwm_value=buck_pwm_value + 200 * 0.025;
 11318  19C3  0023               	movlb	3	; select bank3
 11319  19C4  01C3               	clrf	_mppt_status^(0+384)
 11320  19C5  0AC3               	incf	_mppt_status^(0+384),f
 11321                           
 11322                           ;task.c: 1569: buck_pwm_value=buck_pwm_value - 200 * 0.025;
 11323  19C6  0021               	movlb	1	; select bank1
 11324  19C7                     L49:	
 11325  19C7  2775  3199         	fcall	PL160	;call to abstracted procedure
 11326  19C9  231C  3199         	fcall	___lwtofl
 11327  19CB  27A3  3199         	fcall	PL196	;call to abstracted procedure
 11328  19CD  30C0               	movlw	192
 11329  19CE  27D8  3199         	fcall	PL246	;call to abstracted procedure
 11330  19D0  261A  3199         	fcall	___fladd
 11331  19D2  27AC               	fcall	PL198	;call to abstracted procedure
 11332  19D3  318E  2674  3199   	fcall	___fltol
 11333  19D6  277D  3199         	fcall	PL178	;call to abstracted procedure
 11334                           
 11335                           ;task.c: 1571: if(buck_pwm_value<=50)
 11336  19D8  3000               	movlw	0
 11337  19D9  0247               	subwf	(_buck_pwm_value+1)^(0+128),w
 11338  19DA  3033               	movlw	51
 11339  19DB  1903               	skipnz
 11340  19DC  0246               	subwf	_buck_pwm_value^(0+128),w
 11341  19DD  1803               	skipnc
 11342  19DE  2A0F               	goto	l18838
 11343                           
 11344                           ;task.c: 1572: {
 11345                           ;task.c: 1573: buck_pwm_value=50;
 11346  19DF  3032               	movlw	50
 11347  19E0  00C6               	movwf	_buck_pwm_value^(0+128)
 11348  19E1  01C7               	clrf	(_buck_pwm_value+1)^(0+128)
 11349                           
 11350                           ;task.c: 1575: mppt_status=0;
 11351  19E2  0023               	movlb	3	; select bank3
 11352  19E3  01C3               	clrf	_mppt_status^(0+384)
 11353  19E4  2A0F               	goto	l18838
 11354  19E5                     l18850:	
 11355                           
 11356                           ;task.c: 1582: else
 11357                           ;task.c: 1583: {
 11358                           ;task.c: 1584: if (charge_current_value>=I_prev)
 11359  19E5  0825               	movf	(_I_prev+1)^(0+384),w
 11360  19E6  0021               	movlb	1	; select bank1
 11361  19E7  0249               	subwf	(_charge_current_value+1)^(0+128),w
 11362  19E8  1D03               	skipz
 11363  19E9  29EE               	goto	u11605
 11364  19EA  0023               	movlb	3	; select bank3
 11365  19EB  0824               	movf	_I_prev^(0+384),w
 11366  19EC  0021               	movlb	1	; select bank1
 11367  19ED  0248               	subwf	_charge_current_value^(0+128),w
 11368  19EE                     u11605:	
 11369  19EE  1803               	btfsc	3,0
 11370  19EF  29C7               	goto	L49
 11371                           
 11372                           ;task.c: 1601: else
 11373                           ;task.c: 1602: {
 11374                           ;task.c: 1603: mppt_status=0;
 11375                           
 11376                           ;task.c: 1589: if(buck_pwm_value<=50)
 11377                           
 11378                           ;task.c: 1585: {
 11379                           ;task.c: 1587: buck_pwm_value=buck_pwm_value-200 * 0.025;
 11380  19F0  0023               	movlb	3	; select bank3
 11381  19F1  01C3               	clrf	_mppt_status^(0+384)
 11382                           
 11383                           ;task.c: 1605: buck_pwm_value=buck_pwm_value+ 200 * 0.025;
 11384  19F2  0021               	movlb	1	; select bank1
 11385  19F3                     L51:	
 11386  19F3  2775  3199         	fcall	PL160	;call to abstracted procedure
 11387  19F5  231C  3199         	fcall	___lwtofl
 11388  19F7  27A3  3199         	fcall	PL196	;call to abstracted procedure
 11389  19F9  3040               	movlw	64
 11390  19FA  27D8  3199         	fcall	PL246	;call to abstracted procedure
 11391  19FC  261A  3199         	fcall	___fladd
 11392  19FE  27AC               	fcall	PL198	;call to abstracted procedure
 11393  19FF  318E  2674  3199   	fcall	___fltol
 11394  1A02  277D  3199         	fcall	PL178	;call to abstracted procedure
 11395                           
 11396                           ;task.c: 1607: if(buck_pwm_value>=900)
 11397  1A04  3003               	movlw	3
 11398  1A05  0247               	subwf	(_buck_pwm_value+1)^(0+128),w
 11399  1A06  3084               	movlw	132
 11400  1A07  1903               	skipnz
 11401  1A08  0246               	subwf	_buck_pwm_value^(0+128),w
 11402  1A09  1C03               	skipc
 11403  1A0A  2A0F               	goto	l18838
 11404                           
 11405                           ;task.c: 1558: {
 11406                           ;task.c: 1559: buck_pwm_value=900;
 11407  1A0B  3084               	movlw	132
 11408  1A0C  00C6               	movwf	_buck_pwm_value^(0+128)
 11409  1A0D  3003               	movlw	3
 11410  1A0E  00C7               	movwf	(_buck_pwm_value^(0+128)+1)
 11411  1A0F                     l18838:	
 11412                           
 11413                           ;task.c: 1560: }
 11414                           ;task.c: 1562: Set_Buck_Pwm_Duty(buck_pwm_value);
 11415  1A0F  0021               	movlb	1	; select bank1
 11416  1A10  276D               	fcall	PL148	;call to abstracted procedure
 11417  1A11  318D  25A7  3199   	fcall	_Set_Buck_Pwm_Duty
 11418                           
 11419                           ;task.c: 1614: }
 11420                           ;task.c: 1618: }
 11421                           ;task.c: 1620: PWM = buck_pwm_value;
 11422  1A14  0021               	movlb	1	; select bank1
 11423  1A15  2775  3199         	fcall	PL160	;call to abstracted procedure
 11424  1A17  231C  3199         	fcall	___lwtofl
 11425  1A19  2753               	fcall	PL138	;call to abstracted procedure
 11426  1A1A                     l18874:	
 11427                           
 11428                           ;task.c: 1622: cv_level_time_count=0x00;
 11429  1A1A  0024               	movlb	4	; select bank4
 11430  1A1B  01BE               	clrf	_cv_level_time_count^(0+512)
 11431  1A1C  01BF               	clrf	(_cv_level_time_count+1)^(0+512)
 11432                           
 11433                           ;task.c: 1624: }
 11434  1A1D  0008               	return
 11435  1A1E                     l18876:	
 11436                           
 11437                           ;task.c: 1625: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value
      +                          <dianchi_guoya_baohu)&&(charge_index==0x03))
 11438  1A1E  31B4  2480  3199   	fcall	PL92	;call to abstracted procedure
 11439  1A21  231C               	fcall	___lwtofl
 11440  1A22  31B3  23B3  3199   	fcall	PL18	;call to abstracted procedure
 11441  1A25  0023               	movlb	3	; select bank3
 11442  1A26  0866               	movf	(_dianchi_cv_level+3)^(0+384),w
 11443  1A27  0020               	movlb	0	; select bank0
 11444  1A28  00E1               	movwf	___flge@ff2+3
 11445  1A29  0023               	movlb	3	; select bank3
 11446  1A2A  0865               	movf	(_dianchi_cv_level+2)^(0+384),w
 11447  1A2B  0020               	movlb	0	; select bank0
 11448  1A2C  00E0               	movwf	___flge@ff2+2
 11449  1A2D  0023               	movlb	3	; select bank3
 11450  1A2E  0864               	movf	(_dianchi_cv_level+1)^(0+384),w
 11451  1A2F  0020               	movlb	0	; select bank0
 11452  1A30  00DF               	movwf	___flge@ff2+1
 11453  1A31  0023               	movlb	3	; select bank3
 11454  1A32  0863               	movf	_dianchi_cv_level^(0+384),w
 11455  1A33  0020               	movlb	0	; select bank0
 11456  1A34  00DE               	movwf	___flge@ff2
 11457  1A35  25DA  3199         	fcall	___flge
 11458  1A37  1C03               	btfss	3,0
 11459  1A38  2A62               	goto	l18892
 11460  1A39  0869               	movf	_battery_voltage_value+1,w
 11461  1A3A  00B1               	movwf	___lwtofl@c+1
 11462  1A3B  0868               	movf	_battery_voltage_value,w
 11463  1A3C  00B0               	movwf	___lwtofl@c
 11464  1A3D  231C               	fcall	___lwtofl
 11465  1A3E  31B3  23B3  3199   	fcall	PL18	;call to abstracted procedure
 11466  1A41  2704  3199         	fcall	PL44	;call to abstracted procedure
 11467  1A43  25DA  3199         	fcall	___flge
 11468  1A45  1803               	btfsc	3,0
 11469  1A46  2A62               	goto	l18892
 11470  1A47  0021               	movlb	1	; select bank1
 11471  1A48  0853               	movf	_charge_index^(0+128),w
 11472  1A49  3A03               	xorlw	3
 11473  1A4A  1D03               	skipz
 11474  1A4B  2A62               	goto	l18892
 11475                           
 11476                           ;task.c: 1626: {
 11477                           ;task.c: 1627: cv_level_time_count++;
 11478  1A4C  0024               	movlb	4	; select bank4
 11479  1A4D  0ABE               	incf	_cv_level_time_count^(0+512),f
 11480  1A4E  1903               	skipnz
 11481  1A4F  0ABF               	incf	(_cv_level_time_count+1)^(0+512),f
 11482                           
 11483                           ;task.c: 1629: if(cv_level_time_count>=100)
 11484  1A50  3000               	movlw	0
 11485  1A51  023F               	subwf	(_cv_level_time_count+1)^(0+512),w
 11486  1A52  3064               	movlw	100
 11487  1A53  1903               	skipnz
 11488  1A54  023E               	subwf	_cv_level_time_count^(0+512),w
 11489  1A55  1C03               	skipc
 11490  1A56  0008               	return
 11491  1A57  3004               	movlw	4
 11492                           
 11493                           ;task.c: 1630: {
 11494                           ;task.c: 1631: cv_level_time_count=0x00;
 11495  1A58  01BE               	clrf	_cv_level_time_count^(0+512)
 11496  1A59  01BF               	clrf	(_cv_level_time_count+1)^(0+512)
 11497                           
 11498                           ;task.c: 1633: charge_index=0x04;
 11499  1A5A  0021               	movlb	1	; select bank1
 11500  1A5B  00D3               	movwf	_charge_index^(0+128)
 11501                           
 11502                           ;task.c: 1635: PWM = buck_pwm_value;
 11503  1A5C  2775  3199         	fcall	PL160	;call to abstracted procedure
 11504  1A5E  231C  3199         	fcall	___lwtofl
 11505  1A60  2753               	fcall	PL138	;call to abstracted procedure
 11506  1A61  0008               	return
 11507  1A62                     l18892:	
 11508                           
 11509                           ;task.c: 1638: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index==0x
      +                          04) )
 11510  1A62  31B4  2480  3199   	fcall	PL92	;call to abstracted procedure
 11511  1A65  231C               	fcall	___lwtofl
 11512  1A66  31B3  23B3  3199   	fcall	PL18	;call to abstracted procedure
 11513  1A69  2704  3199         	fcall	PL44	;call to abstracted procedure
 11514  1A6B  25DA  3199         	fcall	___flge
 11515  1A6D  1803               	btfsc	3,0
 11516  1A6E  2A1A               	goto	l18874
 11517  1A6F  0021               	movlb	1	; select bank1
 11518  1A70  0853               	movf	_charge_index^(0+128),w
 11519  1A71  3A04               	xorlw	4
 11520  1A72  1D03               	skipz
 11521  1A73  2A1A               	goto	l18874
 11522                           
 11523                           ;task.c: 1639: {
 11524                           ;task.c: 1640: pid_index = 0x02;
 11525  1A74  3002               	movlw	2
 11526  1A75  0022               	movlb	2	; select bank2
 11527  1A76  00C0               	movwf	_pid_index^(0+256)
 11528                           
 11529                           ;task.c: 1642: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
 11530  1A77  30AC               	movlw	low _PID_CV_charge
 11531  1A78  0021               	movlb	1	; select bank1
 11532  1A79  00A0               	movwf	pid_calc@pp^(0+128)
 11533  1A7A  3002               	movlw	high _PID_CV_charge
 11534  1A7B  00A1               	movwf	(pid_calc@pp+1)^(0+128)
 11535  1A7C  0020               	movlb	0	; select bank0
 11536  1A7D  0869               	movf	_battery_voltage_value+1,w
 11537  1A7E  0021               	movlb	1	; select bank1
 11538  1A7F  00A3               	movwf	(pid_calc@NowPoint+1)^(0+128)
 11539  1A80  0020               	movlb	0	; select bank0
 11540  1A81  0868               	movf	_battery_voltage_value,w
 11541  1A82  0021               	movlb	1	; select bank1
 11542  1A83  00A2               	movwf	pid_calc@NowPoint^(0+128)
 11543  1A84  2330  3199         	fcall	_pid_calc
 11544  1A86  0823               	movf	(?_pid_calc+3)^(0+128),w
 11545  1A87  0025               	movlb	5	; select bank5
 11546  1A88  00A3               	movwf	(_PWM_I+3)^(0+640)
 11547  1A89  0021               	movlb	1	; select bank1
 11548  1A8A  0822               	movf	(?_pid_calc+2)^(0+128),w
 11549  1A8B  0025               	movlb	5	; select bank5
 11550  1A8C  00A2               	movwf	(_PWM_I+2)^(0+640)
 11551  1A8D  0021               	movlb	1	; select bank1
 11552  1A8E  0821               	movf	(?_pid_calc+1)^(0+128),w
 11553  1A8F  0025               	movlb	5	; select bank5
 11554  1A90  00A1               	movwf	(_PWM_I+1)^(0+640)
 11555  1A91  0021               	movlb	1	; select bank1
 11556  1A92  0820               	movf	?_pid_calc^(0+128),w
 11557  1A93  0025               	movlb	5	; select bank5
 11558  1A94  00A0               	movwf	_PWM_I^(0+640)
 11559                           
 11560                           ;task.c: 1644: PWM = PWM+PWM_I;
 11561  1A95  0823               	movf	(_PWM_I+3)^(0+640),w
 11562  1A96  0020               	movlb	0	; select bank0
 11563  1A97  00CA               	movwf	___fladd@f1+3
 11564  1A98  0025               	movlb	5	; select bank5
 11565  1A99  0822               	movf	(_PWM_I+2)^(0+640),w
 11566  1A9A  0020               	movlb	0	; select bank0
 11567  1A9B  00C9               	movwf	___fladd@f1+2
 11568  1A9C  0025               	movlb	5	; select bank5
 11569  1A9D  0821               	movf	(_PWM_I+1)^(0+640),w
 11570  1A9E  0020               	movlb	0	; select bank0
 11571  1A9F  00C8               	movwf	___fladd@f1+1
 11572  1AA0  0025               	movlb	5	; select bank5
 11573  1AA1  0820               	movf	_PWM_I^(0+640),w
 11574  1AA2  0020               	movlb	0	; select bank0
 11575  1AA3  00C7               	movwf	___fladd@f1
 11576  1AA4  0021               	movlb	1	; select bank1
 11577  1AA5  0843               	movf	(_PWM+3)^(0+128),w
 11578  1AA6  0020               	movlb	0	; select bank0
 11579  1AA7  00CE               	movwf	___fladd@f2+3
 11580  1AA8  0021               	movlb	1	; select bank1
 11581  1AA9  0842               	movf	(_PWM+2)^(0+128),w
 11582  1AAA  0020               	movlb	0	; select bank0
 11583  1AAB  00CD               	movwf	___fladd@f2+2
 11584  1AAC  0021               	movlb	1	; select bank1
 11585  1AAD  0841               	movf	(_PWM+1)^(0+128),w
 11586  1AAE  0020               	movlb	0	; select bank0
 11587  1AAF  00CC               	movwf	___fladd@f2+1
 11588  1AB0  0021               	movlb	1	; select bank1
 11589  1AB1  0840               	movf	_PWM^(0+128),w
 11590  1AB2  0020               	movlb	0	; select bank0
 11591  1AB3  00CB               	movwf	___fladd@f2
 11592  1AB4  261A  3199         	fcall	___fladd
 11593  1AB6  084A               	movf	?___fladd+3,w
 11594  1AB7  0021               	movlb	1	; select bank1
 11595  1AB8  00C3               	movwf	(_PWM+3)^(0+128)
 11596  1AB9  0020               	movlb	0	; select bank0
 11597  1ABA  0849               	movf	?___fladd+2,w
 11598  1ABB  0021               	movlb	1	; select bank1
 11599  1ABC  00C2               	movwf	(_PWM+2)^(0+128)
 11600  1ABD  0020               	movlb	0	; select bank0
 11601  1ABE  0848               	movf	?___fladd+1,w
 11602  1ABF  0021               	movlb	1	; select bank1
 11603  1AC0  00C1               	movwf	(_PWM+1)^(0+128)
 11604  1AC1  0020               	movlb	0	; select bank0
 11605  1AC2  0847               	movf	?___fladd,w
 11606  1AC3  0021               	movlb	1	; select bank1
 11607  1AC4  00C0               	movwf	_PWM^(0+128)
 11608                           
 11609                           ;task.c: 1646: if( PWM>=900)
 11610  1AC5  0843               	movf	(_PWM+3)^(0+128),w
 11611  1AC6  0020               	movlb	0	; select bank0
 11612  1AC7  00DD               	movwf	___flge@ff1+3
 11613  1AC8  0021               	movlb	1	; select bank1
 11614  1AC9  0842               	movf	(_PWM+2)^(0+128),w
 11615  1ACA  0020               	movlb	0	; select bank0
 11616  1ACB  00DC               	movwf	___flge@ff1+2
 11617  1ACC  0021               	movlb	1	; select bank1
 11618  1ACD  0841               	movf	(_PWM+1)^(0+128),w
 11619  1ACE  0020               	movlb	0	; select bank0
 11620  1ACF  00DB               	movwf	___flge@ff1+1
 11621  1AD0  0021               	movlb	1	; select bank1
 11622  1AD1  0840               	movf	_PWM^(0+128),w
 11623  1AD2  0020               	movlb	0	; select bank0
 11624  1AD3  00DA               	movwf	___flge@ff1
 11625  1AD4  3044               	movlw	68
 11626  1AD5  00E1               	movwf	___flge@ff2+3
 11627  1AD6  3061               	movlw	97
 11628  1AD7  00E0               	movwf	___flge@ff2+2
 11629  1AD8  01DF               	clrf	___flge@ff2+1
 11630  1AD9  01DE               	clrf	___flge@ff2
 11631  1ADA  25DA  3199         	fcall	___flge
 11632  1ADC  1C03               	btfss	3,0
 11633  1ADD  2AE3               	goto	l18906
 11634                           
 11635                           ;task.c: 1647: {
 11636                           ;task.c: 1648: PWM=900;
 11637  1ADE  3044               	movlw	68
 11638  1ADF  0021               	movlb	1	; select bank1
 11639  1AE0  00C3               	movwf	(_PWM+3)^(0+128)
 11640  1AE1  3061               	movlw	97
 11641  1AE2  2B01               	goto	L46
 11642  1AE3                     l18906:	
 11643                           ;task.c: 1649: }
 11644                           
 11645                           
 11646                           ;task.c: 1650: else if(PWM<=50)
 11647  1AE3  3042               	movlw	66
 11648  1AE4  00DD               	movwf	___flge@ff1+3
 11649  1AE5  3048               	movlw	72
 11650  1AE6  00DC               	movwf	___flge@ff1+2
 11651  1AE7  01DB               	clrf	___flge@ff1+1
 11652  1AE8  01DA               	clrf	___flge@ff1
 11653  1AE9  0021               	movlb	1	; select bank1
 11654  1AEA  0843               	movf	(_PWM+3)^(0+128),w
 11655  1AEB  0020               	movlb	0	; select bank0
 11656  1AEC  00E1               	movwf	___flge@ff2+3
 11657  1AED  0021               	movlb	1	; select bank1
 11658  1AEE  0842               	movf	(_PWM+2)^(0+128),w
 11659  1AEF  0020               	movlb	0	; select bank0
 11660  1AF0  00E0               	movwf	___flge@ff2+2
 11661  1AF1  0021               	movlb	1	; select bank1
 11662  1AF2  0841               	movf	(_PWM+1)^(0+128),w
 11663  1AF3  0020               	movlb	0	; select bank0
 11664  1AF4  00DF               	movwf	___flge@ff2+1
 11665  1AF5  0021               	movlb	1	; select bank1
 11666  1AF6  0840               	movf	_PWM^(0+128),w
 11667  1AF7  0020               	movlb	0	; select bank0
 11668  1AF8  00DE               	movwf	___flge@ff2
 11669  1AF9  25DA  3199         	fcall	___flge
 11670  1AFB  1C03               	btfss	3,0
 11671  1AFC  2B04               	goto	l18910
 11672                           
 11673                           ;task.c: 1651: {
 11674                           ;task.c: 1652: PWM=50;
 11675  1AFD  3042               	movlw	66
 11676  1AFE  0021               	movlb	1	; select bank1
 11677  1AFF  00C3               	movwf	(_PWM+3)^(0+128)
 11678  1B00  3048               	movlw	72
 11679  1B01                     L46:	
 11680  1B01  00C2               	movwf	(_PWM+2)^(0+128)
 11681  1B02  01C1               	clrf	(_PWM+1)^(0+128)
 11682  1B03  01C0               	clrf	_PWM^(0+128)
 11683  1B04                     l18910:	
 11684                           
 11685                           ;task.c: 1653: }
 11686                           ;task.c: 1654: buck_pwm_value = (unsigned int)PWM;
 11687  1B04  0021               	movlb	1	; select bank1
 11688  1B05  0843               	movf	(_PWM+3)^(0+128),w
 11689  1B06  0020               	movlb	0	; select bank0
 11690  1B07  00DD               	movwf	___fltol@f1+3
 11691  1B08  0021               	movlb	1	; select bank1
 11692  1B09  0842               	movf	(_PWM+2)^(0+128),w
 11693  1B0A  0020               	movlb	0	; select bank0
 11694  1B0B  00DC               	movwf	___fltol@f1+2
 11695  1B0C  0021               	movlb	1	; select bank1
 11696  1B0D  0841               	movf	(_PWM+1)^(0+128),w
 11697  1B0E  0020               	movlb	0	; select bank0
 11698  1B0F  00DB               	movwf	___fltol@f1+1
 11699  1B10  0021               	movlb	1	; select bank1
 11700  1B11  0840               	movf	_PWM^(0+128),w
 11701  1B12  0020               	movlb	0	; select bank0
 11702  1B13  00DA               	movwf	___fltol@f1
 11703  1B14  318E  2674  3199   	fcall	___fltol
 11704  1B17  277D  3199         	fcall	PL178	;call to abstracted procedure
 11705                           
 11706                           ;task.c: 1656: Set_Buck_Pwm_Duty(buck_pwm_value);
 11707  1B19  276D               	fcall	PL148	;call to abstracted procedure
 11708  1B1A  318D  2DA7         	ljmp	l16912
 11709  1B1C                     __end_of_Mppt_Charge:	
 11710                           ;task.c: 1657: }
 11711                           
 11712  1B1C                     __ptext22:	
 11713 ;; *************** function ___lwtofl *****************
 11714 ;; Defined at:
 11715 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtofl.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  c               2   16[BANK0 ] unsigned int 
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;		None
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  4   16[BANK0 ] unsigned int 
 11722 ;; Registers used:
 11723 ;;		wreg, status,2, status,0, pclath, cstack
 11724 ;; Tracked objects:
 11725 ;;		On entry : 1F/0
 11726 ;;		On exit  : 1F/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;Total ram usage:        4 bytes
 11734 ;; Hardware stack levels used:    1
 11735 ;; Hardware stack levels required when called:    3
 11736 ;; This function calls:
 11737 ;;		___flpack
 11738 ;; This function is called by:
 11739 ;;		_auto_system
 11740 ;;		_handle_ad_loop
 11741 ;;		_Mppt_Charge
 11742 ;;		_handle_uart_rx_buf
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           
 11747                           ;psect for function ___lwtofl
 11748  1B1C                     ___lwtofl:	
 11749                           
 11750                           ;incstack = 0
 11751                           ; Regs used in ___lwtofl: [wreg+status,2+status,0+pclath+cstack]
 11752  1B1C  0830               	movf	___lwtofl@c,w
 11753  1B1D  00A3               	movwf	___flpack@arg
 11754  1B1E  0831               	movf	___lwtofl@c+1,w
 11755  1B1F  00A4               	movwf	___flpack@arg+1
 11756  1B20  3096               	movlw	150
 11757  1B21  01A5               	clrf	___flpack@arg+2
 11758  1B22  01A6               	clrf	___flpack@arg+3
 11759  1B23  00A7               	movwf	___flpack@exp
 11760  1B24  01A8               	clrf	___flpack@sign
 11761  1B25  31A3  236A         	fcall	___flpack
 11762  1B27  0826               	movf	?___flpack+3,w
 11763  1B28  00B3               	movwf	?___lwtofl+3
 11764  1B29  0825               	movf	?___flpack+2,w
 11765  1B2A  00B2               	movwf	?___lwtofl+2
 11766  1B2B  0824               	movf	?___flpack+1,w
 11767  1B2C  00B1               	movwf	?___lwtofl+1
 11768  1B2D  0823               	movf	?___flpack,w
 11769  1B2E  00B0               	movwf	?___lwtofl
 11770  1B2F  0008               	return
 11771  1B30                     __end_of___lwtofl:	
 11772  1B30                     __ptext18:	
 11773 ;; *************** function _pid_calc *****************
 11774 ;; Defined at:
 11775 ;;		line 24 in file "D:\MCUProject\ZH-SL-H40\src\PID.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;  pp              2    0[BANK1 ] PTR struct PID_VAR
 11778 ;;		 -> PID_CC_discharge(28), PID_CV_charge(28), PID_CC_charge(28), 
 11779 ;;  NowPoint        2    2[BANK1 ] int 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  Error           4   28[BANK1 ] float 
 11782 ;;  PWM_var         4   24[BANK1 ] float 
 11783 ;;  dk              4   20[BANK1 ] float 
 11784 ;;  dError          4    8[BANK1 ] float 
 11785 ;; Return value:  Size  Location     Type
 11786 ;;                  4    0[BANK1 ] float 
 11787 ;; Registers used:
 11788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11789 ;; Tracked objects:
 11790 ;;		On entry : 1F/1
 11791 ;;		On exit  : 1F/1
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11794 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;Total ram usage:       32 bytes
 11799 ;; Hardware stack levels used:    1
 11800 ;; Hardware stack levels required when called:    5
 11801 ;; This function calls:
 11802 ;;		___awtofl
 11803 ;;		___fladd
 11804 ;;		___flge
 11805 ;;		___flmul
 11806 ;;		___flsub
 11807 ;; This function is called by:
 11808 ;;		_handle_ad_loop
 11809 ;;		_Mppt_Charge
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           
 11814                           ;psect for function _pid_calc
 11815  1B30                     _pid_calc:	
 11816                           
 11817                           ;PID.c: 26: float PWM_var;
 11818                           ;PID.c: 28: float dError, Error;
 11819                           ;PID.c: 30: float dk;
 11820                           ;PID.c: 32: dk=10.0;
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _pid_calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11824  1B30  3041               	movlw	65
 11825  1B31  00B7               	movwf	(pid_calc@dk+3)^(0+128)
 11826  1B32  3020               	movlw	32
 11827  1B33  00B6               	movwf	(pid_calc@dk+2)^(0+128)
 11828  1B34  01B5               	clrf	(pid_calc@dk+1)^(0+128)
 11829  1B35  01B4               	clrf	pid_calc@dk^(0+128)
 11830                           
 11831                           ;PID.c: 34: Error = pp->SetPoint - NowPoint;
 11832  1B36  0823               	movf	(pid_calc@NowPoint+1)^(0+128),w
 11833  1B37  0020               	movlb	0	; select bank0
 11834  1B38  00AE               	movwf	___awtofl@c+1
 11835  1B39  0021               	movlb	1	; select bank1
 11836  1B3A  0822               	movf	pid_calc@NowPoint^(0+128),w
 11837  1B3B  0020               	movlb	0	; select bank0
 11838  1B3C  00AD               	movwf	___awtofl@c
 11839  1B3D  31A6  2667  3199   	fcall	___awtofl
 11840  1B40  0830               	movf	?___awtofl+3,w
 11841  1B41  00D9               	movwf	___flsub@f2+3
 11842  1B42  082F               	movf	?___awtofl+2,w
 11843  1B43  00D8               	movwf	___flsub@f2+2
 11844  1B44  082E               	movf	?___awtofl+1,w
 11845  1B45  00D7               	movwf	___flsub@f2+1
 11846  1B46  082D               	movf	?___awtofl,w
 11847  1B47  00D6               	movwf	___flsub@f2
 11848  1B48  274D  3199         	fcall	PL110	;call to abstracted procedure
 11849  1B4A  2785  3199         	fcall	PL184	;call to abstracted procedure
 11850  1B4C  27E4  3199         	fcall	___flsub
 11851  1B4E  0859               	movf	?___flsub+3,w
 11852  1B4F  0021               	movlb	1	; select bank1
 11853  1B50  00BF               	movwf	(pid_calc@Error+3)^(0+128)
 11854  1B51  0020               	movlb	0	; select bank0
 11855  1B52  0858               	movf	?___flsub+2,w
 11856  1B53  0021               	movlb	1	; select bank1
 11857  1B54  00BE               	movwf	(pid_calc@Error+2)^(0+128)
 11858  1B55  0020               	movlb	0	; select bank0
 11859  1B56  0857               	movf	?___flsub+1,w
 11860  1B57  0021               	movlb	1	; select bank1
 11861  1B58  00BD               	movwf	(pid_calc@Error+1)^(0+128)
 11862  1B59  0020               	movlb	0	; select bank0
 11863  1B5A  0856               	movf	?___flsub,w
 11864  1B5B  0021               	movlb	1	; select bank1
 11865  1B5C  00BC               	movwf	pid_calc@Error^(0+128)
 11866                           
 11867                           ;PID.c: 36: if(limit_power_pid_flag==0x01)
 11868  1B5D  0023               	movlb	3	; select bank3
 11869  1B5E  0B42               	decfsz	_limit_power_pid_flag^(0+384),w
 11870  1B5F  2B89               	goto	l18720
 11871                           
 11872                           ;PID.c: 37: {
 11873                           ;PID.c: 38: if((Error<=2)&&(Error>=-2))
 11874  1B60  3040               	movlw	64
 11875  1B61  0020               	movlb	0	; select bank0
 11876  1B62  00DD               	movwf	___flge@ff1+3
 11877  1B63  01DC               	clrf	___flge@ff1+2
 11878  1B64  26E1  3199         	fcall	PL8	;call to abstracted procedure
 11879  1B66  25DA  3199         	fcall	___flge
 11880  1B68  1C03               	btfss	3,0
 11881  1B69  2B74               	goto	l18712
 11882  1B6A  0021               	movlb	1	; select bank1
 11883  1B6B  26F4  3199         	fcall	PL12	;call to abstracted procedure
 11884  1B6D  30C0               	movlw	192
 11885  1B6E  27CD  3199         	fcall	PL236	;call to abstracted procedure
 11886  1B70  25DA  3199         	fcall	___flge
 11887  1B72  1803               	btfsc	3,0
 11888  1B73  2BCC               	goto	l18744
 11889  1B74                     l18712:	
 11890                           ;PID.c: 41: }
 11891                           
 11892                           ;PID.c: 39: {
 11893                           ;PID.c: 40: Error=0;
 11894                           
 11895                           
 11896                           ;PID.c: 42: else if(Error>=4)
 11897  1B74  0021               	movlb	1	; select bank1
 11898  1B75  26F4  3199         	fcall	PL12	;call to abstracted procedure
 11899  1B77  3040               	movlw	64
 11900  1B78  27B5  3199         	fcall	PL222	;call to abstracted procedure
 11901  1B7A  25DA  3199         	fcall	___flge
 11902  1B7C  1803               	btfsc	3,0
 11903  1B7D  2BB0               	goto	l18736
 11904                           
 11905                           ;PID.c: 46: else if(Error<=-4)
 11906                           
 11907                           ;PID.c: 45: }
 11908                           
 11909                           ;PID.c: 43: {
 11910                           ;PID.c: 44: dk=200.0;
 11911  1B7E  30C0               	movlw	192
 11912  1B7F  00DD               	movwf	___flge@ff1+3
 11913  1B80  3080               	movlw	128
 11914  1B81  00DC               	movwf	___flge@ff1+2
 11915  1B82  26E1  3199         	fcall	PL8	;call to abstracted procedure
 11916  1B84  25DA  3199         	fcall	___flge
 11917  1B86  1C03               	btfss	3,0
 11918  1B87  2BEB               	goto	l18752
 11919  1B88  2BB0               	goto	l18736
 11920  1B89                     l18720:	
 11921                           ;PID.c: 49: }
 11922                           ;PID.c: 50: }
 11923                           
 11924                           ;PID.c: 47: {
 11925                           ;PID.c: 48: dk=200.0;
 11926                           
 11927                           
 11928                           ;PID.c: 51: else
 11929                           ;PID.c: 52: {
 11930                           ;PID.c: 53: if(pid_index==0x01)
 11931  1B89  0022               	movlb	2	; select bank2
 11932  1B8A  0B40               	decfsz	_pid_index^(0+256),w
 11933  1B8B  2BB5               	goto	l18738
 11934                           
 11935                           ;PID.c: 54: {
 11936                           ;PID.c: 55: if((Error<=1)&&(Error>=-1))
 11937  1B8C  303F               	movlw	63
 11938  1B8D  2748  3199         	fcall	PL80	;call to abstracted procedure
 11939  1B8F  26E1  3199         	fcall	PL8	;call to abstracted procedure
 11940  1B91  25DA  3199         	fcall	___flge
 11941  1B93  1C03               	btfss	3,0
 11942  1B94  2B9F               	goto	l18728
 11943  1B95  0021               	movlb	1	; select bank1
 11944  1B96  26F4  3199         	fcall	PL12	;call to abstracted procedure
 11945  1B98  30BF               	movlw	191
 11946  1B99  27B5  3199         	fcall	PL222	;call to abstracted procedure
 11947  1B9B  25DA  3199         	fcall	___flge
 11948  1B9D  1803               	btfsc	3,0
 11949  1B9E  2BCC               	goto	l18744
 11950  1B9F                     l18728:	
 11951                           ;PID.c: 58: }
 11952                           
 11953                           ;PID.c: 56: {
 11954                           ;PID.c: 57: Error=0;
 11955                           
 11956                           
 11957                           ;PID.c: 59: else if(Error>=3)
 11958  1B9F  0021               	movlb	1	; select bank1
 11959  1BA0  26F4  3199         	fcall	PL12	;call to abstracted procedure
 11960  1BA2  27D2  3199         	fcall	PL244	;call to abstracted procedure
 11961  1BA4  25DA  3199         	fcall	___flge
 11962  1BA6  1803               	btfsc	3,0
 11963  1BA7  2BB0               	goto	l18736
 11964                           
 11965                           ;PID.c: 63: else if(Error<=-3)
 11966                           
 11967                           ;PID.c: 62: }
 11968                           
 11969                           ;PID.c: 60: {
 11970                           ;PID.c: 61: dk=200.0;
 11971  1BA8  30C0               	movlw	192
 11972  1BA9  00DD               	movwf	___flge@ff1+3
 11973  1BAA  3040               	movlw	64
 11974  1BAB  00DC               	movwf	___flge@ff1+2
 11975  1BAC  26E1  3199         	fcall	PL8	;call to abstracted procedure
 11976  1BAE  25DA  3199         	fcall	___flge
 11977  1BB0                     l18736:	
 11978                           ;PID.c: 66: }
 11979                           
 11980                           ;PID.c: 64: {
 11981                           ;PID.c: 65: dk=200.0;
 11982                           
 11983                           
 11984                           ;PID.c: 67: else
 11985                           ;PID.c: 68: {
 11986                           ;PID.c: 69: dk=200.0;
 11987  1BB0  3043               	movlw	67
 11988  1BB1  0021               	movlb	1	; select bank1
 11989  1BB2  00B7               	movwf	(pid_calc@dk+3)^(0+128)
 11990  1BB3  3048               	movlw	72
 11991  1BB4  2BE8               	goto	L52
 11992  1BB5                     l18738:	
 11993                           
 11994                           ;PID.c: 72: else if(pid_index==0x02)
 11995  1BB5  0840               	movf	_pid_index^(0+256),w
 11996  1BB6  3A02               	xorlw	2
 11997  1BB7  1D03               	skipz
 11998  1BB8  2BEB               	goto	l18752
 11999                           
 12000                           ;PID.c: 73: {
 12001                           ;PID.c: 74: if((Error<=1)&&(Error>=-1))
 12002  1BB9  303F               	movlw	63
 12003  1BBA  2748  3199         	fcall	PL80	;call to abstracted procedure
 12004  1BBC  26E1  3199         	fcall	PL8	;call to abstracted procedure
 12005  1BBE  25DA  3199         	fcall	___flge
 12006  1BC0  1C03               	btfss	3,0
 12007  1BC1  2BD2               	goto	l18746
 12008  1BC2  0021               	movlb	1	; select bank1
 12009  1BC3  26F4  3199         	fcall	PL12	;call to abstracted procedure
 12010  1BC5  30BF               	movlw	191
 12011  1BC6  27B5  3199         	fcall	PL222	;call to abstracted procedure
 12012  1BC8  25DA  3199         	fcall	___flge
 12013  1BCA  1C03               	btfss	3,0
 12014  1BCB  2BD2               	goto	l18746
 12015  1BCC                     l18744:	
 12016                           
 12017                           ;PID.c: 75: {
 12018                           ;PID.c: 76: Error=0;
 12019  1BCC  0021               	movlb	1	; select bank1
 12020  1BCD  01BC               	clrf	pid_calc@Error^(0+128)
 12021  1BCE  01BD               	clrf	(pid_calc@Error+1)^(0+128)
 12022  1BCF  01BE               	clrf	(pid_calc@Error+2)^(0+128)
 12023  1BD0  01BF               	clrf	(pid_calc@Error+3)^(0+128)
 12024                           
 12025                           ;PID.c: 77: }
 12026  1BD1  2BEB               	goto	l18752
 12027  1BD2                     l18746:	
 12028                           
 12029                           ;PID.c: 78: else if((Error>=2)||(Error<=-2))
 12030  1BD2  0021               	movlb	1	; select bank1
 12031  1BD3  26F4  3199         	fcall	PL12	;call to abstracted procedure
 12032  1BD5  27BB  3199         	fcall	PL228	;call to abstracted procedure
 12033  1BD7  25DA  3199         	fcall	___flge
 12034  1BD9  1803               	btfsc	3,0
 12035  1BDA  2BE4               	goto	l18750
 12036  1BDB  30C0               	movlw	192
 12037  1BDC  00DD               	movwf	___flge@ff1+3
 12038  1BDD  01DC               	clrf	___flge@ff1+2
 12039  1BDE  26E1  3199         	fcall	PL8	;call to abstracted procedure
 12040  1BE0  25DA  3199         	fcall	___flge
 12041  1BE2  1C03               	btfss	3,0
 12042  1BE3  2BEB               	goto	l18752
 12043  1BE4                     l18750:	
 12044                           
 12045                           ;PID.c: 79: {
 12046                           ;PID.c: 80: dk=100.0;
 12047  1BE4  3042               	movlw	66
 12048  1BE5  0021               	movlb	1	; select bank1
 12049  1BE6  00B7               	movwf	(pid_calc@dk+3)^(0+128)
 12050  1BE7  30C8               	movlw	200
 12051  1BE8                     L52:	
 12052  1BE8  00B6               	movwf	(pid_calc@dk+2)^(0+128)
 12053  1BE9  01B5               	clrf	(pid_calc@dk+1)^(0+128)
 12054  1BEA  01B4               	clrf	pid_calc@dk^(0+128)
 12055  1BEB                     l18752:	
 12056                           
 12057                           ;PID.c: 81: }
 12058                           ;PID.c: 82: }
 12059                           ;PID.c: 84: }
 12060                           ;PID.c: 87: pp->SumError += Error;
 12061  1BEB  0021               	movlb	1	; select bank1
 12062  1BEC  083F               	movf	(pid_calc@Error+3)^(0+128),w
 12063  1BED  0020               	movlb	0	; select bank0
 12064  1BEE  00CA               	movwf	___fladd@f1+3
 12065  1BEF  0021               	movlb	1	; select bank1
 12066  1BF0  083E               	movf	(pid_calc@Error+2)^(0+128),w
 12067  1BF1  0020               	movlb	0	; select bank0
 12068  1BF2  00C9               	movwf	___fladd@f1+2
 12069  1BF3  0021               	movlb	1	; select bank1
 12070  1BF4  083D               	movf	(pid_calc@Error+1)^(0+128),w
 12071  1BF5  0020               	movlb	0	; select bank0
 12072  1BF6  00C8               	movwf	___fladd@f1+1
 12073  1BF7  0021               	movlb	1	; select bank1
 12074  1BF8  083C               	movf	pid_calc@Error^(0+128),w
 12075  1BF9  0020               	movlb	0	; select bank0
 12076  1BFA  00C7               	movwf	___fladd@f1
 12077  1BFB  274D  3199         	fcall	PL110	;call to abstracted procedure
 12078  1BFD  3158               	addfsr 1,24
 12079  1BFE  3F40               	moviw [0]fsr1
 12080  1BFF  0020               	movlb	0	; select bank0
 12081  1C00  00CB               	movwf	___fladd@f2
 12082  1C01  3F41               	moviw [1]fsr1
 12083  1C02  00CC               	movwf	___fladd@f2+1
 12084  1C03  3F42               	moviw [2]fsr1
 12085  1C04  00CD               	movwf	___fladd@f2+2
 12086  1C05  3F43               	moviw [3]fsr1
 12087  1C06  00CE               	movwf	___fladd@f2+3
 12088  1C07  261A  3199         	fcall	___fladd
 12089  1C09  274D  3199         	fcall	PL110	;call to abstracted procedure
 12090  1C0B  3158               	addfsr 1,24
 12091  1C0C  0020               	movlb	0	; select bank0
 12092  1C0D  0847               	movf	?___fladd,w
 12093  1C0E  3FC0               	movwi [0]fsr1
 12094  1C0F  0848               	movf	?___fladd+1,w
 12095  1C10  3FC1               	movwi [1]fsr1
 12096  1C11  0849               	movf	?___fladd+2,w
 12097  1C12  3FC2               	movwi [2]fsr1
 12098  1C13  084A               	movf	?___fladd+3,w
 12099  1C14  3FC3               	movwi [3]fsr1
 12100                           
 12101                           ;PID.c: 91: if((pp->SumError)>=2) pp->SumError= 2;
 12102  1C15  274D  3199         	fcall	PL110	;call to abstracted procedure
 12103  1C17  3158               	addfsr 1,24
 12104  1C18  3F40               	moviw [0]fsr1
 12105  1C19  0020               	movlb	0	; select bank0
 12106  1C1A  00DA               	movwf	___flge@ff1
 12107  1C1B  3F41               	moviw [1]fsr1
 12108  1C1C  00DB               	movwf	___flge@ff1+1
 12109  1C1D  3F42               	moviw [2]fsr1
 12110  1C1E  00DC               	movwf	___flge@ff1+2
 12111  1C1F  3F43               	moviw [3]fsr1
 12112  1C20  00DD               	movwf	___flge@ff1+3
 12113  1C21  27BB  3199         	fcall	PL228	;call to abstracted procedure
 12114  1C23  25DA  3199         	fcall	___flge
 12115  1C25  1C03               	btfss	3,0
 12116  1C26  2C2D               	goto	l18758
 12117  1C27  0021               	movlb	1	; select bank1
 12118  1C28  2799  3199         	fcall	PL188	;call to abstracted procedure
 12119  1C2A  3040               	movlw	64
 12120  1C2B  3FC3               	movwi [3]fsr1
 12121  1C2C  2C47               	goto	l18762
 12122  1C2D                     l18758:	
 12123                           
 12124                           ;PID.c: 92: else if((pp->SumError)<=-2) pp->SumError= -2;
 12125  1C2D  30C0               	movlw	192
 12126  1C2E  00DD               	movwf	___flge@ff1+3
 12127  1C2F  01DC               	clrf	___flge@ff1+2
 12128  1C30  01DB               	clrf	___flge@ff1+1
 12129  1C31  01DA               	clrf	___flge@ff1
 12130  1C32  274D  3199         	fcall	PL110	;call to abstracted procedure
 12131  1C34  3158               	addfsr 1,24
 12132  1C35  3F40               	moviw [0]fsr1
 12133  1C36  0020               	movlb	0	; select bank0
 12134  1C37  00DE               	movwf	___flge@ff2
 12135  1C38  3F41               	moviw [1]fsr1
 12136  1C39  00DF               	movwf	___flge@ff2+1
 12137  1C3A  3F42               	moviw [2]fsr1
 12138  1C3B  00E0               	movwf	___flge@ff2+2
 12139  1C3C  3F43               	moviw [3]fsr1
 12140  1C3D  00E1               	movwf	___flge@ff2+3
 12141  1C3E  25DA  3199         	fcall	___flge
 12142  1C40  1C03               	btfss	3,0
 12143  1C41  2C47               	goto	l18762
 12144  1C42  0021               	movlb	1	; select bank1
 12145  1C43  2799  3199         	fcall	PL188	;call to abstracted procedure
 12146  1C45  30C0               	movlw	192
 12147  1C46  3FC3               	movwi [3]fsr1
 12148  1C47                     l18762:	
 12149                           
 12150                           ;PID.c: 94: dError = pp->LastError - pp->PrevError;
 12151  1C47  274D  3199         	fcall	PL110	;call to abstracted procedure
 12152  1C49  3154               	addfsr 1,20
 12153  1C4A  3F40               	moviw [0]fsr1
 12154  1C4B  0020               	movlb	0	; select bank0
 12155  1C4C  00D6               	movwf	___flsub@f2
 12156  1C4D  3F41               	moviw [1]fsr1
 12157  1C4E  00D7               	movwf	___flsub@f2+1
 12158  1C4F  3F42               	moviw [2]fsr1
 12159  1C50  00D8               	movwf	___flsub@f2+2
 12160  1C51  3F43               	moviw [3]fsr1
 12161  1C52  00D9               	movwf	___flsub@f2+3
 12162  1C53  274D  3199         	fcall	PL110	;call to abstracted procedure
 12163  1C55  3150               	addfsr 1,16
 12164  1C56  2785  3199         	fcall	PL184	;call to abstracted procedure
 12165  1C58  27E4  3199         	fcall	___flsub
 12166  1C5A  0859               	movf	?___flsub+3,w
 12167  1C5B  0021               	movlb	1	; select bank1
 12168  1C5C  00AB               	movwf	(pid_calc@dError+3)^(0+128)
 12169  1C5D  0020               	movlb	0	; select bank0
 12170  1C5E  0858               	movf	?___flsub+2,w
 12171  1C5F  0021               	movlb	1	; select bank1
 12172  1C60  00AA               	movwf	(pid_calc@dError+2)^(0+128)
 12173  1C61  0020               	movlb	0	; select bank0
 12174  1C62  0857               	movf	?___flsub+1,w
 12175  1C63  0021               	movlb	1	; select bank1
 12176  1C64  00A9               	movwf	(pid_calc@dError+1)^(0+128)
 12177  1C65  0020               	movlb	0	; select bank0
 12178  1C66  0856               	movf	?___flsub,w
 12179  1C67  0021               	movlb	1	; select bank1
 12180  1C68  00A8               	movwf	pid_calc@dError^(0+128)
 12181                           
 12182                           ;PID.c: 96: pp->PrevError = pp->LastError;
 12183  1C69  27C1  3199         	fcall	PL230	;call to abstracted procedure
 12184  1C6B  3F40               	moviw [0]fsr1
 12185  1C6C  00A4               	movwf	??_pid_calc^(0+128)
 12186  1C6D  3F41               	moviw [1]fsr1
 12187  1C6E  00A5               	movwf	(??_pid_calc^(0+128)+1)
 12188  1C6F  3F42               	moviw [2]fsr1
 12189  1C70  00A6               	movwf	(??_pid_calc^(0+128)+2)
 12190  1C71  3F43               	moviw [3]fsr1
 12191  1C72  00A7               	movwf	(??_pid_calc^(0+128)+3)
 12192  1C73  0820               	movf	pid_calc@pp^(0+128),w
 12193  1C74  0086               	movwf	6
 12194  1C75  0821               	movf	(pid_calc@pp+1)^(0+128),w
 12195  1C76  0087               	movwf	7
 12196  1C77  3154               	addfsr 1,20
 12197  1C78  0824               	movf	??_pid_calc^(0+128),w
 12198  1C79  3FC0               	movwi [0]fsr1
 12199  1C7A  0825               	movf	(??_pid_calc+1)^(0+128),w
 12200  1C7B  3FC1               	movwi [1]fsr1
 12201  1C7C  0826               	movf	(??_pid_calc+2)^(0+128),w
 12202  1C7D  3FC2               	movwi [2]fsr1
 12203  1C7E  0827               	movf	(??_pid_calc+3)^(0+128),w
 12204  1C7F  3FC3               	movwi [3]fsr1
 12205                           
 12206                           ;PID.c: 98: pp->LastError = Error;
 12207  1C80  27C1  3199         	fcall	PL230	;call to abstracted procedure
 12208  1C82  083C               	movf	pid_calc@Error^(0+128),w
 12209  1C83  3FC0               	movwi [0]fsr1
 12210  1C84  083D               	movf	(pid_calc@Error+1)^(0+128),w
 12211  1C85  3FC1               	movwi [1]fsr1
 12212  1C86  083E               	movf	(pid_calc@Error+2)^(0+128),w
 12213  1C87  3FC2               	movwi [2]fsr1
 12214  1C88  083F               	movf	(pid_calc@Error+3)^(0+128),w
 12215  1C89  3FC3               	movwi [3]fsr1
 12216                           
 12217                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 12218  1C8A  0020               	movlb	0	; select bank0
 12219  1C8B  00B7               	movwf	___flmul@f1+3
 12220  1C8C  0021               	movlb	1	; select bank1
 12221  1C8D  083E               	movf	(pid_calc@Error+2)^(0+128),w
 12222  1C8E  0020               	movlb	0	; select bank0
 12223  1C8F  00B6               	movwf	___flmul@f1+2
 12224  1C90  0021               	movlb	1	; select bank1
 12225  1C91  083D               	movf	(pid_calc@Error+1)^(0+128),w
 12226  1C92  0020               	movlb	0	; select bank0
 12227  1C93  00B5               	movwf	___flmul@f1+1
 12228  1C94  0021               	movlb	1	; select bank1
 12229  1C95  083C               	movf	pid_calc@Error^(0+128),w
 12230  1C96  0020               	movlb	0	; select bank0
 12231  1C97  00B4               	movwf	___flmul@f1
 12232  1C98  274D  3199         	fcall	PL110	;call to abstracted procedure
 12233  1C9A  3144               	addfsr 1,4
 12234  1C9B  2763               	fcall	PL140	;call to abstracted procedure
 12235  1C9C  31A2  22FC  3199   	fcall	___flmul
 12236  1C9F  0837               	movf	?___flmul+3,w
 12237  1CA0  0021               	movlb	1	; select bank1
 12238  1CA1  00AF               	movwf	(_pid_calc$2870+3)^(0+128)
 12239  1CA2  0020               	movlb	0	; select bank0
 12240  1CA3  0836               	movf	?___flmul+2,w
 12241  1CA4  0021               	movlb	1	; select bank1
 12242  1CA5  00AE               	movwf	(_pid_calc$2870+2)^(0+128)
 12243  1CA6  0020               	movlb	0	; select bank0
 12244  1CA7  0835               	movf	?___flmul+1,w
 12245  1CA8  0021               	movlb	1	; select bank1
 12246  1CA9  00AD               	movwf	(_pid_calc$2870+1)^(0+128)
 12247  1CAA  0020               	movlb	0	; select bank0
 12248  1CAB  0834               	movf	?___flmul,w
 12249  1CAC  0021               	movlb	1	; select bank1
 12250  1CAD  00AC               	movwf	_pid_calc$2870^(0+128)
 12251                           
 12252                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 12253  1CAE  0820               	movf	pid_calc@pp^(0+128),w
 12254  1CAF  0086               	movwf	6
 12255  1CB0  0821               	movf	(pid_calc@pp+1)^(0+128),w
 12256  1CB1  0087               	movwf	7
 12257  1CB2  3158               	addfsr 1,24
 12258  1CB3  3F40               	moviw [0]fsr1
 12259  1CB4  0020               	movlb	0	; select bank0
 12260  1CB5  00B4               	movwf	___flmul@f1
 12261  1CB6  3F41               	moviw [1]fsr1
 12262  1CB7  00B5               	movwf	___flmul@f1+1
 12263  1CB8  3F42               	moviw [2]fsr1
 12264  1CB9  00B6               	movwf	___flmul@f1+2
 12265  1CBA  3F43               	moviw [3]fsr1
 12266  1CBB  00B7               	movwf	___flmul@f1+3
 12267  1CBC  274D  3199         	fcall	PL110	;call to abstracted procedure
 12268  1CBE  3148               	addfsr 1,8
 12269  1CBF  2763               	fcall	PL140	;call to abstracted procedure
 12270  1CC0  31A2  22FC  3199   	fcall	___flmul
 12271  1CC3  278F               	fcall	PL186	;call to abstracted procedure
 12272  1CC4  0837               	movf	(pid_calc@dk+3)^(0+128),w
 12273  1CC5  0020               	movlb	0	; select bank0
 12274  1CC6  00B7               	movwf	___flmul@f1+3
 12275  1CC7  0021               	movlb	1	; select bank1
 12276  1CC8  0836               	movf	(pid_calc@dk+2)^(0+128),w
 12277  1CC9  0020               	movlb	0	; select bank0
 12278  1CCA  00B6               	movwf	___flmul@f1+2
 12279  1CCB  0021               	movlb	1	; select bank1
 12280  1CCC  0835               	movf	(pid_calc@dk+1)^(0+128),w
 12281  1CCD  0020               	movlb	0	; select bank0
 12282  1CCE  00B5               	movwf	___flmul@f1+1
 12283  1CCF  0021               	movlb	1	; select bank1
 12284  1CD0  0834               	movf	pid_calc@dk^(0+128),w
 12285  1CD1  0020               	movlb	0	; select bank0
 12286  1CD2  00B4               	movwf	___flmul@f1
 12287  1CD3  0021               	movlb	1	; select bank1
 12288  1CD4  082F               	movf	(_pid_calc$2870+3)^(0+128),w
 12289  1CD5  0020               	movlb	0	; select bank0
 12290  1CD6  00BB               	movwf	___flmul@f2+3
 12291  1CD7  0021               	movlb	1	; select bank1
 12292  1CD8  082E               	movf	(_pid_calc$2870+2)^(0+128),w
 12293  1CD9  0020               	movlb	0	; select bank0
 12294  1CDA  00BA               	movwf	___flmul@f2+2
 12295  1CDB  0021               	movlb	1	; select bank1
 12296  1CDC  082D               	movf	(_pid_calc$2870+1)^(0+128),w
 12297  1CDD  0020               	movlb	0	; select bank0
 12298  1CDE  00B9               	movwf	___flmul@f2+1
 12299  1CDF  0021               	movlb	1	; select bank1
 12300  1CE0  082C               	movf	_pid_calc$2870^(0+128),w
 12301  1CE1  0020               	movlb	0	; select bank0
 12302  1CE2  00B8               	movwf	___flmul@f2
 12303  1CE3  31A2  22FC  3199   	fcall	___flmul
 12304  1CE6  0837               	movf	?___flmul+3,w
 12305  1CE7  00CE               	movwf	___fladd@f2+3
 12306  1CE8  0836               	movf	?___flmul+2,w
 12307  1CE9  00CD               	movwf	___fladd@f2+2
 12308  1CEA  0835               	movf	?___flmul+1,w
 12309  1CEB  00CC               	movwf	___fladd@f2+1
 12310  1CEC  0834               	movf	?___flmul,w
 12311  1CED  00CB               	movwf	___fladd@f2
 12312  1CEE  261A  3199         	fcall	___fladd
 12313  1CF0  084A               	movf	?___fladd+3,w
 12314  1CF1  0021               	movlb	1	; select bank1
 12315  1CF2  00B3               	movwf	(_pid_calc$2871+3)^(0+128)
 12316  1CF3  0020               	movlb	0	; select bank0
 12317  1CF4  0849               	movf	?___fladd+2,w
 12318  1CF5  0021               	movlb	1	; select bank1
 12319  1CF6  00B2               	movwf	(_pid_calc$2871+2)^(0+128)
 12320  1CF7  0020               	movlb	0	; select bank0
 12321  1CF8  0848               	movf	?___fladd+1,w
 12322  1CF9  0021               	movlb	1	; select bank1
 12323  1CFA  00B1               	movwf	(_pid_calc$2871+1)^(0+128)
 12324  1CFB  0020               	movlb	0	; select bank0
 12325  1CFC  0847               	movf	?___fladd,w
 12326  1CFD  0021               	movlb	1	; select bank1
 12327  1CFE  00B0               	movwf	_pid_calc$2871^(0+128)
 12328                           
 12329                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 12330  1CFF  082B               	movf	(pid_calc@dError+3)^(0+128),w
 12331  1D00  0020               	movlb	0	; select bank0
 12332  1D01  00B7               	movwf	___flmul@f1+3
 12333  1D02  0021               	movlb	1	; select bank1
 12334  1D03  082A               	movf	(pid_calc@dError+2)^(0+128),w
 12335  1D04  0020               	movlb	0	; select bank0
 12336  1D05  00B6               	movwf	___flmul@f1+2
 12337  1D06  0021               	movlb	1	; select bank1
 12338  1D07  0829               	movf	(pid_calc@dError+1)^(0+128),w
 12339  1D08  0020               	movlb	0	; select bank0
 12340  1D09  00B5               	movwf	___flmul@f1+1
 12341  1D0A  0021               	movlb	1	; select bank1
 12342  1D0B  0828               	movf	pid_calc@dError^(0+128),w
 12343  1D0C  0020               	movlb	0	; select bank0
 12344  1D0D  00B4               	movwf	___flmul@f1
 12345  1D0E  274D  3199         	fcall	PL110	;call to abstracted procedure
 12346  1D10  314C               	addfsr 1,12
 12347  1D11  2763               	fcall	PL140	;call to abstracted procedure
 12348  1D12  31A2  22FC  3199   	fcall	___flmul
 12349  1D15  278F  3199         	fcall	PL186	;call to abstracted procedure
 12350  1D17  0833               	movf	(_pid_calc$2871+3)^(0+128),w
 12351  1D18  0020               	movlb	0	; select bank0
 12352  1D19  00CE               	movwf	___fladd@f2+3
 12353  1D1A  0021               	movlb	1	; select bank1
 12354  1D1B  0832               	movf	(_pid_calc$2871+2)^(0+128),w
 12355  1D1C  0020               	movlb	0	; select bank0
 12356  1D1D  00CD               	movwf	___fladd@f2+2
 12357  1D1E  0021               	movlb	1	; select bank1
 12358  1D1F  0831               	movf	(_pid_calc$2871+1)^(0+128),w
 12359  1D20  0020               	movlb	0	; select bank0
 12360  1D21  00CC               	movwf	___fladd@f2+1
 12361  1D22  0021               	movlb	1	; select bank1
 12362  1D23  0830               	movf	_pid_calc$2871^(0+128),w
 12363  1D24  0020               	movlb	0	; select bank0
 12364  1D25  00CB               	movwf	___fladd@f2
 12365  1D26  261A  3199         	fcall	___fladd
 12366  1D28  084A               	movf	?___fladd+3,w
 12367  1D29  0021               	movlb	1	; select bank1
 12368  1D2A  00BB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 12369  1D2B  0020               	movlb	0	; select bank0
 12370  1D2C  0849               	movf	?___fladd+2,w
 12371  1D2D  0021               	movlb	1	; select bank1
 12372  1D2E  00BA               	movwf	(pid_calc@PWM_var+2)^(0+128)
 12373  1D2F  0020               	movlb	0	; select bank0
 12374  1D30  0848               	movf	?___fladd+1,w
 12375  1D31  0021               	movlb	1	; select bank1
 12376  1D32  00B9               	movwf	(pid_calc@PWM_var+1)^(0+128)
 12377  1D33  0020               	movlb	0	; select bank0
 12378  1D34  0847               	movf	?___fladd,w
 12379  1D35  0021               	movlb	1	; select bank1
 12380  1D36  00B8               	movwf	pid_calc@PWM_var^(0+128)
 12381                           
 12382                           ;PID.c: 103: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
 12383  1D37  26F4  3199         	fcall	PL12	;call to abstracted procedure
 12384  1D39  27D2  3199         	fcall	PL244	;call to abstracted procedure
 12385  1D3B  25DA  3199         	fcall	___flge
 12386  1D3D  1C03               	btfss	3,0
 12387  1D3E  2D49               	goto	l18778
 12388  1D3F  3040               	movlw	64
 12389  1D40  00DD               	movwf	___flge@ff1+3
 12390  1D41  30A0               	movlw	160
 12391  1D42  00DC               	movwf	___flge@ff1+2
 12392  1D43  26E1  3199         	fcall	PL8	;call to abstracted procedure
 12393  1D45  25DA  3199         	fcall	___flge
 12394  1D47  1803               	btfsc	3,0
 12395  1D48  2D5D               	goto	l18782
 12396  1D49                     l18778:	
 12397  1D49  30C0               	movlw	192
 12398  1D4A  00DD               	movwf	___flge@ff1+3
 12399  1D4B  3040               	movlw	64
 12400  1D4C  00DC               	movwf	___flge@ff1+2
 12401  1D4D  26E1  3199         	fcall	PL8	;call to abstracted procedure
 12402  1D4F  25DA  3199         	fcall	___flge
 12403  1D51  1C03               	btfss	3,0
 12404  1D52  2D69               	goto	l18790
 12405  1D53  0021               	movlb	1	; select bank1
 12406  1D54  26F4  3199         	fcall	PL12	;call to abstracted procedure
 12407  1D56  30C0               	movlw	192
 12408  1D57  27C7  3199         	fcall	PL232	;call to abstracted procedure
 12409  1D59  25DA  3199         	fcall	___flge
 12410  1D5B  1C03               	btfss	3,0
 12411  1D5C  2D69               	goto	l18790
 12412  1D5D                     l18782:	
 12413                           
 12414                           ;PID.c: 104: {
 12415                           ;PID.c: 105: if(PWM_var>=2)PWM_var = 2;
 12416  1D5D  0021               	movlb	1	; select bank1
 12417  1D5E  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 12418  1D5F  2715  3199         	fcall	PL50	;call to abstracted procedure
 12419  1D61  27BB  3199         	fcall	PL228	;call to abstracted procedure
 12420  1D63  25DA  3199         	fcall	___flge
 12421  1D65  1803               	btfsc	3,0
 12422  1D66  2DA8               	goto	L56
 12423                           
 12424                           ;PID.c: 106: else if(PWM_var <= -2)PWM_var = -2;
 12425  1D67  30C0               	movlw	192
 12426  1D68  2DAB               	goto	L58
 12427  1D69                     l18790:	
 12428                           
 12429                           ;PID.c: 108: else if((Error>5)||(Error<-5))
 12430  1D69  3040               	movlw	64
 12431  1D6A  00DD               	movwf	___flge@ff1+3
 12432  1D6B  30A0               	movlw	160
 12433  1D6C  00DC               	movwf	___flge@ff1+2
 12434  1D6D  26E1  3199         	fcall	PL8	;call to abstracted procedure
 12435  1D6F  25DA  3199         	fcall	___flge
 12436  1D71  1C03               	btfss	3,0
 12437  1D72  2D7D               	goto	l18794
 12438  1D73  0021               	movlb	1	; select bank1
 12439  1D74  26F4  3199         	fcall	PL12	;call to abstracted procedure
 12440  1D76  30C0               	movlw	192
 12441  1D77  27C7  3199         	fcall	PL232	;call to abstracted procedure
 12442  1D79  25DA  3199         	fcall	___flge
 12443  1D7B  1803               	btfsc	3,0
 12444  1D7C  2D9A               	goto	l18802
 12445  1D7D                     l18794:	
 12446                           
 12447                           ;PID.c: 109: {
 12448                           ;PID.c: 110: if(PWM_var>=5)PWM_var = 5;
 12449  1D7D  0021               	movlb	1	; select bank1
 12450  1D7E  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 12451  1D7F  2715  3199         	fcall	PL50	;call to abstracted procedure
 12452  1D81  3040               	movlw	64
 12453  1D82  27C7  3199         	fcall	PL232	;call to abstracted procedure
 12454  1D84  25DA  3199         	fcall	___flge
 12455  1D86  1C03               	btfss	3,0
 12456  1D87  2D8A               	goto	l18798
 12457  1D88  3040               	movlw	64
 12458  1D89  2D95               	goto	L55
 12459  1D8A                     l18798:	
 12460                           
 12461                           ;PID.c: 111: else if(PWM_var <= -5)PWM_var = -5;
 12462  1D8A  30C0               	movlw	192
 12463  1D8B  00DD               	movwf	___flge@ff1+3
 12464  1D8C  30A0               	movlw	160
 12465  1D8D  00DC               	movwf	___flge@ff1+2
 12466  1D8E  2724  3199         	fcall	PL52	;call to abstracted procedure
 12467  1D90  25DA  3199         	fcall	___flge
 12468  1D92  1C03               	btfss	3,0
 12469  1D93  2DD0               	goto	l885
 12470  1D94  30C0               	movlw	192
 12471  1D95                     L55:	
 12472  1D95  0021               	movlb	1	; select bank1
 12473  1D96  00BB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 12474  1D97  30A0               	movlw	160
 12475  1D98  00BA               	movwf	(pid_calc@PWM_var+2)^(0+128)
 12476  1D99  2DCE               	goto	L54
 12477  1D9A                     l18802:	
 12478                           
 12479                           ;PID.c: 113: else
 12480                           ;PID.c: 114: {
 12481                           ;PID.c: 115: if(have_person1_flag)
 12482  1D9A  0021               	movlb	1	; select bank1
 12483  1D9B  0855               	movf	_have_person1_flag^(0+128),w
 12484  1D9C  1903               	btfsc	3,2
 12485  1D9D  2DB5               	goto	l18812
 12486                           
 12487                           ;PID.c: 116: {
 12488                           ;PID.c: 117: if(PWM_var>=0.5)PWM_var = 2;
 12489  1D9E  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 12490  1D9F  2715  3199         	fcall	PL50	;call to abstracted procedure
 12491  1DA1  303F               	movlw	63
 12492  1DA2  27CD  3199         	fcall	PL236	;call to abstracted procedure
 12493  1DA4  25DA  3199         	fcall	___flge
 12494  1DA6  1C03               	btfss	3,0
 12495  1DA7  2DAA               	goto	l18808
 12496  1DA8                     L56:	
 12497  1DA8  3040               	movlw	64
 12498  1DA9  2DCB               	goto	L53
 12499  1DAA                     l18808:	
 12500                           
 12501                           ;PID.c: 118: else if(PWM_var <= -0.5)PWM_var = -2;
 12502  1DAA  30BF               	movlw	191
 12503  1DAB                     L58:	
 12504  1DAB  00DD               	movwf	___flge@ff1+3
 12505  1DAC  01DC               	clrf	___flge@ff1+2
 12506  1DAD  2724  3199         	fcall	PL52	;call to abstracted procedure
 12507  1DAF  25DA  3199         	fcall	___flge
 12508  1DB1  1C03               	btfss	3,0
 12509  1DB2  2DD0               	goto	l885
 12510  1DB3  30C0               	movlw	192
 12511  1DB4  2DCB               	goto	L53
 12512  1DB5                     l18812:	
 12513                           
 12514                           ;PID.c: 120: else
 12515                           ;PID.c: 121: {
 12516                           ;PID.c: 122: if(PWM_var>=0.5)PWM_var = 0.5;
 12517  1DB5  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 12518  1DB6  2715  3199         	fcall	PL50	;call to abstracted procedure
 12519  1DB8  303F               	movlw	63
 12520  1DB9  27CD  3199         	fcall	PL236	;call to abstracted procedure
 12521  1DBB  25DA  3199         	fcall	___flge
 12522  1DBD  1C03               	btfss	3,0
 12523  1DBE  2DC1               	goto	l18816
 12524  1DBF  303F               	movlw	63
 12525  1DC0  2DCB               	goto	L53
 12526  1DC1                     l18816:	
 12527                           
 12528                           ;PID.c: 123: else if(PWM_var <= -0.5)PWM_var = -0.5;
 12529  1DC1  30BF               	movlw	191
 12530  1DC2  00DD               	movwf	___flge@ff1+3
 12531  1DC3  01DC               	clrf	___flge@ff1+2
 12532  1DC4  2724  3199         	fcall	PL52	;call to abstracted procedure
 12533  1DC6  25DA  3199         	fcall	___flge
 12534  1DC8  1C03               	btfss	3,0
 12535  1DC9  2DD0               	goto	l885
 12536  1DCA  30BF               	movlw	191
 12537  1DCB                     L53:	
 12538  1DCB  0021               	movlb	1	; select bank1
 12539  1DCC  00BB               	movwf	(pid_calc@PWM_var+3)^(0+128)
 12540  1DCD  01BA               	clrf	(pid_calc@PWM_var+2)^(0+128)
 12541  1DCE                     L54:	
 12542  1DCE  01B9               	clrf	(pid_calc@PWM_var+1)^(0+128)
 12543  1DCF  01B8               	clrf	pid_calc@PWM_var^(0+128)
 12544  1DD0                     l885:	
 12545                           
 12546                           ;PID.c: 124: }
 12547                           ;PID.c: 126: }
 12548                           ;PID.c: 129: return (PWM_var );
 12549  1DD0  0021               	movlb	1	; select bank1
 12550  1DD1  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 12551  1DD2  00A3               	movwf	(?_pid_calc+3)^(0+128)
 12552  1DD3  083A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 12553  1DD4  00A2               	movwf	(?_pid_calc+2)^(0+128)
 12554  1DD5  0839               	movf	(pid_calc@PWM_var+1)^(0+128),w
 12555  1DD6  00A1               	movwf	(?_pid_calc+1)^(0+128)
 12556  1DD7  0838               	movf	pid_calc@PWM_var^(0+128),w
 12557  1DD8  00A0               	movwf	?_pid_calc^(0+128)
 12558  1DD9  0008               	return
 12559  1DDA                     __end_of_pid_calc:	
 12560  1DDA                     __ptext20:	
 12561 ;; *************** function ___flge *****************
 12562 ;; Defined at:
 12563 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flge.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  ff1             4   58[BANK0 ] float 
 12566 ;;  ff2             4   62[BANK0 ] float 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;		None               void
 12571 ;; Registers used:
 12572 ;;		wreg, status,2, status,0
 12573 ;; Tracked objects:
 12574 ;;		On entry : 1F/0
 12575 ;;		On exit  : 1F/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12578 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12582 ;;Total ram usage:       12 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:    2
 12585 ;; This function calls:
 12586 ;;		Nothing
 12587 ;; This function is called by:
 12588 ;;		_auto_system
 12589 ;;		_pid_calc
 12590 ;;		_handle_ad_loop
 12591 ;;		_Mppt_Charge
 12592 ;;		_handle_uart_rx_buf
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           
 12597                           ;psect for function ___flge
 12598  1DDA                     ___flge:	
 12599                           
 12600                           ;incstack = 0
 12601                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12602  1DDA  1FDD               	btfss	___flge@ff1+3,7
 12603  1DDB  2DF1               	goto	l19074
 12604  1DDC  3080               	movlw	128
 12605  1DDD  01E2               	clrf	??___flge
 12606  1DDE  01E3               	clrf	??___flge+1
 12607  1DDF  01E4               	clrf	??___flge+2
 12608  1DE0  00E5               	movwf	??___flge+3
 12609  1DE1  085A               	movf	___flge@ff1,w
 12610  1DE2  02E2               	subwf	??___flge,f
 12611  1DE3  085B               	movf	___flge@ff1+1,w
 12612  1DE4  3BE3               	subwfb	??___flge+1,f
 12613  1DE5  085C               	movf	___flge@ff1+2,w
 12614  1DE6  3BE4               	subwfb	??___flge+2,f
 12615  1DE7  085D               	movf	___flge@ff1+3,w
 12616  1DE8  3BE5               	subwfb	??___flge+3,f
 12617  1DE9  0865               	movf	??___flge+3,w
 12618  1DEA  00DD               	movwf	___flge@ff1+3
 12619  1DEB  0864               	movf	??___flge+2,w
 12620  1DEC  00DC               	movwf	___flge@ff1+2
 12621  1DED  0863               	movf	??___flge+1,w
 12622  1DEE  00DB               	movwf	___flge@ff1+1
 12623  1DEF  0862               	movf	??___flge,w
 12624  1DF0  00DA               	movwf	___flge@ff1
 12625  1DF1                     l19074:	
 12626  1DF1  1FE1               	btfss	___flge@ff2+3,7
 12627  1DF2  2E08               	goto	l2137
 12628  1DF3  3080               	movlw	128
 12629  1DF4  01E2               	clrf	??___flge
 12630  1DF5  01E3               	clrf	??___flge+1
 12631  1DF6  01E4               	clrf	??___flge+2
 12632  1DF7  00E5               	movwf	??___flge+3
 12633  1DF8  085E               	movf	___flge@ff2,w
 12634  1DF9  02E2               	subwf	??___flge,f
 12635  1DFA  085F               	movf	___flge@ff2+1,w
 12636  1DFB  3BE3               	subwfb	??___flge+1,f
 12637  1DFC  0860               	movf	___flge@ff2+2,w
 12638  1DFD  3BE4               	subwfb	??___flge+2,f
 12639  1DFE  0861               	movf	___flge@ff2+3,w
 12640  1DFF  3BE5               	subwfb	??___flge+3,f
 12641  1E00  0865               	movf	??___flge+3,w
 12642  1E01  00E1               	movwf	___flge@ff2+3
 12643  1E02  0864               	movf	??___flge+2,w
 12644  1E03  00E0               	movwf	___flge@ff2+2
 12645  1E04  0863               	movf	??___flge+1,w
 12646  1E05  00DF               	movwf	___flge@ff2+1
 12647  1E06  0862               	movf	??___flge,w
 12648  1E07  00DE               	movwf	___flge@ff2
 12649  1E08                     l2137:	
 12650  1E08  3080               	movlw	128
 12651  1E09  06DD               	xorwf	___flge@ff1+3,f
 12652  1E0A  06E1               	xorwf	___flge@ff2+3,f
 12653  1E0B  0861               	movf	___flge@ff2+3,w
 12654  1E0C  025D               	subwf	___flge@ff1+3,w
 12655  1E0D  1D03               	skipz
 12656  1E0E  0008               	return
 12657  1E0F  0860               	movf	___flge@ff2+2,w
 12658  1E10  025C               	subwf	___flge@ff1+2,w
 12659  1E11  1D03               	skipz
 12660  1E12  0008               	return
 12661  1E13  085F               	movf	___flge@ff2+1,w
 12662  1E14  025B               	subwf	___flge@ff1+1,w
 12663  1E15  1D03               	skipz
 12664  1E16  0008               	return
 12665  1E17  085E               	movf	___flge@ff2,w
 12666  1E18  025A               	subwf	___flge@ff1,w
 12667  1E19  0008               	return
 12668  1E1A                     __end_of___flge:	
 12669  1E1A                     __ptext47:	
 12670 ;; *************** function ___fladd *****************
 12671 ;; Defined at:
 12672 ;;		line 88 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fladd.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  f1              4   39[BANK0 ] unsigned char 
 12675 ;;  f2              4   43[BANK0 ] unsigned char 
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;  exp1            1   53[BANK0 ] unsigned char 
 12678 ;;  exp2            1   52[BANK0 ] unsigned char 
 12679 ;;  sign            1   51[BANK0 ] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  4   39[BANK0 ] unsigned char 
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0, pclath, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 1F/0
 12686 ;;		On exit  : 1F/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12689 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;Total ram usage:       15 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:    3
 12696 ;; This function calls:
 12697 ;;		___flpack
 12698 ;; This function is called by:
 12699 ;;		_application_init
 12700 ;;		_pid_calc
 12701 ;;		_handle_ad_loop
 12702 ;;		_handle_task_process
 12703 ;;		_Mppt_Charge
 12704 ;;		___flsub
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           
 12709                           ;psect for function ___fladd
 12710  1E1A                     ___fladd:	
 12711                           
 12712                           ;incstack = 0
 12713                           ; Regs used in ___fladd: [wreg+status,2+status,0+pclath+cstack]
 12714  1E1A  0847               	movf	___fladd@f1,w
 12715  1E1B  00CF               	movwf	??___fladd
 12716  1E1C  0848               	movf	___fladd@f1+1,w
 12717  1E1D  00D0               	movwf	??___fladd+1
 12718  1E1E  0849               	movf	___fladd@f1+2,w
 12719  1E1F  00D1               	movwf	??___fladd+2
 12720  1E20  084A               	movf	___fladd@f1+3,w
 12721  1E21  00D2               	movwf	??___fladd+3
 12722  1E22  1003               	clrc
 12723  1E23  0D51               	rlf	??___fladd+2,w
 12724  1E24  0D52               	rlf	??___fladd+3,w
 12725  1E25  00D5               	movwf	___fladd@exp1
 12726  1E26  084B               	movf	___fladd@f2,w
 12727  1E27  00CF               	movwf	??___fladd
 12728  1E28  084C               	movf	___fladd@f2+1,w
 12729  1E29  00D0               	movwf	??___fladd+1
 12730  1E2A  084D               	movf	___fladd@f2+2,w
 12731  1E2B  00D1               	movwf	??___fladd+2
 12732  1E2C  084E               	movf	___fladd@f2+3,w
 12733  1E2D  00D2               	movwf	??___fladd+3
 12734  1E2E  1003               	clrc
 12735  1E2F  0D51               	rlf	??___fladd+2,w
 12736  1E30  0D52               	rlf	??___fladd+3,w
 12737  1E31  00D4               	movwf	___fladd@exp2
 12738  1E32  0855               	movf	___fladd@exp1,w
 12739  1E33  1903               	btfsc	3,2
 12740  1E34  2E41               	goto	l18960
 12741  1E35  0854               	movf	___fladd@exp2,w
 12742  1E36  0255               	subwf	___fladd@exp1,w
 12743  1E37  0854               	movf	___fladd@exp2,w
 12744  1E38  1803               	skipnc
 12745  1E39  2E4B               	goto	L65
 12746  1E3A  00CF               	movwf	??___fladd
 12747  1E3B  0855               	movf	___fladd@exp1,w
 12748  1E3C  02CF               	subwf	??___fladd,f
 12749  1E3D  3021               	movlw	33
 12750  1E3E  024F               	subwf	??___fladd,w
 12751  1E3F  1C03               	skipc
 12752  1E40  2E4A               	goto	l18964
 12753  1E41                     l18960:	
 12754  1E41  084E               	movf	___fladd@f2+3,w
 12755  1E42  00CA               	movwf	?___fladd+3
 12756  1E43  084D               	movf	___fladd@f2+2,w
 12757  1E44  00C9               	movwf	?___fladd+2
 12758  1E45  084C               	movf	___fladd@f2+1,w
 12759  1E46  00C8               	movwf	?___fladd+1
 12760  1E47  084B               	movf	___fladd@f2,w
 12761  1E48  00C7               	movwf	?___fladd
 12762  1E49  0008               	return
 12763  1E4A                     l18964:	
 12764  1E4A  0854               	movf	___fladd@exp2,w
 12765  1E4B                     L65:	
 12766  1E4B  1903               	btfsc	3,2
 12767  1E4C  0008               	return
 12768  1E4D  0855               	movf	___fladd@exp1,w
 12769  1E4E  0254               	subwf	___fladd@exp2,w
 12770  1E4F  1803               	skipnc
 12771  1E50  2E59               	goto	l18970
 12772  1E51  0855               	movf	___fladd@exp1,w
 12773  1E52  00CF               	movwf	??___fladd
 12774  1E53  0854               	movf	___fladd@exp2,w
 12775  1E54  02CF               	subwf	??___fladd,f
 12776  1E55  3021               	movlw	33
 12777  1E56  024F               	subwf	??___fladd,w
 12778  1E57  1803               	btfsc	3,0
 12779  1E58  0008               	return
 12780  1E59                     l18970:	
 12781  1E59  3006               	movlw	6
 12782  1E5A  00D3               	movwf	___fladd@sign
 12783  1E5B  1BCA               	btfsc	___fladd@f1+3,7
 12784  1E5C  17D3               	bsf	___fladd@sign,7
 12785  1E5D  1BCE               	btfsc	___fladd@f2+3,7
 12786  1E5E  1753               	bsf	___fladd@sign,6
 12787  1E5F  17C9               	bsf	___fladd@f1+2,7
 12788  1E60  01CA               	clrf	___fladd@f1+3
 12789  1E61  17CD               	bsf	___fladd@f2+2,7
 12790  1E62  01CE               	clrf	___fladd@f2+3
 12791  1E63  0854               	movf	___fladd@exp2,w
 12792  1E64  0255               	subwf	___fladd@exp1,w
 12793  1E65  1803               	skipnc
 12794  1E66  2E80               	goto	l18992
 12795  1E67                     l18982:	
 12796  1E67  35CB               	lslf	___fladd@f2,f
 12797  1E68  0DCC               	rlf	___fladd@f2+1,f
 12798  1E69  0DCD               	rlf	___fladd@f2+2,f
 12799  1E6A  0DCE               	rlf	___fladd@f2+3,f
 12800  1E6B  03D4               	decf	___fladd@exp2,f
 12801  1E6C  0854               	movf	___fladd@exp2,w
 12802  1E6D  0655               	xorwf	___fladd@exp1,w
 12803  1E6E  1903               	skipnz
 12804  1E6F  2E7B               	goto	l18990
 12805  1E70  03D3               	decf	___fladd@sign,f
 12806  1E71  0853               	movf	___fladd@sign,w
 12807  1E72  3907               	andlw	7
 12808  1E73  1903               	btfsc	3,2
 12809  1E74  2E7B               	goto	l18990
 12810  1E75  2E67               	goto	l18982
 12811  1E76                     l18988:	
 12812  1E76  36CA               	lsrf	___fladd@f1+3,f
 12813  1E77  0CC9               	rrf	___fladd@f1+2,f
 12814  1E78  0CC8               	rrf	___fladd@f1+1,f
 12815  1E79  0CC7               	rrf	___fladd@f1,f
 12816  1E7A  0AD5               	incf	___fladd@exp1,f
 12817  1E7B                     l18990:	
 12818  1E7B  0855               	movf	___fladd@exp1,w
 12819  1E7C  0654               	xorwf	___fladd@exp2,w
 12820  1E7D  1903               	btfsc	3,2
 12821  1E7E  2E9C               	goto	l2112
 12822  1E7F  2E76               	goto	l18988
 12823  1E80                     l18992:	
 12824  1E80  0855               	movf	___fladd@exp1,w
 12825  1E81  0254               	subwf	___fladd@exp2,w
 12826  1E82  1803               	skipnc
 12827  1E83  2E9C               	goto	l2112
 12828  1E84                     l18994:	
 12829  1E84  35C7               	lslf	___fladd@f1,f
 12830  1E85  0DC8               	rlf	___fladd@f1+1,f
 12831  1E86  0DC9               	rlf	___fladd@f1+2,f
 12832  1E87  0DCA               	rlf	___fladd@f1+3,f
 12833  1E88  03D5               	decf	___fladd@exp1,f
 12834  1E89  0854               	movf	___fladd@exp2,w
 12835  1E8A  0655               	xorwf	___fladd@exp1,w
 12836  1E8B  1903               	skipnz
 12837  1E8C  2E98               	goto	l19002
 12838  1E8D  03D3               	decf	___fladd@sign,f
 12839  1E8E  0853               	movf	___fladd@sign,w
 12840  1E8F  3907               	andlw	7
 12841  1E90  1903               	btfsc	3,2
 12842  1E91  2E98               	goto	l19002
 12843  1E92  2E84               	goto	l18994
 12844  1E93                     l19000:	
 12845  1E93  36CE               	lsrf	___fladd@f2+3,f
 12846  1E94  0CCD               	rrf	___fladd@f2+2,f
 12847  1E95  0CCC               	rrf	___fladd@f2+1,f
 12848  1E96  0CCB               	rrf	___fladd@f2,f
 12849  1E97  0AD4               	incf	___fladd@exp2,f
 12850  1E98                     l19002:	
 12851  1E98  0855               	movf	___fladd@exp1,w
 12852  1E99  0654               	xorwf	___fladd@exp2,w
 12853  1E9A  1D03               	skipz
 12854  1E9B  2E93               	goto	l19000
 12855  1E9C                     l2112:	
 12856  1E9C  1FD3               	btfss	___fladd@sign,7
 12857  1E9D  2EAA               	goto	l19008
 12858  1E9E  30FF               	movlw	255
 12859  1E9F  06C7               	xorwf	___fladd@f1,f
 12860  1EA0  06C8               	xorwf	___fladd@f1+1,f
 12861  1EA1  06C9               	xorwf	___fladd@f1+2,f
 12862  1EA2  06CA               	xorwf	___fladd@f1+3,f
 12863  1EA3  0AC7               	incf	___fladd@f1,f
 12864  1EA4  1903               	skipnz
 12865  1EA5  0AC8               	incf	___fladd@f1+1,f
 12866  1EA6  1903               	skipnz
 12867  1EA7  0AC9               	incf	___fladd@f1+2,f
 12868  1EA8  1903               	skipnz
 12869  1EA9  0ACA               	incf	___fladd@f1+3,f
 12870  1EAA                     l19008:	
 12871  1EAA  1F53               	btfss	___fladd@sign,6
 12872  1EAB  2EB5               	goto	l19014
 12873  1EAC  30FF               	movlw	255
 12874  1EAD  27DE  3199         	fcall	PL250	;call to abstracted procedure
 12875  1EAF  1903               	skipnz
 12876  1EB0  0ACC               	incf	___fladd@f2+1,f
 12877  1EB1  1903               	skipnz
 12878  1EB2  0ACD               	incf	___fladd@f2+2,f
 12879  1EB3  1903               	skipnz
 12880  1EB4  0ACE               	incf	___fladd@f2+3,f
 12881  1EB5                     l19014:	
 12882  1EB5  01D3               	clrf	___fladd@sign
 12883  1EB6  0847               	movf	___fladd@f1,w
 12884  1EB7  07CB               	addwf	___fladd@f2,f
 12885  1EB8  0848               	movf	___fladd@f1+1,w
 12886  1EB9  3DCC               	addwfc	___fladd@f2+1,f
 12887  1EBA  0849               	movf	___fladd@f1+2,w
 12888  1EBB  3DCD               	addwfc	___fladd@f2+2,f
 12889  1EBC  084A               	movf	___fladd@f1+3,w
 12890  1EBD  3DCE               	addwfc	___fladd@f2+3,f
 12891  1EBE  1FCE               	btfss	___fladd@f2+3,7
 12892  1EBF  2ECA               	goto	l19026
 12893  1EC0  30FF               	movlw	255
 12894  1EC1  27DE               	fcall	PL250	;call to abstracted procedure
 12895  1EC2  1903               	skipnz
 12896  1EC3  0ACC               	incf	___fladd@f2+1,f
 12897  1EC4  1903               	skipnz
 12898  1EC5  0ACD               	incf	___fladd@f2+2,f
 12899  1EC6  1903               	skipnz
 12900  1EC7  0ACE               	incf	___fladd@f2+3,f
 12901  1EC8  01D3               	clrf	___fladd@sign
 12902  1EC9  0AD3               	incf	___fladd@sign,f
 12903  1ECA                     l19026:	
 12904  1ECA  084E               	movf	___fladd@f2+3,w
 12905  1ECB  00A6               	movwf	___flpack@arg+3
 12906  1ECC  084D               	movf	___fladd@f2+2,w
 12907  1ECD  00A5               	movwf	___flpack@arg+2
 12908  1ECE  084C               	movf	___fladd@f2+1,w
 12909  1ECF  00A4               	movwf	___flpack@arg+1
 12910  1ED0  084B               	movf	___fladd@f2,w
 12911  1ED1  00A3               	movwf	___flpack@arg
 12912  1ED2  0855               	movf	___fladd@exp1,w
 12913  1ED3  00A7               	movwf	___flpack@exp
 12914  1ED4  0853               	movf	___fladd@sign,w
 12915  1ED5  00A8               	movwf	___flpack@sign
 12916  1ED6  31A3  236A         	fcall	___flpack
 12917  1ED8  0826               	movf	?___flpack+3,w
 12918  1ED9  00CA               	movwf	?___fladd+3
 12919  1EDA  0825               	movf	?___flpack+2,w
 12920  1EDB  00C9               	movwf	?___fladd+2
 12921  1EDC  0824               	movf	?___flpack+1,w
 12922  1EDD  00C8               	movwf	?___fladd+1
 12923  1EDE  0823               	movf	?___flpack,w
 12924  1EDF  00C7               	movwf	?___fladd
 12925  1EE0  0008               	return
 12926  1EE1                     __end_of___fladd:	
 12927  1EE1                     PL8:	
 12928  1EE1  01DB               	clrf	___flge@ff1+1
 12929  1EE2  01DA               	clrf	___flge@ff1
 12930  1EE3  0021               	movlb	1	; select bank1
 12931  1EE4  083F               	movf	(pid_calc@Error+3)^(0+128),w
 12932  1EE5  0020               	movlb	0	; select bank0
 12933  1EE6  00E1               	movwf	___flge@ff2+3
 12934  1EE7  0021               	movlb	1	; select bank1
 12935  1EE8  083E               	movf	(pid_calc@Error+2)^(0+128),w
 12936  1EE9  0020               	movlb	0	; select bank0
 12937  1EEA  00E0               	movwf	___flge@ff2+2
 12938  1EEB  0021               	movlb	1	; select bank1
 12939  1EEC  083D               	movf	(pid_calc@Error+1)^(0+128),w
 12940  1EED  0020               	movlb	0	; select bank0
 12941  1EEE  00DF               	movwf	___flge@ff2+1
 12942  1EEF  0021               	movlb	1	; select bank1
 12943  1EF0  083C               	movf	pid_calc@Error^(0+128),w
 12944  1EF1  0020               	movlb	0	; select bank0
 12945  1EF2  00DE               	movwf	___flge@ff2
 12946  1EF3  0008               	return
 12947  1EF4                     __end_ofPL8:	
 12948  1EF4                     PL12:	
 12949  1EF4  083F               	movf	(pid_calc@Error+3)^(0+128),w
 12950  1EF5  0020               	movlb	0	; select bank0
 12951  1EF6  00DD               	movwf	___flge@ff1+3
 12952  1EF7  0021               	movlb	1	; select bank1
 12953  1EF8  083E               	movf	(pid_calc@Error+2)^(0+128),w
 12954  1EF9  0020               	movlb	0	; select bank0
 12955  1EFA  00DC               	movwf	___flge@ff1+2
 12956  1EFB  0021               	movlb	1	; select bank1
 12957  1EFC  083D               	movf	(pid_calc@Error+1)^(0+128),w
 12958  1EFD  0020               	movlb	0	; select bank0
 12959  1EFE  00DB               	movwf	___flge@ff1+1
 12960  1EFF  0021               	movlb	1	; select bank1
 12961  1F00  083C               	movf	pid_calc@Error^(0+128),w
 12962  1F01  0020               	movlb	0	; select bank0
 12963  1F02  00DA               	movwf	___flge@ff1
 12964  1F03  0008               	return
 12965  1F04                     __end_ofPL12:	
 12966  1F04                     PL44:	
 12967  1F04  0022               	movlb	2	; select bank2
 12968  1F05  0856               	movf	(_dianchi_guoya_baohu+3)^(0+256),w
 12969  1F06  0020               	movlb	0	; select bank0
 12970  1F07  00E1               	movwf	___flge@ff2+3
 12971  1F08  0022               	movlb	2	; select bank2
 12972  1F09  0855               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
 12973  1F0A  0020               	movlb	0	; select bank0
 12974  1F0B  00E0               	movwf	___flge@ff2+2
 12975  1F0C  0022               	movlb	2	; select bank2
 12976  1F0D  0854               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
 12977  1F0E  0020               	movlb	0	; select bank0
 12978  1F0F  00DF               	movwf	___flge@ff2+1
 12979  1F10  0022               	movlb	2	; select bank2
 12980  1F11  0853               	movf	_dianchi_guoya_baohu^(0+256),w
 12981  1F12  0020               	movlb	0	; select bank0
 12982  1F13  00DE               	movwf	___flge@ff2
 12983  1F14  0008               	return
 12984  1F15                     __end_ofPL44:	
 12985  1F15                     PL50:	
 12986  1F15  0020               	movlb	0	; select bank0
 12987  1F16  00DD               	movwf	___flge@ff1+3
 12988  1F17  0021               	movlb	1	; select bank1
 12989  1F18  083A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 12990  1F19  0020               	movlb	0	; select bank0
 12991  1F1A  00DC               	movwf	___flge@ff1+2
 12992  1F1B  0021               	movlb	1	; select bank1
 12993  1F1C  0839               	movf	(pid_calc@PWM_var+1)^(0+128),w
 12994  1F1D  0020               	movlb	0	; select bank0
 12995  1F1E  00DB               	movwf	___flge@ff1+1
 12996  1F1F  0021               	movlb	1	; select bank1
 12997  1F20  0838               	movf	pid_calc@PWM_var^(0+128),w
 12998  1F21  0020               	movlb	0	; select bank0
 12999  1F22  00DA               	movwf	___flge@ff1
 13000  1F23  0008               	return
 13001  1F24                     __end_ofPL50:	
 13002  1F24                     PL52:	
 13003  1F24  01DB               	clrf	___flge@ff1+1
 13004  1F25  01DA               	clrf	___flge@ff1
 13005  1F26  0021               	movlb	1	; select bank1
 13006  1F27  083B               	movf	(pid_calc@PWM_var+3)^(0+128),w
 13007  1F28  0020               	movlb	0	; select bank0
 13008  1F29  00E1               	movwf	___flge@ff2+3
 13009  1F2A  0021               	movlb	1	; select bank1
 13010  1F2B  083A               	movf	(pid_calc@PWM_var+2)^(0+128),w
 13011  1F2C  0020               	movlb	0	; select bank0
 13012  1F2D  00E0               	movwf	___flge@ff2+2
 13013  1F2E  0021               	movlb	1	; select bank1
 13014  1F2F  0839               	movf	(pid_calc@PWM_var+1)^(0+128),w
 13015  1F30  0020               	movlb	0	; select bank0
 13016  1F31  00DF               	movwf	___flge@ff2+1
 13017  1F32  0021               	movlb	1	; select bank1
 13018  1F33  0838               	movf	pid_calc@PWM_var^(0+128),w
 13019  1F34  0020               	movlb	0	; select bank0
 13020  1F35  00DE               	movwf	___flge@ff2
 13021  1F36  0008               	return
 13022  1F37                     __end_ofPL52:	
 13023  1F37                     PL62:	
 13024  1F37  0023               	movlb	3	; select bank3
 13025  1F38  086A               	movf	(_dianchi_guoya_huifu+3)^(0+384),w
 13026  1F39  0020               	movlb	0	; select bank0
 13027  1F3A  00E1               	movwf	___flge@ff2+3
 13028  1F3B  0023               	movlb	3	; select bank3
 13029  1F3C  0869               	movf	(_dianchi_guoya_huifu+2)^(0+384),w
 13030  1F3D  0020               	movlb	0	; select bank0
 13031  1F3E  00E0               	movwf	___flge@ff2+2
 13032  1F3F  0023               	movlb	3	; select bank3
 13033  1F40  0868               	movf	(_dianchi_guoya_huifu+1)^(0+384),w
 13034  1F41  0020               	movlb	0	; select bank0
 13035  1F42  00DF               	movwf	___flge@ff2+1
 13036  1F43  0023               	movlb	3	; select bank3
 13037  1F44  0867               	movf	_dianchi_guoya_huifu^(0+384),w
 13038  1F45  0020               	movlb	0	; select bank0
 13039  1F46  00DE               	movwf	___flge@ff2
 13040  1F47  0008               	return
 13041  1F48                     __end_ofPL62:	
 13042  1F48                     PL80:	
 13043  1F48  0020               	movlb	0	; select bank0
 13044  1F49  00DD               	movwf	___flge@ff1+3
 13045  1F4A  3080               	movlw	128
 13046  1F4B  00DC               	movwf	___flge@ff1+2
 13047  1F4C  0008               	return
 13048  1F4D                     __end_ofPL80:	
 13049  1F4D                     PL110:	
 13050  1F4D  0021               	movlb	1	; select bank1
 13051  1F4E  0820               	movf	pid_calc@pp^(0+128),w
 13052  1F4F  0086               	movwf	6
 13053  1F50  0821               	movf	(pid_calc@pp+1)^(0+128),w
 13054  1F51  0087               	movwf	7
 13055  1F52  0008               	return
 13056  1F53                     __end_ofPL110:	
 13057  1F53                     PL138:	
 13058  1F53  0833               	movf	?___lwtofl+3,w
 13059  1F54  0021               	movlb	1	; select bank1
 13060  1F55  00C3               	movwf	(_PWM+3)^(0+128)
 13061  1F56  0020               	movlb	0	; select bank0
 13062  1F57  0832               	movf	?___lwtofl+2,w
 13063  1F58  0021               	movlb	1	; select bank1
 13064  1F59  00C2               	movwf	(_PWM+2)^(0+128)
 13065  1F5A  0020               	movlb	0	; select bank0
 13066  1F5B  0831               	movf	?___lwtofl+1,w
 13067  1F5C  0021               	movlb	1	; select bank1
 13068  1F5D  00C1               	movwf	(_PWM+1)^(0+128)
 13069  1F5E  0020               	movlb	0	; select bank0
 13070  1F5F  0830               	movf	?___lwtofl,w
 13071  1F60  0021               	movlb	1	; select bank1
 13072  1F61  00C0               	movwf	_PWM^(0+128)
 13073  1F62  0008               	return
 13074  1F63                     __end_ofPL138:	
 13075  1F63                     PL140:	
 13076  1F63  3F40               	moviw [0]fsr1
 13077  1F64  0020               	movlb	0	; select bank0
 13078  1F65  00B8               	movwf	___flmul@f2
 13079  1F66  3F41               	moviw [1]fsr1
 13080  1F67  00B9               	movwf	___flmul@f2+1
 13081  1F68  3F42               	moviw [2]fsr1
 13082  1F69  00BA               	movwf	___flmul@f2+2
 13083  1F6A  3F43               	moviw [3]fsr1
 13084  1F6B  00BB               	movwf	___flmul@f2+3
 13085  1F6C  0008               	return
 13086  1F6D                     __end_ofPL140:	
 13087  1F6D                     PL148:	
 13088  1F6D  0847               	movf	(_buck_pwm_value+1)^(0+128),w
 13089  1F6E  0020               	movlb	0	; select bank0
 13090  1F6F  00A4               	movwf	Set_Buck_Pwm_Duty@duty+1
 13091  1F70  0021               	movlb	1	; select bank1
 13092  1F71  0846               	movf	_buck_pwm_value^(0+128),w
 13093  1F72  0020               	movlb	0	; select bank0
 13094  1F73  00A3               	movwf	Set_Buck_Pwm_Duty@duty
 13095  1F74  0008               	return
 13096  1F75                     __end_ofPL148:	
 13097  1F75                     PL160:	
 13098  1F75  0847               	movf	(_buck_pwm_value+1)^(0+128),w
 13099  1F76  0020               	movlb	0	; select bank0
 13100  1F77  00B1               	movwf	___lwtofl@c+1
 13101  1F78  0021               	movlb	1	; select bank1
 13102  1F79  0846               	movf	_buck_pwm_value^(0+128),w
 13103  1F7A  0020               	movlb	0	; select bank0
 13104  1F7B  00B0               	movwf	___lwtofl@c
 13105  1F7C  0008               	return
 13106  1F7D                     __end_ofPL160:	
 13107  1F7D                     PL178:	
 13108  1F7D  085B               	movf	?___fltol+1,w
 13109  1F7E  0021               	movlb	1	; select bank1
 13110  1F7F  00C7               	movwf	(_buck_pwm_value+1)^(0+128)
 13111  1F80  0020               	movlb	0	; select bank0
 13112  1F81  085A               	movf	?___fltol,w
 13113  1F82  0021               	movlb	1	; select bank1
 13114  1F83  00C6               	movwf	_buck_pwm_value^(0+128)
 13115  1F84  0008               	return
 13116  1F85                     __end_ofPL178:	
 13117  1F85                     PL184:	
 13118  1F85  3F40               	moviw [0]fsr1
 13119  1F86  0020               	movlb	0	; select bank0
 13120  1F87  00DA               	movwf	___flsub@f1
 13121  1F88  3F41               	moviw [1]fsr1
 13122  1F89  00DB               	movwf	___flsub@f1+1
 13123  1F8A  3F42               	moviw [2]fsr1
 13124  1F8B  00DC               	movwf	___flsub@f1+2
 13125  1F8C  3F43               	moviw [3]fsr1
 13126  1F8D  00DD               	movwf	___flsub@f1+3
 13127  1F8E  0008               	return
 13128  1F8F                     __end_ofPL184:	
 13129  1F8F                     PL186:	
 13130  1F8F  0837               	movf	?___flmul+3,w
 13131  1F90  00CA               	movwf	___fladd@f1+3
 13132  1F91  0836               	movf	?___flmul+2,w
 13133  1F92  00C9               	movwf	___fladd@f1+2
 13134  1F93  0835               	movf	?___flmul+1,w
 13135  1F94  00C8               	movwf	___fladd@f1+1
 13136  1F95  0834               	movf	?___flmul,w
 13137  1F96  00C7               	movwf	___fladd@f1
 13138  1F97  0021               	movlb	1	; select bank1
 13139  1F98  0008               	return
 13140  1F99                     __end_ofPL186:	
 13141  1F99                     PL188:	
 13142  1F99  0820               	movf	pid_calc@pp^(0+128),w
 13143  1F9A  0086               	movwf	6
 13144  1F9B  0821               	movf	(pid_calc@pp+1)^(0+128),w
 13145  1F9C  0087               	movwf	7
 13146  1F9D  3000               	movlw	0
 13147  1F9E  3158               	addfsr 1,24
 13148  1F9F  3FC0               	movwi [0]fsr1
 13149  1FA0  3FC1               	movwi [1]fsr1
 13150  1FA1  3FC2               	movwi [2]fsr1
 13151  1FA2  0008               	return
 13152  1FA3                     __end_ofPL188:	
 13153  1FA3                     PL196:	
 13154  1FA3  0833               	movf	?___lwtofl+3,w
 13155  1FA4  00CE               	movwf	___fladd@f2+3
 13156  1FA5  0832               	movf	?___lwtofl+2,w
 13157  1FA6  00CD               	movwf	___fladd@f2+2
 13158  1FA7  0831               	movf	?___lwtofl+1,w
 13159  1FA8  00CC               	movwf	___fladd@f2+1
 13160  1FA9  0830               	movf	?___lwtofl,w
 13161  1FAA  00CB               	movwf	___fladd@f2
 13162  1FAB  0008               	return
 13163  1FAC                     __end_ofPL196:	
 13164  1FAC                     PL198:	
 13165  1FAC  084A               	movf	?___fladd+3,w
 13166  1FAD  00DD               	movwf	___fltol@f1+3
 13167  1FAE  0849               	movf	?___fladd+2,w
 13168  1FAF  00DC               	movwf	___fltol@f1+2
 13169  1FB0  0848               	movf	?___fladd+1,w
 13170  1FB1  00DB               	movwf	___fltol@f1+1
 13171  1FB2  0847               	movf	?___fladd,w
 13172  1FB3  00DA               	movwf	___fltol@f1
 13173  1FB4  0008               	return
 13174  1FB5                     __end_ofPL198:	
 13175  1FB5                     PL222:	
 13176  1FB5  00E1               	movwf	___flge@ff2+3
 13177  1FB6  3080               	movlw	128
 13178  1FB7  00E0               	movwf	___flge@ff2+2
 13179  1FB8  01DF               	clrf	___flge@ff2+1
 13180  1FB9  01DE               	clrf	___flge@ff2
 13181  1FBA  0008               	return
 13182  1FBB                     __end_ofPL222:	
 13183  1FBB                     PL228:	
 13184  1FBB  3040               	movlw	64
 13185  1FBC  00E1               	movwf	___flge@ff2+3
 13186  1FBD  01E0               	clrf	___flge@ff2+2
 13187  1FBE  01DF               	clrf	___flge@ff2+1
 13188  1FBF  01DE               	clrf	___flge@ff2
 13189  1FC0  0008               	return
 13190  1FC1                     __end_ofPL228:	
 13191  1FC1                     PL230:	
 13192  1FC1  0820               	movf	pid_calc@pp^(0+128),w
 13193  1FC2  0086               	movwf	6
 13194  1FC3  0821               	movf	(pid_calc@pp+1)^(0+128),w
 13195  1FC4  0087               	movwf	7
 13196  1FC5  3150               	addfsr 1,16
 13197  1FC6  0008               	return
 13198  1FC7                     __end_ofPL230:	
 13199  1FC7                     PL232:	
 13200  1FC7  00E1               	movwf	___flge@ff2+3
 13201  1FC8  30A0               	movlw	160
 13202  1FC9  00E0               	movwf	___flge@ff2+2
 13203  1FCA  01DF               	clrf	___flge@ff2+1
 13204  1FCB  01DE               	clrf	___flge@ff2
 13205  1FCC  0008               	return
 13206  1FCD                     __end_ofPL232:	
 13207  1FCD                     PL236:	
 13208  1FCD  00E1               	movwf	___flge@ff2+3
 13209  1FCE  01E0               	clrf	___flge@ff2+2
 13210  1FCF  01DF               	clrf	___flge@ff2+1
 13211  1FD0  01DE               	clrf	___flge@ff2
 13212  1FD1  0008               	return
 13213  1FD2                     __end_ofPL236:	
 13214  1FD2                     PL244:	
 13215  1FD2  3040               	movlw	64
 13216  1FD3  00E1               	movwf	___flge@ff2+3
 13217  1FD4  00E0               	movwf	___flge@ff2+2
 13218  1FD5  01DF               	clrf	___flge@ff2+1
 13219  1FD6  01DE               	clrf	___flge@ff2
 13220  1FD7  0008               	return
 13221  1FD8                     __end_ofPL244:	
 13222  1FD8                     PL246:	
 13223  1FD8  00CA               	movwf	___fladd@f1+3
 13224  1FD9  30A0               	movlw	160
 13225  1FDA  00C9               	movwf	___fladd@f1+2
 13226  1FDB  01C8               	clrf	___fladd@f1+1
 13227  1FDC  01C7               	clrf	___fladd@f1
 13228  1FDD  0008               	return
 13229  1FDE                     __end_ofPL246:	
 13230  1FDE                     PL250:	
 13231  1FDE  06CB               	xorwf	___fladd@f2,f
 13232  1FDF  06CC               	xorwf	___fladd@f2+1,f
 13233  1FE0  06CD               	xorwf	___fladd@f2+2,f
 13234  1FE1  06CE               	xorwf	___fladd@f2+3,f
 13235  1FE2  0ACB               	incf	___fladd@f2,f
 13236  1FE3  0008               	return
 13237  1FE4                     __end_ofPL250:	
 13238  1FE4                     __ptext19:	
 13239 ;; *************** function ___flsub *****************
 13240 ;; Defined at:
 13241 ;;		line 18 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flsub.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  f2              4   54[BANK0 ] float 
 13244 ;;  f1              4   58[BANK0 ] float 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;		None
 13247 ;; Return value:  Size  Location     Type
 13248 ;;                  4   54[BANK0 ] float 
 13249 ;; Registers used:
 13250 ;;		wreg, status,2, status,0, pclath, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 1F/0
 13253 ;;		On exit  : 1F/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;Total ram usage:        8 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    4
 13263 ;; This function calls:
 13264 ;;		___fladd
 13265 ;; This function is called by:
 13266 ;;		_pid_calc
 13267 ;; This function uses a non-reentrant model
 13268 ;;
 13269                           
 13270                           
 13271                           ;psect for function ___flsub
 13272  1FE4                     ___flsub:	
 13273                           
 13274                           ;incstack = 0
 13275                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13276  1FE4  3080               	movlw	128
 13277  1FE5  06D9               	xorwf	___flsub@f2+3,f
 13278  1FE6  0859               	movf	___flsub@f2+3,w
 13279  1FE7  00CA               	movwf	___fladd@f1+3
 13280  1FE8  0858               	movf	___flsub@f2+2,w
 13281  1FE9  00C9               	movwf	___fladd@f1+2
 13282  1FEA  0857               	movf	___flsub@f2+1,w
 13283  1FEB  00C8               	movwf	___fladd@f1+1
 13284  1FEC  0856               	movf	___flsub@f2,w
 13285  1FED  00C7               	movwf	___fladd@f1
 13286  1FEE  085D               	movf	___flsub@f1+3,w
 13287  1FEF  00CE               	movwf	___fladd@f2+3
 13288  1FF0  085C               	movf	___flsub@f1+2,w
 13289  1FF1  00CD               	movwf	___fladd@f2+2
 13290  1FF2  085B               	movf	___flsub@f1+1,w
 13291  1FF3  00CC               	movwf	___fladd@f2+1
 13292  1FF4  085A               	movf	___flsub@f1,w
 13293  1FF5  00CB               	movwf	___fladd@f2
 13294  1FF6  261A               	fcall	___fladd
 13295  1FF7  084A               	movf	?___fladd+3,w
 13296  1FF8  00D9               	movwf	?___flsub+3
 13297  1FF9  0849               	movf	?___fladd+2,w
 13298  1FFA  00D8               	movwf	?___flsub+2
 13299  1FFB  0848               	movf	?___fladd+1,w
 13300  1FFC  00D7               	movwf	?___flsub+1
 13301  1FFD  0847               	movf	?___fladd,w
 13302  1FFE  00D6               	movwf	?___flsub
 13303  1FFF  0008               	return
 13304  2000                     __end_of___flsub:	
 13305                           
 13306                           	psect	text24
 13307  10C9                     __ptext24:	
 13308 ;; *************** function _Enable_Buck_Pwm *****************
 13309 ;; Defined at:
 13310 ;;		line 123 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;		None
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;		None
 13315 ;; Return value:  Size  Location     Type
 13316 ;;		None               void
 13317 ;; Registers used:
 13318 ;;		None
 13319 ;; Tracked objects:
 13320 ;;		On entry : 1F/1
 13321 ;;		On exit  : 1F/8
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;Total ram usage:        0 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:    2
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		_handle_ad_loop
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           
 13339                           ;psect for function _Enable_Buck_Pwm
 13340  10C9                     _Enable_Buck_Pwm:	
 13341                           
 13342                           ;pwm.c: 125: TRISCbits.TRISC2=0;
 13343                           
 13344                           ;incstack = 0
 13345                           ; Regs used in _Enable_Buck_Pwm: []
 13346  10C9  110E               	bcf	14,2	;volatile
 13347                           
 13348                           ;pwm.c: 127: TMR6ON=1;
 13349  10CA  0028               	movlb	8	; select bank8
 13350  10CB  151E               	bsf	30,2	;volatile
 13351  10CC  0008               	return
 13352  10CD                     __end_of_Enable_Buck_Pwm:	
 13353                           
 13354                           	psect	text35
 13355  21D0                     __ptext35:	
 13356 ;; *************** function _application_init *****************
 13357 ;; Defined at:
 13358 ;;		line 277 in file "D:\MCUProject\ZH-SL-H40\src\main.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;		None
 13363 ;; Return value:  Size  Location     Type
 13364 ;;		None               void
 13365 ;; Registers used:
 13366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13367 ;; Tracked objects:
 13368 ;;		On entry : 1F/5
 13369 ;;		On exit  : 1F/2
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;Total ram usage:        0 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:    4
 13379 ;; This function calls:
 13380 ;;		___fladd
 13381 ;;		___fldiv
 13382 ;;		___flmul
 13383 ;;		_pid_init
 13384 ;; This function is called by:
 13385 ;;		_main
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           
 13390                           ;psect for function _application_init
 13391  21D0                     _application_init:	
 13392                           
 13393                           ;main.c: 280: TMR1ON =1;
 13394                           
 13395                           ;incstack = 0
 13396                           ; Regs used in _application_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13397  21D0  0020               	movlb	0	; select bank0
 13398  21D1  1418               	bsf	24,0	;volatile
 13399                           
 13400                           ;main.c: 282: system_check_time=0x01;
 13401  21D2  0022               	movlb	2	; select bank2
 13402  21D3  3020               	movlw	low _PID_CC_charge
 13403  21D4  01C8               	clrf	_system_check_time^(0+256)
 13404  21D5  0AC8               	incf	_system_check_time^(0+256),f
 13405                           
 13406                           ;main.c: 284: open_an0_time=0x01;
 13407  21D6  01B7               	clrf	_open_an0_time^(0+256)
 13408  21D7  0AB7               	incf	_open_an0_time^(0+256),f
 13409                           
 13410                           ;main.c: 286: open_an1_time=0x01;
 13411  21D8  01B9               	clrf	_open_an1_time^(0+256)
 13412  21D9  0AB9               	incf	_open_an1_time^(0+256),f
 13413                           
 13414                           ;main.c: 288: open_an2_time=0x01;
 13415  21DA  01BA               	clrf	_open_an2_time^(0+256)
 13416  21DB  0ABA               	incf	_open_an2_time^(0+256),f
 13417                           
 13418                           ;main.c: 290: open_an3_time=0x01;
 13419  21DC  01BB               	clrf	_open_an3_time^(0+256)
 13420  21DD  0ABB               	incf	_open_an3_time^(0+256),f
 13421                           
 13422                           ;main.c: 292: open_an4_time=0x01;
 13423  21DE  01BC               	clrf	_open_an4_time^(0+256)
 13424  21DF  0ABC               	incf	_open_an4_time^(0+256),f
 13425                           
 13426                           ;main.c: 294: open_an9_time=0x01;
 13427  21E0  01BD               	clrf	_open_an9_time^(0+256)
 13428  21E1  0ABD               	incf	_open_an9_time^(0+256),f
 13429                           
 13430                           ;main.c: 296: open_an10_time=0x01;
 13431  21E2  01B8               	clrf	_open_an10_time^(0+256)
 13432  21E3  0AB8               	incf	_open_an10_time^(0+256),f
 13433                           
 13434                           ;main.c: 300: pid_init ( &PID_CC_charge);
 13435  21E4  27EE               	fcall	PL256	;call to abstracted procedure
 13436  21E5  318D  2597  31A1   	fcall	_pid_init
 13437                           
 13438                           ;main.c: 302: pid_init ( &PID_CV_charge);
 13439  21E8  27F3               	fcall	PL260	;call to abstracted procedure
 13440  21E9  318D  2597  31A1   	fcall	_pid_init
 13441                           
 13442                           ;main.c: 304: pid_init ( &PID_CC_discharge);
 13443  21EC  30C7               	movlw	low _PID_CC_discharge
 13444  21ED  00AB               	movwf	pid_init@pp
 13445  21EE  3001               	movlw	high _PID_CC_discharge
 13446  21EF  00AC               	movwf	pid_init@pp+1
 13447  21F0  318D  2597  31A1   	fcall	_pid_init
 13448                           
 13449                           ;main.c: 309: PID_CC_charge.Proportion = 0.001;
 13450                           
 13451                           ;main.c: 311: PID_CC_charge.Integral = 0;
 13452                           
 13453                           ;main.c: 313: PID_CC_charge.Derivative = 0;
 13454                           
 13455                           ;main.c: 315: PID_CC_charge.SetPoint = 5.0*15.0;
 13456                           
 13457                           ;main.c: 320: PID_CV_charge.Proportion = 0.001;
 13458                           
 13459                           ;main.c: 322: PID_CV_charge.Integral = 0;
 13460                           
 13461                           ;main.c: 324: PID_CV_charge.Derivative = 0;
 13462                           
 13463                           ;main.c: 326: PID_CV_charge.SetPoint = dianchi_cv_level+1;
 13464  21F3  26BC               	fcall	PL2	;call to abstracted procedure
 13465  21F4  319E  261A  31A1   	fcall	___fladd
 13466  21F7  27BF  31A1         	fcall	PL70	;call to abstracted procedure
 13467                           
 13468                           ;main.c: 330: PID_CC_discharge.Proportion = 0.001;
 13469                           
 13470                           ;main.c: 332: PID_CC_discharge.Integral = 0;
 13471                           
 13472                           ;main.c: 334: PID_CC_discharge.Derivative = 0;
 13473                           
 13474                           ;main.c: 336: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
 13475  21F9  2775               	fcall	PL16	;call to abstracted procedure
 13476  21FA  31B3  2397  31A1   	fcall	PL4	;call to abstracted procedure
 13477  21FD  2291               	fcall	___fldiv
 13478  21FE  3186  26D8  31A1   	fcall	PL36	;call to abstracted procedure
 13479  2201  22FC               	fcall	___flmul
 13480  2202  318E  2600         	fcall	PL24	;call to abstracted procedure
 13481                           
 13482                           ;main.c: 338: open_discharge_time=0x00;
 13483  2204  0022               	movlb	2	; select bank2
 13484  2205  01BE               	clrf	_open_discharge_time^(0+256)
 13485                           
 13486                           ;main.c: 340: ms_cnt=0x00;
 13487  2206  0023               	movlb	3	; select bank3
 13488  2207  01B8               	clrf	_ms_cnt^(0+384)
 13489  2208  01B9               	clrf	(_ms_cnt+1)^(0+384)
 13490                           
 13491                           ;main.c: 341: se_cnt=0x00;
 13492  2209  01BA               	clrf	_se_cnt^(0+384)
 13493  220A  01BB               	clrf	(_se_cnt+1)^(0+384)
 13494                           
 13495                           ;main.c: 342: mi_cnt=0x00;
 13496  220B  01B6               	clrf	_mi_cnt^(0+384)
 13497  220C  01B7               	clrf	(_mi_cnt+1)^(0+384)
 13498                           
 13499                           ;main.c: 343: ho_cnt=0x00;
 13500  220D  0021               	movlb	1	; select bank1
 13501  220E  01CC               	clrf	_ho_cnt^(0+128)
 13502  220F  01CD               	clrf	(_ho_cnt+1)^(0+128)
 13503                           
 13504                           ;main.c: 345: sys_power_ch=0x00;
 13505  2210  0022               	movlb	2	; select bank2
 13506  2211  01C7               	clrf	_sys_power_ch^(0+256)
 13507  2212  0008               	return
 13508  2213                     __end_of_application_init:	
 13509  2213                     __ptext5:	
 13510 ;; *************** function _auto_system *****************
 13511 ;; Defined at:
 13512 ;;		line 501 in file "D:\MCUProject\ZH-SL-H40\src\ird_remote.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;  sys_bt_volta    4   10[BANK1 ] float 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;		None               void
 13519 ;; Registers used:
 13520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 17F/2
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;Total ram usage:        4 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    4
 13533 ;; This function calls:
 13534 ;;		___fldiv
 13535 ;;		___flge
 13536 ;;		___flmul
 13537 ;;		___lwtofl
 13538 ;;		_delay_ms
 13539 ;;		_eeprom_read
 13540 ;;		_eeprom_write
 13541 ;;		_start_ad_convert
 13542 ;; This function is called by:
 13543 ;;		_middle_init
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           
 13548                           ;psect for function _auto_system
 13549  2213                     _auto_system:	
 13550                           
 13551                           ;ird_remote.c: 503: float sys_bt_voltage;
 13552                           ;ird_remote.c: 505: delay_ms(100);
 13553                           
 13554                           ;incstack = 0
 13555                           ; Regs used in _auto_system: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13556  2213  3064               	movlw	100
 13557  2214  0020               	movlb	0	; select bank0
 13558  2215  00A3               	movwf	delay_ms@count
 13559  2216  01A4               	clrf	delay_ms@count+1
 13560  2217  318B  233D  31A1   	fcall	_delay_ms
 13561                           
 13562                           ;ird_remote.c: 508: bt_id=eeprom_read(0x0a);
 13563  221A  300A               	movlw	10
 13564  221B  2650               	fcall	_eeprom_read
 13565  221C  0021               	movlb	1	; select bank1
 13566  221D  00EC               	movwf	_bt_id^(0+128)
 13567                           
 13568                           ;ird_remote.c: 513: battery_voltage_value=start_ad_convert(0b01100);
 13569  221E  300C               	movlw	12
 13570  221F  31B5  25A5  31A1   	fcall	_start_ad_convert
 13571  2222  0831               	movf	?_start_ad_convert+1,w
 13572  2223  00E9               	movwf	_battery_voltage_value+1
 13573  2224  0830               	movf	?_start_ad_convert,w
 13574  2225  00E8               	movwf	_battery_voltage_value
 13575                           
 13576                           ;ird_remote.c: 515: sys_bt_voltage=(((float)battery_voltage_value)/1000)*31.04;
 13577  2226  3041               	movlw	65
 13578  2227  00B7               	movwf	___flmul@f1+3
 13579  2228  30F8               	movlw	248
 13580  2229  00B6               	movwf	___flmul@f1+2
 13581  222A  3051               	movlw	81
 13582  222B  00B5               	movwf	___flmul@f1+1
 13583  222C  30EC               	movlw	236
 13584  222D  00B4               	movwf	___flmul@f1
 13585  222E  3044               	movlw	68
 13586  222F  00CA               	movwf	___fldiv@f2+3
 13587  2230  307A               	movlw	122
 13588  2231  00C9               	movwf	___fldiv@f2+2
 13589  2232  01C8               	clrf	___fldiv@f2+1
 13590  2233  01C7               	clrf	___fldiv@f2
 13591  2234  0869               	movf	_battery_voltage_value+1,w
 13592  2235  00B1               	movwf	___lwtofl@c+1
 13593  2236  0868               	movf	_battery_voltage_value,w
 13594  2237  00B0               	movwf	___lwtofl@c
 13595  2238  319B  231C  31A1   	fcall	___lwtofl
 13596  223B  3186  26E1  31A1   	fcall	PL56	;call to abstracted procedure
 13597  223E  2291               	fcall	___fldiv
 13598  223F  3186  26D8  31A1   	fcall	PL36	;call to abstracted procedure
 13599  2242  22FC  31A1         	fcall	___flmul
 13600  2244  0837               	movf	?___flmul+3,w
 13601  2245  0021               	movlb	1	; select bank1
 13602  2246  00AD               	movwf	(auto_system@sys_bt_voltage+3)^(0+128)
 13603  2247  0020               	movlb	0	; select bank0
 13604  2248  0836               	movf	?___flmul+2,w
 13605  2249  0021               	movlb	1	; select bank1
 13606  224A  00AC               	movwf	(auto_system@sys_bt_voltage+2)^(0+128)
 13607  224B  0020               	movlb	0	; select bank0
 13608  224C  0835               	movf	?___flmul+1,w
 13609  224D  0021               	movlb	1	; select bank1
 13610  224E  00AB               	movwf	(auto_system@sys_bt_voltage+1)^(0+128)
 13611  224F  0020               	movlb	0	; select bank0
 13612  2250  0834               	movf	?___flmul,w
 13613  2251  0021               	movlb	1	; select bank1
 13614  2252  00AA               	movwf	auto_system@sys_bt_voltage^(0+128)
 13615                           
 13616                           ;ird_remote.c: 517: if(bt_id==0x01)
 13617  2253  0B6C               	decfsz	_bt_id^(0+128),w
 13618  2254  2A69               	goto	l16520
 13619                           
 13620                           ;ird_remote.c: 518: {
 13621                           ;ird_remote.c: 519: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
 13622  2255  082D               	movf	(auto_system@sys_bt_voltage+3)^(0+128),w
 13623  2256  27A9               	fcall	PL46	;call to abstracted procedure
 13624  2257  319D  25DA  31A1   	fcall	___flge
 13625  225A  1C03               	btfss	3,0
 13626  225B  2A67               	goto	l512
 13627  225C  3041               	movlw	65
 13628  225D  2791               	fcall	PL40	;call to abstracted procedure
 13629  225E  319D  25DA  31A1   	fcall	___flge
 13630  2261  1C03               	btfss	3,0
 13631  2262  2A67               	goto	l512
 13632                           
 13633                           ;ird_remote.c: 520: {
 13634                           ;ird_remote.c: 521: volt_id=0x01;
 13635  2263  0021               	movlb	1	; select bank1
 13636                           
 13637                           ;ird_remote.c: 523: eeprom_write(0x09,volt_id);
 13638  2264  27E0               	fcall	PL190	;call to abstracted procedure
 13639  2265  318B  2B67         	ljmp	_eeprom_write
 13640  2267                     l512:	
 13641                           ;ird_remote.c: 524: }
 13642                           
 13643                           
 13644                           ;ird_remote.c: 525: else
 13645                           ;ird_remote.c: 526: {
 13646                           ;ird_remote.c: 527: __nop();
 13647  2267  0000               	nop
 13648  2268  0008               	return
 13649  2269                     l16520:	
 13650                           
 13651                           ;ird_remote.c: 530: else if(bt_id==0x02)
 13652  2269  086C               	movf	_bt_id^(0+128),w
 13653  226A  3A02               	xorlw	2
 13654  226B  1D03               	skipz
 13655  226C  2A7F               	goto	l16530
 13656                           
 13657                           ;ird_remote.c: 531: {
 13658                           ;ird_remote.c: 532: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
 13659  226D  082D               	movf	(auto_system@sys_bt_voltage+3)^(0+128),w
 13660  226E  27A9               	fcall	PL46	;call to abstracted procedure
 13661  226F  319D  25DA  31A1   	fcall	___flge
 13662  2272  1C03               	btfss	3,0
 13663  2273  2A67               	goto	l512
 13664  2274  3041               	movlw	65
 13665  2275  2791               	fcall	PL40	;call to abstracted procedure
 13666  2276  319D  25DA  31A1   	fcall	___flge
 13667  2279  1C03               	btfss	3,0
 13668  227A  2A67               	goto	l512
 13669                           
 13670                           ;ird_remote.c: 533: {
 13671                           ;ird_remote.c: 534: volt_id=0x01;
 13672  227B  0021               	movlb	1	; select bank1
 13673                           
 13674                           ;ird_remote.c: 536: eeprom_write(0x09,volt_id);
 13675  227C  27E0               	fcall	PL190	;call to abstracted procedure
 13676  227D  318B  2B67         	ljmp	_eeprom_write
 13677  227F                     l16530:	
 13678                           ;ird_remote.c: 537: }
 13679                           
 13680                           
 13681                           ;ird_remote.c: 543: else
 13682                           ;ird_remote.c: 544: {
 13683                           ;ird_remote.c: 545: if((sys_bt_voltage>=7.5)&&(sys_bt_voltage<=12.6))
 13684  227F  082D               	movf	(auto_system@sys_bt_voltage+3)^(0+128),w
 13685  2280  27A9               	fcall	PL46	;call to abstracted procedure
 13686  2281  319D  25DA  31A1   	fcall	___flge
 13687  2284  1C03               	btfss	3,0
 13688  2285  2A67               	goto	l512
 13689  2286  3041               	movlw	65
 13690  2287  2791               	fcall	PL40	;call to abstracted procedure
 13691  2288  319D  25DA  31A1   	fcall	___flge
 13692  228B  1C03               	btfss	3,0
 13693  228C  2A67               	goto	l512
 13694                           
 13695                           ;ird_remote.c: 546: {
 13696                           ;ird_remote.c: 547: volt_id=0x01;
 13697  228D  0021               	movlb	1	; select bank1
 13698                           
 13699                           ;ird_remote.c: 549: eeprom_write(0x09,volt_id);
 13700  228E  27E0               	fcall	PL190	;call to abstracted procedure
 13701  228F  318B  2B67         	ljmp	_eeprom_write
 13702  2291                     __end_of_auto_system:	
 13703                           ;ird_remote.c: 550: }
 13704                           
 13705  2291                     __ptext49:	
 13706 ;; *************** function ___fldiv *****************
 13707 ;; Defined at:
 13708 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\fldiv.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;  f2              4   39[BANK0 ] unsigned char 
 13711 ;;  f1              4   43[BANK0 ] unsigned char 
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;  f3              4   51[BANK0 ] unsigned char 
 13714 ;;  sign            1   57[BANK0 ] unsigned char 
 13715 ;;  exp             1   56[BANK0 ] unsigned char 
 13716 ;;  cntr            1   55[BANK0 ] unsigned char 
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  4   39[BANK0 ] unsigned char 
 13719 ;; Registers used:
 13720 ;;		wreg, status,2, status,0, pclath, cstack
 13721 ;; Tracked objects:
 13722 ;;		On entry : 1F/0
 13723 ;;		On exit  : 1F/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13727 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;Total ram usage:       19 bytes
 13731 ;; Hardware stack levels used:    1
 13732 ;; Hardware stack levels required when called:    3
 13733 ;; This function calls:
 13734 ;;		___flpack
 13735 ;; This function is called by:
 13736 ;;		_read_param_eeprom
 13737 ;;		_auto_system
 13738 ;;		_application_init
 13739 ;;		_handle_ad_loop
 13740 ;;		_handle_task_process
 13741 ;;		_handle_uart_rx_buf
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           
 13745                           
 13746                           ;psect for function ___fldiv
 13747  2291                     ___fldiv:	
 13748                           
 13749                           ;incstack = 0
 13750                           ; Regs used in ___fldiv: [wreg+status,2+status,0+pclath+cstack]
 13751  2291  084B               	movf	___fldiv@f1,w
 13752  2292  00CF               	movwf	??___fldiv
 13753  2293  084C               	movf	___fldiv@f1+1,w
 13754  2294  00D0               	movwf	??___fldiv+1
 13755  2295  084D               	movf	___fldiv@f1+2,w
 13756  2296  00D1               	movwf	??___fldiv+2
 13757  2297  084E               	movf	___fldiv@f1+3,w
 13758  2298  00D2               	movwf	??___fldiv+3
 13759  2299  1003               	clrc
 13760  229A  0D51               	rlf	??___fldiv+2,w
 13761  229B  0D52               	rlf	??___fldiv+3,w
 13762  229C  00D8               	movwf	___fldiv@exp
 13763  229D  08D8               	movf	___fldiv@exp,f
 13764  229E  1D03               	skipz
 13765  229F  2AA2               	goto	l19034
 13766  22A0  01C7               	clrf	?___fldiv
 13767  22A1  2FF8               	ljmp	PL264	;call to abstracted procedure
 13768  22A2                     l19034:	
 13769  22A2  0847               	movf	___fldiv@f2,w
 13770  22A3  00CF               	movwf	??___fldiv
 13771  22A4  0848               	movf	___fldiv@f2+1,w
 13772  22A5  00D0               	movwf	??___fldiv+1
 13773  22A6  0849               	movf	___fldiv@f2+2,w
 13774  22A7  00D1               	movwf	??___fldiv+2
 13775  22A8  084A               	movf	___fldiv@f2+3,w
 13776  22A9  00D2               	movwf	??___fldiv+3
 13777  22AA  1003               	clrc
 13778  22AB  0D51               	rlf	??___fldiv+2,w
 13779  22AC  0D52               	rlf	??___fldiv+3,w
 13780  22AD  00D9               	movwf	___fldiv@sign
 13781  22AE  08D9               	movf	___fldiv@sign,f
 13782  22AF  1D03               	skipz
 13783  22B0  2AB3               	goto	l19038
 13784  22B1  01C7               	clrf	?___fldiv
 13785  22B2  2FF8               	ljmp	PL264	;call to abstracted procedure
 13786  22B3                     l19038:	
 13787  22B3  3089               	movlw	137
 13788  22B4  0759               	addwf	___fldiv@sign,w
 13789  22B5  00CF               	movwf	??___fldiv
 13790  22B6  02D8               	subwf	___fldiv@exp,f
 13791  22B7  084E               	movf	___fldiv@f1+3,w
 13792  22B8  00D9               	movwf	___fldiv@sign
 13793  22B9  084A               	movf	___fldiv@f2+3,w
 13794  22BA  06D9               	xorwf	___fldiv@sign,f
 13795  22BB  3080               	movlw	128
 13796  22BC  05D9               	andwf	___fldiv@sign,f
 13797  22BD  3020               	movlw	32
 13798  22BE  17CD               	bsf	___fldiv@f1+2,7
 13799  22BF  01CE               	clrf	___fldiv@f1+3
 13800  22C0  17C9               	bsf	___fldiv@f2+2,7
 13801  22C1  01CA               	clrf	___fldiv@f2+3
 13802  22C2  00D7               	movwf	___fldiv@cntr
 13803  22C3                     l19056:	
 13804  22C3  35D3               	lslf	___fldiv@f3,f
 13805  22C4  0DD4               	rlf	___fldiv@f3+1,f
 13806  22C5  0DD5               	rlf	___fldiv@f3+2,f
 13807  22C6  0DD6               	rlf	___fldiv@f3+3,f
 13808  22C7  084A               	movf	___fldiv@f2+3,w
 13809  22C8  024E               	subwf	___fldiv@f1+3,w
 13810  22C9  1D03               	skipz
 13811  22CA  2AD5               	goto	u12005
 13812  22CB  0849               	movf	___fldiv@f2+2,w
 13813  22CC  024D               	subwf	___fldiv@f1+2,w
 13814  22CD  1D03               	skipz
 13815  22CE  2AD5               	goto	u12005
 13816  22CF  0848               	movf	___fldiv@f2+1,w
 13817  22D0  024C               	subwf	___fldiv@f1+1,w
 13818  22D1  1D03               	skipz
 13819  22D2  2AD5               	goto	u12005
 13820  22D3  0847               	movf	___fldiv@f2,w
 13821  22D4  024B               	subwf	___fldiv@f1,w
 13822  22D5                     u12005:	
 13823  22D5  1C03               	skipc
 13824  22D6  2AE0               	goto	l19062
 13825  22D7  0847               	movf	___fldiv@f2,w
 13826  22D8  02CB               	subwf	___fldiv@f1,f
 13827  22D9  0848               	movf	___fldiv@f2+1,w
 13828  22DA  3BCC               	subwfb	___fldiv@f1+1,f
 13829  22DB  0849               	movf	___fldiv@f2+2,w
 13830  22DC  3BCD               	subwfb	___fldiv@f1+2,f
 13831  22DD  084A               	movf	___fldiv@f2+3,w
 13832  22DE  3BCE               	subwfb	___fldiv@f1+3,f
 13833  22DF  1453               	bsf	___fldiv@f3,0
 13834  22E0                     l19062:	
 13835  22E0  35CB               	lslf	___fldiv@f1,f
 13836  22E1  0DCC               	rlf	___fldiv@f1+1,f
 13837  22E2  0DCD               	rlf	___fldiv@f1+2,f
 13838  22E3  0DCE               	rlf	___fldiv@f1+3,f
 13839  22E4  0BD7               	decfsz	___fldiv@cntr,f
 13840  22E5  2AC3               	goto	l19056
 13841  22E6  0856               	movf	___fldiv@f3+3,w
 13842  22E7  00A6               	movwf	___flpack@arg+3
 13843  22E8  0855               	movf	___fldiv@f3+2,w
 13844  22E9  00A5               	movwf	___flpack@arg+2
 13845  22EA  0854               	movf	___fldiv@f3+1,w
 13846  22EB  00A4               	movwf	___flpack@arg+1
 13847  22EC  0853               	movf	___fldiv@f3,w
 13848  22ED  00A3               	movwf	___flpack@arg
 13849  22EE  0858               	movf	___fldiv@exp,w
 13850  22EF  00A7               	movwf	___flpack@exp
 13851  22F0  0859               	movf	___fldiv@sign,w
 13852  22F1  00A8               	movwf	___flpack@sign
 13853  22F2  236A               	fcall	___flpack
 13854  22F3  0826               	movf	?___flpack+3,w
 13855  22F4  00CA               	movwf	?___fldiv+3
 13856  22F5  0825               	movf	?___flpack+2,w
 13857  22F6  00C9               	movwf	?___fldiv+2
 13858  22F7  0824               	movf	?___flpack+1,w
 13859  22F8  00C8               	movwf	?___fldiv+1
 13860  22F9  0823               	movf	?___flpack,w
 13861  22FA  00C7               	movwf	?___fldiv
 13862  22FB  0008               	return
 13863  22FC                     __end_of___fldiv:	
 13864  22FC                     __ptext48:	
 13865 ;; *************** function ___flmul *****************
 13866 ;; Defined at:
 13867 ;;		line 50 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\flmul.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;  f1              4   20[BANK0 ] unsigned char 
 13870 ;;  f2              4   24[BANK0 ] unsigned char 
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  f3_as_produc    4   33[BANK0 ] unsigned long 
 13873 ;;  sign            1   38[BANK0 ] unsigned char 
 13874 ;;  cntr            1   37[BANK0 ] unsigned char 
 13875 ;;  exp             1   32[BANK0 ] unsigned char 
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  4   20[BANK0 ] unsigned char 
 13878 ;; Registers used:
 13879 ;;		wreg, status,2, status,0, pclath, cstack
 13880 ;; Tracked objects:
 13881 ;;		On entry : 1F/0
 13882 ;;		On exit  : 1F/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13885 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;Total ram usage:       19 bytes
 13890 ;; Hardware stack levels used:    1
 13891 ;; Hardware stack levels required when called:    3
 13892 ;; This function calls:
 13893 ;;		___flpack
 13894 ;; This function is called by:
 13895 ;;		_read_param_eeprom
 13896 ;;		_auto_system
 13897 ;;		_application_init
 13898 ;;		_pid_calc
 13899 ;;		_handle_ad_loop
 13900 ;;		_handle_task_process
 13901 ;;		_handle_uart_rx_buf
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           
 13906                           ;psect for function ___flmul
 13907  22FC                     ___flmul:	
 13908                           
 13909                           ;incstack = 0
 13910                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13911  22FC  0834               	movf	___flmul@f1,w
 13912  22FD  00BC               	movwf	??___flmul
 13913  22FE  0835               	movf	___flmul@f1+1,w
 13914  22FF  00BD               	movwf	??___flmul+1
 13915  2300  0836               	movf	___flmul@f1+2,w
 13916  2301  00BE               	movwf	??___flmul+2
 13917  2302  0837               	movf	___flmul@f1+3,w
 13918  2303  00BF               	movwf	??___flmul+3
 13919  2304  1003               	clrc
 13920  2305  0D3E               	rlf	??___flmul+2,w
 13921  2306  0D3F               	rlf	??___flmul+3,w
 13922  2307  00C0               	movwf	___flmul@exp
 13923  2308  08C0               	movf	___flmul@exp,f
 13924  2309  1D03               	skipz
 13925  230A  2B0D               	goto	l19088
 13926  230B  01B4               	clrf	?___flmul
 13927  230C  2FFC               	ljmp	PL272	;call to abstracted procedure
 13928  230D                     l19088:	
 13929  230D  0838               	movf	___flmul@f2,w
 13930  230E  00BC               	movwf	??___flmul
 13931  230F  0839               	movf	___flmul@f2+1,w
 13932  2310  00BD               	movwf	??___flmul+1
 13933  2311  083A               	movf	___flmul@f2+2,w
 13934  2312  00BE               	movwf	??___flmul+2
 13935  2313  083B               	movf	___flmul@f2+3,w
 13936  2314  00BF               	movwf	??___flmul+3
 13937  2315  1003               	clrc
 13938  2316  0D3E               	rlf	??___flmul+2,w
 13939  2317  0D3F               	rlf	??___flmul+3,w
 13940  2318  00C6               	movwf	___flmul@sign
 13941  2319  08C6               	movf	___flmul@sign,f
 13942  231A  1D03               	skipz
 13943  231B  2B1E               	goto	l19092
 13944  231C  01B4               	clrf	?___flmul
 13945  231D  2FFC               	ljmp	PL272	;call to abstracted procedure
 13946  231E                     l19092:	
 13947  231E  0846               	movf	___flmul@sign,w
 13948  231F  3E7B               	addlw	123
 13949  2320  07C0               	addwf	___flmul@exp,f
 13950  2321  0837               	movf	___flmul@f1+3,w
 13951  2322  00C6               	movwf	___flmul@sign
 13952  2323  083B               	movf	___flmul@f2+3,w
 13953  2324  06C6               	xorwf	___flmul@sign,f
 13954  2325  3080               	movlw	128
 13955  2326  05C6               	andwf	___flmul@sign,f
 13956  2327  30FF               	movlw	255
 13957  2328  17B6               	bsf	___flmul@f1+2,7
 13958  2329  17BA               	bsf	___flmul@f2+2,7
 13959  232A  05B8               	andwf	___flmul@f2,f
 13960  232B  05B9               	andwf	___flmul@f2+1,f
 13961  232C  05BA               	andwf	___flmul@f2+2,f
 13962  232D  3007               	movlw	7
 13963  232E  01BB               	clrf	___flmul@f2+3
 13964  232F  01C1               	clrf	___flmul@f3_as_product
 13965  2330  01C2               	clrf	___flmul@f3_as_product+1
 13966  2331  01C3               	clrf	___flmul@f3_as_product+2
 13967  2332  01C4               	clrf	___flmul@f3_as_product+3
 13968  2333  00C5               	movwf	___flmul@cntr
 13969  2334                     l19110:	
 13970  2334  1C34               	btfss	___flmul@f1,0
 13971  2335  2B39               	goto	l19114
 13972  2336  0838               	movf	___flmul@f2,w
 13973  2337  27E6  31A1         	fcall	PL220	;call to abstracted procedure
 13974  2339                     l19114:	
 13975  2339  36B7               	lsrf	___flmul@f1+3,f
 13976  233A  0CB6               	rrf	___flmul@f1+2,f
 13977  233B  0CB5               	rrf	___flmul@f1+1,f
 13978  233C  0CB4               	rrf	___flmul@f1,f
 13979  233D  35B8               	lslf	___flmul@f2,f
 13980  233E  0DB9               	rlf	___flmul@f2+1,f
 13981  233F  0DBA               	rlf	___flmul@f2+2,f
 13982  2340  0DBB               	rlf	___flmul@f2+3,f
 13983  2341  0BC5               	decfsz	___flmul@cntr,f
 13984  2342  2B34               	goto	l19110
 13985  2343  3011               	movlw	17
 13986  2344  00C5               	movwf	___flmul@cntr
 13987  2345                     l19122:	
 13988  2345  1C34               	btfss	___flmul@f1,0
 13989  2346  2B4A               	goto	l19126
 13990  2347  0838               	movf	___flmul@f2,w
 13991  2348  27E6  31A1         	fcall	PL220	;call to abstracted procedure
 13992  234A                     l19126:	
 13993  234A  36B7               	lsrf	___flmul@f1+3,f
 13994  234B  0CB6               	rrf	___flmul@f1+2,f
 13995  234C  0CB5               	rrf	___flmul@f1+1,f
 13996  234D  0CB4               	rrf	___flmul@f1,f
 13997  234E  36C4               	lsrf	___flmul@f3_as_product+3,f
 13998  234F  0CC3               	rrf	___flmul@f3_as_product+2,f
 13999  2350  0CC2               	rrf	___flmul@f3_as_product+1,f
 14000  2351  0CC1               	rrf	___flmul@f3_as_product,f
 14001  2352  0BC5               	decfsz	___flmul@cntr,f
 14002  2353  2B45               	goto	l19122
 14003  2354  0844               	movf	___flmul@f3_as_product+3,w
 14004  2355  00A6               	movwf	___flpack@arg+3
 14005  2356  0843               	movf	___flmul@f3_as_product+2,w
 14006  2357  00A5               	movwf	___flpack@arg+2
 14007  2358  0842               	movf	___flmul@f3_as_product+1,w
 14008  2359  00A4               	movwf	___flpack@arg+1
 14009  235A  0841               	movf	___flmul@f3_as_product,w
 14010  235B  00A3               	movwf	___flpack@arg
 14011  235C  0840               	movf	___flmul@exp,w
 14012  235D  00A7               	movwf	___flpack@exp
 14013  235E  0846               	movf	___flmul@sign,w
 14014  235F  00A8               	movwf	___flpack@sign
 14015  2360  236A               	fcall	___flpack
 14016  2361  0826               	movf	?___flpack+3,w
 14017  2362  00B7               	movwf	?___flmul+3
 14018  2363  0825               	movf	?___flpack+2,w
 14019  2364  00B6               	movwf	?___flmul+2
 14020  2365  0824               	movf	?___flpack+1,w
 14021  2366  00B5               	movwf	?___flmul+1
 14022  2367  0823               	movf	?___flpack,w
 14023  2368  00B4               	movwf	?___flmul
 14024  2369  0008               	return
 14025  236A                     __end_of___flmul:	
 14026  236A                     __ptext46:	
 14027 ;; *************** function ___flpack *****************
 14028 ;; Defined at:
 14029 ;;		line 63 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\double.c"
 14030 ;; Parameters:    Size  Location     Type
 14031 ;;  arg             4    3[BANK0 ] unsigned long 
 14032 ;;  exp             1    7[BANK0 ] unsigned char 
 14033 ;;  sign            1    8[BANK0 ] unsigned char 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;		None
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  4    3[BANK0 ] unsigned char 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0
 14040 ;; Tracked objects:
 14041 ;;		On entry : 1F/0
 14042 ;;		On exit  : 1F/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;Total ram usage:       10 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    2
 14052 ;; This function calls:
 14053 ;;		Nothing
 14054 ;; This function is called by:
 14055 ;;		___awtofl
 14056 ;;		___fladd
 14057 ;;		___fldiv
 14058 ;;		___flmul
 14059 ;;		___lbtofl
 14060 ;;		___lwtofl
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           
 14065                           ;psect for function ___flpack
 14066  236A                     ___flpack:	
 14067                           
 14068                           ;incstack = 0
 14069                           ; Regs used in ___flpack: [wreg+status,2+status,0]
 14070  236A  0827               	movf	___flpack@exp,w
 14071  236B  1903               	btfsc	3,2
 14072  236C  2B73               	goto	l2078
 14073  236D  0826               	movf	___flpack@arg+3,w
 14074  236E  0425               	iorwf	___flpack@arg+2,w
 14075  236F  0424               	iorwf	___flpack@arg+1,w
 14076  2370  0423               	iorwf	___flpack@arg,w
 14077  2371  1D03               	skipz
 14078  2372  2B7D               	goto	l18922
 14079  2373                     l2078:	
 14080  2373  01A3               	clrf	?___flpack
 14081  2374  01A4               	clrf	?___flpack+1
 14082  2375  01A5               	clrf	?___flpack+2
 14083  2376  01A6               	clrf	?___flpack+3
 14084  2377  0008               	return
 14085  2378                     l18920:	
 14086  2378  0AA7               	incf	___flpack@exp,f
 14087  2379  36A6               	lsrf	___flpack@arg+3,f
 14088  237A  0CA5               	rrf	___flpack@arg+2,f
 14089  237B  0CA4               	rrf	___flpack@arg+1,f
 14090  237C  0CA3               	rrf	___flpack@arg,f
 14091  237D                     l18922:	
 14092  237D  30FE               	movlw	254
 14093  237E  0526               	andwf	___flpack@arg+3,w
 14094  237F  1903               	btfsc	3,2
 14095  2380  2B8E               	goto	l18930
 14096  2381  2B78               	goto	l18920
 14097  2382                     l18924:	
 14098  2382  0AA7               	incf	___flpack@exp,f
 14099  2383  0AA3               	incf	___flpack@arg,f
 14100  2384  1903               	skipnz
 14101  2385  0AA4               	incf	___flpack@arg+1,f
 14102  2386  1903               	skipnz
 14103  2387  0AA5               	incf	___flpack@arg+2,f
 14104  2388  1903               	skipnz
 14105  2389  0AA6               	incf	___flpack@arg+3,f
 14106  238A  36A6               	lsrf	___flpack@arg+3,f
 14107  238B  0CA5               	rrf	___flpack@arg+2,f
 14108  238C  0CA4               	rrf	___flpack@arg+1,f
 14109  238D  0CA3               	rrf	___flpack@arg,f
 14110  238E                     l18930:	
 14111  238E  30FF               	movlw	255
 14112  238F  0526               	andwf	___flpack@arg+3,w
 14113  2390  1903               	btfsc	3,2
 14114  2391  2B98               	goto	l18934
 14115  2392  2B82               	goto	l18924
 14116  2393                     l18932:	
 14117  2393  03A7               	decf	___flpack@exp,f
 14118  2394  35A3               	lslf	___flpack@arg,f
 14119  2395  0DA4               	rlf	___flpack@arg+1,f
 14120  2396  0DA5               	rlf	___flpack@arg+2,f
 14121  2397  0DA6               	rlf	___flpack@arg+3,f
 14122  2398                     l18934:	
 14123  2398  1FA5               	btfss	___flpack@arg+2,7
 14124  2399  2B93               	goto	l18932
 14125  239A  1827               	btfsc	___flpack@exp,0
 14126  239B  2BA3               	goto	l18938
 14127  239C  30FF               	movlw	255
 14128  239D  05A3               	andwf	___flpack@arg,f
 14129  239E  05A4               	andwf	___flpack@arg+1,f
 14130  239F  307F               	movlw	127
 14131  23A0  05A5               	andwf	___flpack@arg+2,f
 14132  23A1  30FF               	movlw	255
 14133  23A2  05A6               	andwf	___flpack@arg+3,f
 14134  23A3                     l18938:	
 14135  23A3  36A7               	lsrf	___flpack@exp,f
 14136  23A4  0827               	movf	___flpack@exp,w
 14137  23A5  00AC               	movwf	??___flpack+3
 14138  23A6  01AB               	clrf	??___flpack+2
 14139  23A7  01AA               	clrf	??___flpack+1
 14140  23A8  01A9               	clrf	??___flpack
 14141  23A9  0829               	movf	??___flpack,w
 14142  23AA  04A3               	iorwf	___flpack@arg,f
 14143  23AB  082A               	movf	??___flpack+1,w
 14144  23AC  04A4               	iorwf	___flpack@arg+1,f
 14145  23AD  082B               	movf	??___flpack+2,w
 14146  23AE  04A5               	iorwf	___flpack@arg+2,f
 14147  23AF  082C               	movf	??___flpack+3,w
 14148  23B0  04A6               	iorwf	___flpack@arg+3,f
 14149  23B1  0828               	movf	___flpack@sign,w
 14150  23B2  1D03               	skipz
 14151  23B3  17A6               	bsf	___flpack@arg+3,7
 14152  23B4  0008               	return
 14153  23B5                     __end_of___flpack:	
 14154  23B5                     __ptext3:	
 14155 ;; *************** function _read_param_eeprom *****************
 14156 ;; Defined at:
 14157 ;;		line 181 in file "D:\MCUProject\ZH-SL-H40\src\ird_remote.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;		None
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  byte_l          1   59[BANK0 ] unsigned char 
 14162 ;;  byte_h          1   58[BANK0 ] unsigned char 
 14163 ;; Return value:  Size  Location     Type
 14164 ;;		None               void
 14165 ;; Registers used:
 14166 ;;		wreg, status,2, status,0, pclath, cstack
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/2
 14169 ;;		On exit  : 1F/5
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;Total ram usage:        2 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:    4
 14179 ;; This function calls:
 14180 ;;		___awtofl
 14181 ;;		___fldiv
 14182 ;;		___flmul
 14183 ;;		___lbtofl
 14184 ;;		___lmul
 14185 ;;		_eeprom_read
 14186 ;; This function is called by:
 14187 ;;		_middle_init
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           
 14192                           ;psect for function _read_param_eeprom
 14193  23B5                     _read_param_eeprom:	
 14194  23B5                     l16436:	
 14195                           ;incstack = 0
 14196                           ; Regs used in _read_param_eeprom: [wreg+status,2+status,0+pclath+cstack]
 14197                           
 14198                           
 14199                           ;ird_remote.c: 183: unsigned char byte_h,byte_l;
 14200                           ;ird_remote.c: 186: byte_h=eeprom_read(0x00);
 14201  23B5  3000               	movlw	0
 14202  23B6  2650  31A1         	fcall	_eeprom_read
 14203  23B8  0020               	movlb	0	; select bank0
 14204  23B9  00DA               	movwf	read_param_eeprom@byte_h
 14205                           
 14206                           ;ird_remote.c: 188: byte_l=eeprom_read(0x01);
 14207  23BA  3001               	movlw	1
 14208  23BB  2650  31A1         	fcall	_eeprom_read
 14209                           
 14210                           ;ird_remote.c: 190: light_pv=(byte_h<<8)|byte_l;
 14211  23BD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14212  23BF  2667  31A1         	fcall	___awtofl
 14213  23C1  0830               	movf	?___awtofl+3,w
 14214  23C2  0021               	movlb	1	; select bank1
 14215  23C3  00E0               	movwf	(_light_pv+3)^(0+128)
 14216  23C4  0020               	movlb	0	; select bank0
 14217  23C5  082F               	movf	?___awtofl+2,w
 14218  23C6  0021               	movlb	1	; select bank1
 14219  23C7  00DF               	movwf	(_light_pv+2)^(0+128)
 14220  23C8  0020               	movlb	0	; select bank0
 14221  23C9  082E               	movf	?___awtofl+1,w
 14222  23CA  0021               	movlb	1	; select bank1
 14223  23CB  00DE               	movwf	(_light_pv+1)^(0+128)
 14224  23CC  0020               	movlb	0	; select bank0
 14225  23CD  082D               	movf	?___awtofl,w
 14226  23CE  0021               	movlb	1	; select bank1
 14227  23CF  00DD               	movwf	_light_pv^(0+128)
 14228                           
 14229                           ;ird_remote.c: 194: byte_h=eeprom_read(0x02);
 14230  23D0  3002               	movlw	2
 14231  23D1  2650  31A1         	fcall	_eeprom_read
 14232  23D3  0020               	movlb	0	; select bank0
 14233  23D4  00DA               	movwf	read_param_eeprom@byte_h
 14234                           
 14235                           ;ird_remote.c: 196: byte_l=eeprom_read(0x03);
 14236  23D5  3003               	movlw	3
 14237  23D6  2650  31A1         	fcall	_eeprom_read
 14238                           
 14239                           ;ird_remote.c: 198: load_cc_I=(byte_h<<8)|byte_l;
 14240  23D8  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14241  23DA  2667  31A1         	fcall	___awtofl
 14242  23DC  0830               	movf	?___awtofl+3,w
 14243  23DD  0021               	movlb	1	; select bank1
 14244  23DE  00E4               	movwf	(_load_cc_I+3)^(0+128)
 14245  23DF  0020               	movlb	0	; select bank0
 14246  23E0  082F               	movf	?___awtofl+2,w
 14247  23E1  0021               	movlb	1	; select bank1
 14248  23E2  00E3               	movwf	(_load_cc_I+2)^(0+128)
 14249  23E3  0020               	movlb	0	; select bank0
 14250  23E4  082E               	movf	?___awtofl+1,w
 14251  23E5  0021               	movlb	1	; select bank1
 14252  23E6  00E2               	movwf	(_load_cc_I+1)^(0+128)
 14253  23E7  0020               	movlb	0	; select bank0
 14254  23E8  082D               	movf	?___awtofl,w
 14255  23E9  0021               	movlb	1	; select bank1
 14256  23EA  00E1               	movwf	_load_cc_I^(0+128)
 14257                           
 14258                           ;ird_remote.c: 202: byte_l=eeprom_read(0x04);
 14259  23EB  3004               	movlw	4
 14260  23EC  2650  31A1         	fcall	_eeprom_read
 14261  23EE  0020               	movlb	0	; select bank0
 14262  23EF  00DB               	movwf	read_param_eeprom@byte_l
 14263                           
 14264                           ;ird_remote.c: 204: step_01_load_percent=byte_l;
 14265  23F0  2684  31A1         	fcall	___lbtofl
 14266  23F2  0830               	movf	?___lbtofl+3,w
 14267  23F3  0022               	movlb	2	; select bank2
 14268  23F4  00DA               	movwf	(_step_01_load_percent+3)^(0+256)
 14269  23F5  0020               	movlb	0	; select bank0
 14270  23F6  082F               	movf	?___lbtofl+2,w
 14271  23F7  0022               	movlb	2	; select bank2
 14272  23F8  00D9               	movwf	(_step_01_load_percent+2)^(0+256)
 14273  23F9  0020               	movlb	0	; select bank0
 14274  23FA  082E               	movf	?___lbtofl+1,w
 14275  23FB  0022               	movlb	2	; select bank2
 14276  23FC  00D8               	movwf	(_step_01_load_percent+1)^(0+256)
 14277  23FD  0020               	movlb	0	; select bank0
 14278  23FE  082D               	movf	?___lbtofl,w
 14279  23FF  0022               	movlb	2	; select bank2
 14280  2400  00D7               	movwf	_step_01_load_percent^(0+256)
 14281                           
 14282                           ;ird_remote.c: 207: byte_l=eeprom_read(0x05);
 14283  2401  3005               	movlw	5
 14284  2402  2650  31A1         	fcall	_eeprom_read
 14285  2404  0020               	movlb	0	; select bank0
 14286  2405  00DB               	movwf	read_param_eeprom@byte_l
 14287                           
 14288                           ;ird_remote.c: 209: step_02_load_percent=byte_l;
 14289  2406  2684  31A1         	fcall	___lbtofl
 14290  2408  0830               	movf	?___lbtofl+3,w
 14291  2409  0022               	movlb	2	; select bank2
 14292  240A  00DE               	movwf	(_step_02_load_percent+3)^(0+256)
 14293  240B  0020               	movlb	0	; select bank0
 14294  240C  082F               	movf	?___lbtofl+2,w
 14295  240D  0022               	movlb	2	; select bank2
 14296  240E  00DD               	movwf	(_step_02_load_percent+2)^(0+256)
 14297  240F  0020               	movlb	0	; select bank0
 14298  2410  082E               	movf	?___lbtofl+1,w
 14299  2411  0022               	movlb	2	; select bank2
 14300  2412  00DC               	movwf	(_step_02_load_percent+1)^(0+256)
 14301  2413  0020               	movlb	0	; select bank0
 14302  2414  082D               	movf	?___lbtofl,w
 14303  2415  0022               	movlb	2	; select bank2
 14304  2416  00DB               	movwf	_step_02_load_percent^(0+256)
 14305                           
 14306                           ;ird_remote.c: 212: byte_l=eeprom_read(0x06);
 14307  2417  3006               	movlw	6
 14308  2418  2650  31A1         	fcall	_eeprom_read
 14309  241A  0020               	movlb	0	; select bank0
 14310  241B  00DB               	movwf	read_param_eeprom@byte_l
 14311                           
 14312                           ;ird_remote.c: 214: step_03_load_percent=byte_l;
 14313  241C  2684  31A1         	fcall	___lbtofl
 14314  241E  0830               	movf	?___lbtofl+3,w
 14315  241F  0022               	movlb	2	; select bank2
 14316  2420  00E2               	movwf	(_step_03_load_percent+3)^(0+256)
 14317  2421  0020               	movlb	0	; select bank0
 14318  2422  082F               	movf	?___lbtofl+2,w
 14319  2423  0022               	movlb	2	; select bank2
 14320  2424  00E1               	movwf	(_step_03_load_percent+2)^(0+256)
 14321  2425  0020               	movlb	0	; select bank0
 14322  2426  082E               	movf	?___lbtofl+1,w
 14323  2427  0022               	movlb	2	; select bank2
 14324  2428  00E0               	movwf	(_step_03_load_percent+1)^(0+256)
 14325  2429  0020               	movlb	0	; select bank0
 14326  242A  082D               	movf	?___lbtofl,w
 14327  242B  0022               	movlb	2	; select bank2
 14328  242C  00DF               	movwf	_step_03_load_percent^(0+256)
 14329                           
 14330                           ;ird_remote.c: 217: byte_l=eeprom_read(0x07);
 14331  242D  3007               	movlw	7
 14332  242E  2650  31A1         	fcall	_eeprom_read
 14333  2430  0020               	movlb	0	; select bank0
 14334  2431  00DB               	movwf	read_param_eeprom@byte_l
 14335                           
 14336                           ;ird_remote.c: 219: step_04_load_percent=byte_l;
 14337  2432  2684  31A1         	fcall	___lbtofl
 14338  2434  0830               	movf	?___lbtofl+3,w
 14339  2435  0022               	movlb	2	; select bank2
 14340  2436  00E6               	movwf	(_step_04_load_percent+3)^(0+256)
 14341  2437  0020               	movlb	0	; select bank0
 14342  2438  082F               	movf	?___lbtofl+2,w
 14343  2439  0022               	movlb	2	; select bank2
 14344  243A  00E5               	movwf	(_step_04_load_percent+2)^(0+256)
 14345  243B  0020               	movlb	0	; select bank0
 14346  243C  082E               	movf	?___lbtofl+1,w
 14347  243D  0022               	movlb	2	; select bank2
 14348  243E  00E4               	movwf	(_step_04_load_percent+1)^(0+256)
 14349  243F  0020               	movlb	0	; select bank0
 14350  2440  082D               	movf	?___lbtofl,w
 14351  2441  0022               	movlb	2	; select bank2
 14352  2442  00E3               	movwf	_step_04_load_percent^(0+256)
 14353                           
 14354                           ;ird_remote.c: 222: byte_l=eeprom_read(0x08);
 14355  2443  3008               	movlw	8
 14356  2444  2650  31A1         	fcall	_eeprom_read
 14357  2446  0020               	movlb	0	; select bank0
 14358  2447  00DB               	movwf	read_param_eeprom@byte_l
 14359                           
 14360                           ;ird_remote.c: 224: step_05_load_percent=byte_l;
 14361  2448  2684  31A1         	fcall	___lbtofl
 14362  244A  0830               	movf	?___lbtofl+3,w
 14363  244B  0022               	movlb	2	; select bank2
 14364  244C  00EA               	movwf	(_step_05_load_percent+3)^(0+256)
 14365  244D  0020               	movlb	0	; select bank0
 14366  244E  082F               	movf	?___lbtofl+2,w
 14367  244F  0022               	movlb	2	; select bank2
 14368  2450  00E9               	movwf	(_step_05_load_percent+2)^(0+256)
 14369  2451  0020               	movlb	0	; select bank0
 14370  2452  082E               	movf	?___lbtofl+1,w
 14371  2453  0022               	movlb	2	; select bank2
 14372  2454  00E8               	movwf	(_step_05_load_percent+1)^(0+256)
 14373  2455  0020               	movlb	0	; select bank0
 14374  2456  082D               	movf	?___lbtofl,w
 14375  2457  0022               	movlb	2	; select bank2
 14376  2458  00E7               	movwf	_step_05_load_percent^(0+256)
 14377                           
 14378                           ;ird_remote.c: 227: byte_l=eeprom_read(0x09);
 14379  2459  3009               	movlw	9
 14380  245A  2650  31A1         	fcall	_eeprom_read
 14381  245C  0020               	movlb	0	; select bank0
 14382  245D  00DB               	movwf	read_param_eeprom@byte_l
 14383                           
 14384                           ;ird_remote.c: 229: volt_id=byte_l;
 14385  245E  085B               	movf	read_param_eeprom@byte_l,w
 14386  245F  0021               	movlb	1	; select bank1
 14387  2460  00ED               	movwf	_volt_id^(0+128)
 14388                           
 14389                           ;ird_remote.c: 232: byte_l=eeprom_read(0x0a);
 14390  2461  300A               	movlw	10
 14391  2462  2650  31A1         	fcall	_eeprom_read
 14392  2464  0020               	movlb	0	; select bank0
 14393  2465  00DB               	movwf	read_param_eeprom@byte_l
 14394                           
 14395                           ;ird_remote.c: 234: bt_id=byte_l;
 14396  2466  085B               	movf	read_param_eeprom@byte_l,w
 14397  2467  0021               	movlb	1	; select bank1
 14398  2468  00EC               	movwf	_bt_id^(0+128)
 14399                           
 14400                           ;ird_remote.c: 236: byte_l=eeprom_read(0x0b);
 14401  2469  300B               	movlw	11
 14402  246A  2650  31A1         	fcall	_eeprom_read
 14403  246C  0020               	movlb	0	; select bank0
 14404  246D  00DB               	movwf	read_param_eeprom@byte_l
 14405                           
 14406                           ;ird_remote.c: 238: light_time=byte_l;
 14407  246E  0021               	movlb	1	; select bank1
 14408  246F  00DB               	movwf	_light_time^(0+128)
 14409  2470  300C               	movlw	12
 14410  2471  01DC               	clrf	(_light_time+1)^(0+128)
 14411                           
 14412                           ;ird_remote.c: 240: byte_l=eeprom_read(0x0c);
 14413  2472  2650  31A1         	fcall	_eeprom_read
 14414  2474  0020               	movlb	0	; select bank0
 14415  2475  00DB               	movwf	read_param_eeprom@byte_l
 14416                           
 14417                           ;ird_remote.c: 242: step_01_time_limit=byte_l;
 14418  2476  0021               	movlb	1	; select bank1
 14419  2477  00E5               	movwf	_step_01_time_limit^(0+128)
 14420  2478  300D               	movlw	13
 14421  2479  01E6               	clrf	(_step_01_time_limit+1)^(0+128)
 14422                           
 14423                           ;ird_remote.c: 244: byte_l=eeprom_read(0x0d);
 14424  247A  2650  31A1         	fcall	_eeprom_read
 14425  247C  0020               	movlb	0	; select bank0
 14426  247D  00DB               	movwf	read_param_eeprom@byte_l
 14427                           
 14428                           ;ird_remote.c: 246: step_02_time_limit=byte_l;
 14429  247E  0021               	movlb	1	; select bank1
 14430  247F  00E7               	movwf	_step_02_time_limit^(0+128)
 14431  2480  300E               	movlw	14
 14432  2481  01E8               	clrf	(_step_02_time_limit+1)^(0+128)
 14433                           
 14434                           ;ird_remote.c: 248: byte_l=eeprom_read(0x0e);
 14435  2482  2650  31A1         	fcall	_eeprom_read
 14436  2484  0020               	movlb	0	; select bank0
 14437  2485  00DB               	movwf	read_param_eeprom@byte_l
 14438                           
 14439                           ;ird_remote.c: 250: step_03_time_limit=byte_l;
 14440  2486  0021               	movlb	1	; select bank1
 14441  2487  00E9               	movwf	_step_03_time_limit^(0+128)
 14442  2488  300F               	movlw	15
 14443  2489  01EA               	clrf	(_step_03_time_limit+1)^(0+128)
 14444                           
 14445                           ;ird_remote.c: 252: byte_l=eeprom_read(0x0f);
 14446  248A  2650  31A1         	fcall	_eeprom_read
 14447  248C  0020               	movlb	0	; select bank0
 14448  248D  00DB               	movwf	read_param_eeprom@byte_l
 14449                           
 14450                           ;ird_remote.c: 254: step_04_time_limit=byte_l;
 14451  248E  0022               	movlb	2	; select bank2
 14452  248F  00EB               	movwf	_step_04_time_limit^(0+256)
 14453  2490  3010               	movlw	16
 14454  2491  01EC               	clrf	(_step_04_time_limit+1)^(0+256)
 14455                           
 14456                           ;ird_remote.c: 256: byte_l=eeprom_read(0x10);
 14457  2492  2650  31A1         	fcall	_eeprom_read
 14458  2494  0020               	movlb	0	; select bank0
 14459  2495  00DB               	movwf	read_param_eeprom@byte_l
 14460                           
 14461                           ;ird_remote.c: 258: step_05_time_limit=byte_l;
 14462  2496  0022               	movlb	2	; select bank2
 14463  2497  00ED               	movwf	_step_05_time_limit^(0+256)
 14464  2498  3011               	movlw	17
 14465  2499  01EE               	clrf	(_step_05_time_limit+1)^(0+256)
 14466                           
 14467                           ;ird_remote.c: 260: byte_l=eeprom_read(0x11);
 14468  249A  2650  31A1         	fcall	_eeprom_read
 14469  249C  0020               	movlb	0	; select bank0
 14470  249D  00DB               	movwf	read_param_eeprom@byte_l
 14471                           
 14472                           ;ird_remote.c: 262: today_index=byte_l;
 14473  249E  00EB               	movwf	_today_index
 14474                           
 14475                           ;ird_remote.c: 264: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
 14476  249F  3E08               	addlw	8
 14477  24A0  3907               	andlw	7
 14478  24A1  0709               	addwf	9,w
 14479  24A2  0709               	addwf	9,w
 14480  24A3  3E12               	addlw	18
 14481  24A4  2650               	fcall	_eeprom_read
 14482  24A5  0020               	movlb	0	; select bank0
 14483  24A6  00DA               	movwf	read_param_eeprom@byte_h
 14484                           
 14485                           ;ird_remote.c: 266: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
 14486  24A7  3187  270D  31A1   	fcall	PL102	;call to abstracted procedure
 14487  24AA  3E13               	addlw	19
 14488  24AB  2650  31A1         	fcall	_eeprom_read
 14489                           
 14490                           ;ird_remote.c: 268: bt_00_hv=(byte_h<<8)|byte_l;
 14491  24AD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14492  24AF  2667               	fcall	___awtofl
 14493  24B0  0830               	movf	?___awtofl+3,w
 14494  24B1  0024               	movlb	4	; select bank4
 14495  24B2  00A3               	movwf	(_bt_00_hv+3)^(0+512)
 14496  24B3  0020               	movlb	0	; select bank0
 14497  24B4  082F               	movf	?___awtofl+2,w
 14498  24B5  0024               	movlb	4	; select bank4
 14499  24B6  00A2               	movwf	(_bt_00_hv+2)^(0+512)
 14500  24B7  0020               	movlb	0	; select bank0
 14501  24B8  082E               	movf	?___awtofl+1,w
 14502  24B9  0024               	movlb	4	; select bank4
 14503  24BA  00A1               	movwf	(_bt_00_hv+1)^(0+512)
 14504  24BB  0020               	movlb	0	; select bank0
 14505  24BC  082D               	movf	?___awtofl,w
 14506  24BD  0024               	movlb	4	; select bank4
 14507  24BE  00A0               	movwf	_bt_00_hv^(0+512)
 14508                           
 14509                           ;ird_remote.c: 270: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
 14510  24BF  0020               	movlb	0	; select bank0
 14511  24C0  3187  270D  31A1   	fcall	PL102	;call to abstracted procedure
 14512  24C3  3E14               	addlw	20
 14513  24C4  2650               	fcall	_eeprom_read
 14514  24C5  0020               	movlb	0	; select bank0
 14515  24C6  00DA               	movwf	read_param_eeprom@byte_h
 14516                           
 14517                           ;ird_remote.c: 272: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
 14518  24C7  3187  270D  31A1   	fcall	PL102	;call to abstracted procedure
 14519  24CA  3E15               	addlw	21
 14520  24CB  2650  31A1         	fcall	_eeprom_read
 14521                           
 14522                           ;ird_remote.c: 274: bt_00_lv=(byte_h<<8)|byte_l;
 14523  24CD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14524  24CF  2667               	fcall	___awtofl
 14525  24D0  0830               	movf	?___awtofl+3,w
 14526  24D1  0024               	movlb	4	; select bank4
 14527  24D2  00A7               	movwf	(_bt_00_lv+3)^(0+512)
 14528  24D3  0020               	movlb	0	; select bank0
 14529  24D4  082F               	movf	?___awtofl+2,w
 14530  24D5  0024               	movlb	4	; select bank4
 14531  24D6  00A6               	movwf	(_bt_00_lv+2)^(0+512)
 14532  24D7  0020               	movlb	0	; select bank0
 14533  24D8  082E               	movf	?___awtofl+1,w
 14534  24D9  0024               	movlb	4	; select bank4
 14535  24DA  00A5               	movwf	(_bt_00_lv+1)^(0+512)
 14536  24DB  0020               	movlb	0	; select bank0
 14537  24DC  082D               	movf	?___awtofl,w
 14538  24DD  0024               	movlb	4	; select bank4
 14539  24DE  00A4               	movwf	_bt_00_lv^(0+512)
 14540                           
 14541                           ;ird_remote.c: 277: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
 14542  24DF  0020               	movlb	0	; select bank0
 14543  24E0  3187  27A8  31A1   	fcall	PL156	;call to abstracted procedure
 14544  24E3  3E12               	addlw	18
 14545  24E4  2650               	fcall	_eeprom_read
 14546  24E5  0020               	movlb	0	; select bank0
 14547  24E6  00DA               	movwf	read_param_eeprom@byte_h
 14548                           
 14549                           ;ird_remote.c: 279: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
 14550  24E7  3187  27A8  31A1   	fcall	PL156	;call to abstracted procedure
 14551  24EA  3E13               	addlw	19
 14552  24EB  2650  31A1         	fcall	_eeprom_read
 14553                           
 14554                           ;ird_remote.c: 281: bt_01_hv=(byte_h<<8)|byte_l;
 14555  24ED  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14556  24EF  2667               	fcall	___awtofl
 14557                           
 14558                           ;ird_remote.c: 283: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
 14559  24F0  3187  27A8  31A1   	fcall	PL156	;call to abstracted procedure
 14560  24F3  3E14               	addlw	20
 14561  24F4  2650               	fcall	_eeprom_read
 14562  24F5  0020               	movlb	0	; select bank0
 14563  24F6  00DA               	movwf	read_param_eeprom@byte_h
 14564                           
 14565                           ;ird_remote.c: 285: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
 14566  24F7  3187  27A8  31A1   	fcall	PL156	;call to abstracted procedure
 14567  24FA  3E15               	addlw	21
 14568  24FB  2650  31A1         	fcall	_eeprom_read
 14569                           
 14570                           ;ird_remote.c: 287: bt_01_lv=(byte_h<<8)|byte_l;
 14571  24FD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14572  24FF  2667               	fcall	___awtofl
 14573                           
 14574                           ;ird_remote.c: 290: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
 14575  2500  3187  27AE  31A1   	fcall	PL158	;call to abstracted procedure
 14576  2503  3E12               	addlw	18
 14577  2504  2650               	fcall	_eeprom_read
 14578  2505  0020               	movlb	0	; select bank0
 14579  2506  00DA               	movwf	read_param_eeprom@byte_h
 14580                           
 14581                           ;ird_remote.c: 292: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
 14582  2507  3187  27AE  31A1   	fcall	PL158	;call to abstracted procedure
 14583  250A  3E13               	addlw	19
 14584  250B  2650  31A1         	fcall	_eeprom_read
 14585                           
 14586                           ;ird_remote.c: 294: bt_02_hv=(byte_h<<8)|byte_l;
 14587  250D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14588  250F  2667               	fcall	___awtofl
 14589                           
 14590                           ;ird_remote.c: 296: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
 14591  2510  3187  27AE  31A1   	fcall	PL158	;call to abstracted procedure
 14592  2513  3E14               	addlw	20
 14593  2514  2650               	fcall	_eeprom_read
 14594  2515  0020               	movlb	0	; select bank0
 14595  2516  00DA               	movwf	read_param_eeprom@byte_h
 14596                           
 14597                           ;ird_remote.c: 298: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
 14598  2517  3187  27AE  31A1   	fcall	PL158	;call to abstracted procedure
 14599  251A  3E15               	addlw	21
 14600  251B  2650  31A1         	fcall	_eeprom_read
 14601                           
 14602                           ;ird_remote.c: 300: bt_02_lv=(byte_h<<8)|byte_l;
 14603  251D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14604  251F  2667               	fcall	___awtofl
 14605                           
 14606                           ;ird_remote.c: 303: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
 14607  2520  3187  27A2  31A1   	fcall	PL154	;call to abstracted procedure
 14608  2523  3E12               	addlw	18
 14609  2524  2650               	fcall	_eeprom_read
 14610  2525  0020               	movlb	0	; select bank0
 14611  2526  00DA               	movwf	read_param_eeprom@byte_h
 14612                           
 14613                           ;ird_remote.c: 305: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
 14614  2527  3187  27A2  31A1   	fcall	PL154	;call to abstracted procedure
 14615  252A  3E13               	addlw	19
 14616  252B  2650  31A1         	fcall	_eeprom_read
 14617                           
 14618                           ;ird_remote.c: 307: bt_03_hv=(byte_h<<8)|byte_l;
 14619  252D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14620  252F  2667               	fcall	___awtofl
 14621                           
 14622                           ;ird_remote.c: 309: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
 14623  2530  3187  27A2  31A1   	fcall	PL154	;call to abstracted procedure
 14624  2533  3E14               	addlw	20
 14625  2534  2650               	fcall	_eeprom_read
 14626  2535  0020               	movlb	0	; select bank0
 14627  2536  00DA               	movwf	read_param_eeprom@byte_h
 14628                           
 14629                           ;ird_remote.c: 311: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
 14630  2537  3187  27A2  31A1   	fcall	PL154	;call to abstracted procedure
 14631  253A  3E15               	addlw	21
 14632  253B  2650  31A1         	fcall	_eeprom_read
 14633                           
 14634                           ;ird_remote.c: 313: bt_03_lv=(byte_h<<8)|byte_l;
 14635  253D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14636  253F  2667               	fcall	___awtofl
 14637                           
 14638                           ;ird_remote.c: 316: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
 14639  2540  3187  279C  31A1   	fcall	PL152	;call to abstracted procedure
 14640  2543  3E12               	addlw	18
 14641  2544  2650               	fcall	_eeprom_read
 14642  2545  0020               	movlb	0	; select bank0
 14643  2546  00DA               	movwf	read_param_eeprom@byte_h
 14644                           
 14645                           ;ird_remote.c: 318: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
 14646  2547  3187  279C  31A1   	fcall	PL152	;call to abstracted procedure
 14647  254A  3E13               	addlw	19
 14648  254B  2650  31A1         	fcall	_eeprom_read
 14649                           
 14650                           ;ird_remote.c: 320: bt_04_hv=(byte_h<<8)|byte_l;
 14651  254D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14652  254F  2667               	fcall	___awtofl
 14653                           
 14654                           ;ird_remote.c: 322: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
 14655  2550  3187  279C  31A1   	fcall	PL152	;call to abstracted procedure
 14656  2553  3E14               	addlw	20
 14657  2554  2650               	fcall	_eeprom_read
 14658  2555  0020               	movlb	0	; select bank0
 14659  2556  00DA               	movwf	read_param_eeprom@byte_h
 14660                           
 14661                           ;ird_remote.c: 324: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
 14662  2557  3187  279C  31A1   	fcall	PL152	;call to abstracted procedure
 14663  255A  3E15               	addlw	21
 14664  255B  2650  31A1         	fcall	_eeprom_read
 14665                           
 14666                           ;ird_remote.c: 326: bt_04_lv=(byte_h<<8)|byte_l;
 14667  255D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14668  255F  2667               	fcall	___awtofl
 14669                           
 14670                           ;ird_remote.c: 329: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
 14671  2560  3187  278A  31A1   	fcall	PL144	;call to abstracted procedure
 14672  2563  3E12               	addlw	18
 14673  2564  2650               	fcall	_eeprom_read
 14674  2565  0020               	movlb	0	; select bank0
 14675  2566  00DA               	movwf	read_param_eeprom@byte_h
 14676                           
 14677                           ;ird_remote.c: 331: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
 14678  2567  3187  278A  31A1   	fcall	PL144	;call to abstracted procedure
 14679  256A  3E13               	addlw	19
 14680  256B  2650  31A1         	fcall	_eeprom_read
 14681                           
 14682                           ;ird_remote.c: 333: bt_05_hv=(byte_h<<8)|byte_l;
 14683  256D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14684  256F  2667               	fcall	___awtofl
 14685                           
 14686                           ;ird_remote.c: 335: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
 14687  2570  3187  278A  31A1   	fcall	PL144	;call to abstracted procedure
 14688  2573  3E14               	addlw	20
 14689  2574  2650               	fcall	_eeprom_read
 14690  2575  0020               	movlb	0	; select bank0
 14691  2576  00DA               	movwf	read_param_eeprom@byte_h
 14692                           
 14693                           ;ird_remote.c: 337: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
 14694  2577  3187  278A  31A1   	fcall	PL144	;call to abstracted procedure
 14695  257A  3E15               	addlw	21
 14696  257B  2650  31A1         	fcall	_eeprom_read
 14697                           
 14698                           ;ird_remote.c: 339: bt_05_lv=(byte_h<<8)|byte_l;
 14699  257D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14700  257F  2667               	fcall	___awtofl
 14701                           
 14702                           ;ird_remote.c: 342: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
 14703  2580  3187  2790  31A1   	fcall	PL146	;call to abstracted procedure
 14704  2583  3E12               	addlw	18
 14705  2584  2650               	fcall	_eeprom_read
 14706  2585  0020               	movlb	0	; select bank0
 14707  2586  00DA               	movwf	read_param_eeprom@byte_h
 14708                           
 14709                           ;ird_remote.c: 344: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
 14710  2587  3187  2790  31A1   	fcall	PL146	;call to abstracted procedure
 14711  258A  3E13               	addlw	19
 14712  258B  2650  31A1         	fcall	_eeprom_read
 14713                           
 14714                           ;ird_remote.c: 346: bt_06_hv=(byte_h<<8)|byte_l;
 14715  258D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14716  258F  2667               	fcall	___awtofl
 14717                           
 14718                           ;ird_remote.c: 348: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
 14719  2590  3187  2790  31A1   	fcall	PL146	;call to abstracted procedure
 14720  2593  3E14               	addlw	20
 14721  2594  2650               	fcall	_eeprom_read
 14722  2595  0020               	movlb	0	; select bank0
 14723  2596  00DA               	movwf	read_param_eeprom@byte_h
 14724                           
 14725                           ;ird_remote.c: 350: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
 14726  2597  3187  2790  31A1   	fcall	PL146	;call to abstracted procedure
 14727  259A  3E15               	addlw	21
 14728  259B  2650  31A1         	fcall	_eeprom_read
 14729                           
 14730                           ;ird_remote.c: 352: bt_06_lv=(byte_h<<8)|byte_l;
 14731  259D  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14732  259F  2667               	fcall	___awtofl
 14733                           
 14734                           ;ird_remote.c: 355: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
 14735  25A0  3187  2796  31A1   	fcall	PL150	;call to abstracted procedure
 14736  25A3  3E12               	addlw	18
 14737  25A4  2650               	fcall	_eeprom_read
 14738  25A5  0020               	movlb	0	; select bank0
 14739  25A6  00DA               	movwf	read_param_eeprom@byte_h
 14740                           
 14741                           ;ird_remote.c: 357: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
 14742  25A7  3187  2796  31A1   	fcall	PL150	;call to abstracted procedure
 14743  25AA  3E13               	addlw	19
 14744  25AB  2650  31A1         	fcall	_eeprom_read
 14745                           
 14746                           ;ird_remote.c: 359: bt_07_hv=(byte_h<<8)|byte_l;
 14747  25AD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14748  25AF  2667               	fcall	___awtofl
 14749                           
 14750                           ;ird_remote.c: 361: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
 14751  25B0  3187  2796  31A1   	fcall	PL150	;call to abstracted procedure
 14752  25B3  3E14               	addlw	20
 14753  25B4  2650               	fcall	_eeprom_read
 14754  25B5  0020               	movlb	0	; select bank0
 14755  25B6  00DA               	movwf	read_param_eeprom@byte_h
 14756                           
 14757                           ;ird_remote.c: 363: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
 14758  25B7  3187  2796  31A1   	fcall	PL150	;call to abstracted procedure
 14759  25BA  3E15               	addlw	21
 14760  25BB  2650  31A1         	fcall	_eeprom_read
 14761                           
 14762                           ;ird_remote.c: 365: bt_07_lv=(byte_h<<8)|byte_l;
 14763  25BD  2789  31A1         	fcall	PL30	;call to abstracted procedure
 14764  25BF  2667  31A1         	fcall	___awtofl
 14765                           
 14766                           ;ird_remote.c: 368: byte_l=eeprom_read(0x36);
 14767  25C1  3036               	movlw	54
 14768  25C2  2650  31A1         	fcall	_eeprom_read
 14769  25C4  0020               	movlb	0	; select bank0
 14770  25C5  00DB               	movwf	read_param_eeprom@byte_l
 14771                           
 14772                           ;ird_remote.c: 370: light_mode=byte_l;
 14773  25C6  085B               	movf	read_param_eeprom@byte_l,w
 14774  25C7  0021               	movlb	1	; select bank1
 14775  25C8  00D7               	movwf	_light_mode^(0+128)
 14776  25C9  3037               	movlw	55
 14777  25CA  2650  31A1         	fcall	_eeprom_read
 14778                           
 14779                           ;ird_remote.c: 377: byte_l=eeprom_read(0x38);
 14780  25CC  3038               	movlw	56
 14781  25CD  2650  31A1         	fcall	_eeprom_read
 14782  25CF  0020               	movlb	0	; select bank0
 14783  25D0  00DB               	movwf	read_param_eeprom@byte_l
 14784                           
 14785                           ;ird_remote.c: 379: device_status=byte_l;
 14786  25D1  00EA               	movwf	_device_status
 14787                           
 14788                           ;ird_remote.c: 381: if(device_status==0x00)
 14789  25D2  08EA               	movf	_device_status,f
 14790  25D3  1D03               	skipz
 14791  25D4  2DD9               	goto	l16474
 14792                           
 14793                           ;ird_remote.c: 382: {
 14794                           ;ird_remote.c: 383: work_mode =0x04;
 14795  25D5  3004               	movlw	4
 14796  25D6  0021               	movlb	1	; select bank1
 14797  25D7  00DA               	movwf	_work_mode^(0+128)
 14798                           
 14799                           ;ird_remote.c: 384: }
 14800  25D8  2DDB               	goto	l16476
 14801  25D9                     l16474:	
 14802                           
 14803                           ;ird_remote.c: 385: else
 14804                           ;ird_remote.c: 386: {
 14805                           ;ird_remote.c: 387: work_mode =0x00;
 14806  25D9  0021               	movlb	1	; select bank1
 14807  25DA  01DA               	clrf	_work_mode^(0+128)
 14808  25DB                     l16476:	
 14809                           
 14810                           ;ird_remote.c: 388: }
 14811                           ;ird_remote.c: 390: byte_l=eeprom_read(0x39);
 14812  25DB  3039               	movlw	57
 14813  25DC  2650  31A1         	fcall	_eeprom_read
 14814  25DE  0020               	movlb	0	; select bank0
 14815  25DF  00DB               	movwf	read_param_eeprom@byte_l
 14816                           
 14817                           ;ird_remote.c: 392: led_out_ctrl=byte_l;
 14818  25E0  0021               	movlb	1	; select bank1
 14819  25E1  00D6               	movwf	_led_out_ctrl^(0+128)
 14820                           
 14821                           ;ird_remote.c: 397: if(light_time==0x00)
 14822  25E2  085C               	movf	(_light_time+1)^(0+128),w
 14823  25E3  045B               	iorwf	_light_time^(0+128),w
 14824  25E4  1D03               	skipz
 14825  25E5  2DED               	goto	l16484
 14826                           
 14827                           ;ird_remote.c: 398: {
 14828                           ;ird_remote.c: 399: light_time_level = 500;
 14829  25E6  0023               	movlb	3	; select bank3
 14830  25E7  3001               	movlw	1
 14831  25E8  01A3               	clrf	(_light_time_level+3)^(0+384)
 14832  25E9  01A2               	clrf	(_light_time_level+2)^(0+384)
 14833  25EA  00A1               	movwf	(_light_time_level+1)^(0+384)
 14834  25EB  30F4               	movlw	244
 14835  25EC  2E0C               	goto	L3
 14836  25ED                     l16484:	
 14837                           ;ird_remote.c: 400: }
 14838                           
 14839                           
 14840                           ;ird_remote.c: 401: else
 14841                           ;ird_remote.c: 402: {
 14842                           ;ird_remote.c: 403: light_time_level = (unsigned long int)((unsigned long int)light_time
      +                          *6*180);
 14843  25ED  085B               	movf	_light_time^(0+128),w
 14844  25EE  0020               	movlb	0	; select bank0
 14845  25EF  00A3               	movwf	___lmul@multiplier
 14846  25F0  0021               	movlb	1	; select bank1
 14847  25F1  085C               	movf	(_light_time+1)^(0+128),w
 14848  25F2  0020               	movlb	0	; select bank0
 14849  25F3  00A4               	movwf	___lmul@multiplier+1
 14850  25F4  3004               	movlw	4
 14851  25F5  01A5               	clrf	___lmul@multiplier+2
 14852  25F6  01A6               	clrf	___lmul@multiplier+3
 14853  25F7  01AA               	clrf	___lmul@multiplicand+3
 14854  25F8  01A9               	clrf	___lmul@multiplicand+2
 14855  25F9  00A8               	movwf	___lmul@multiplicand+1
 14856  25FA  3038               	movlw	56
 14857  25FB  00A7               	movwf	___lmul@multiplicand
 14858  25FC  2697  31A1         	fcall	___lmul
 14859  25FE  0826               	movf	?___lmul+3,w
 14860  25FF  0023               	movlb	3	; select bank3
 14861  2600  00A3               	movwf	(_light_time_level+3)^(0+384)
 14862  2601  0020               	movlb	0	; select bank0
 14863  2602  0825               	movf	?___lmul+2,w
 14864  2603  0023               	movlb	3	; select bank3
 14865  2604  00A2               	movwf	(_light_time_level+2)^(0+384)
 14866  2605  0020               	movlb	0	; select bank0
 14867  2606  0824               	movf	?___lmul+1,w
 14868  2607  0023               	movlb	3	; select bank3
 14869  2608  00A1               	movwf	(_light_time_level+1)^(0+384)
 14870  2609  0020               	movlb	0	; select bank0
 14871  260A  0823               	movf	?___lmul,w
 14872  260B  0023               	movlb	3	; select bank3
 14873  260C                     L3:	
 14874  260C  00A0               	movwf	_light_time_level^(0+384)
 14875                           
 14876                           ;ird_remote.c: 409: {
 14877                           ;ird_remote.c: 410: bt_volt_100 = (12.35/31.04)*1000;
 14878  260D  0021               	movlb	1	; select bank1
 14879  260E  036D               	decf	_volt_id^(0+128),w
 14880                           
 14881                           ;ird_remote.c: 412: bt_volt_80 = (11.80/31.04)*1000;
 14882  260F  3043               	movlw	67
 14883  2610  1D03               	skipz
 14884  2611  2E46               	goto	L4
 14885  2612  0024               	movlb	4	; select bank4
 14886                           
 14887                           ;ird_remote.c: 414: bt_volt_60 = (11.30/31.04)*1000;
 14888                           
 14889                           ;ird_remote.c: 416: bt_volt_40 = (10.80/31.04)*1000;
 14890                           
 14891                           ;ird_remote.c: 418: bt_volt_20 = (10.30/31.04)*1000;
 14892                           
 14893                           ;ird_remote.c: 420: bt_volt_00 = (9.00/31.04)*1000;
 14894                           
 14895                           ;ird_remote.c: 423: dianchi_guoya_baohu = (12.35/31.04)*1000;
 14896                           
 14897                           ;ird_remote.c: 425: dianchi_guoya_huifu = (12.15/31.04)*1000;
 14898                           
 14899                           ;ird_remote.c: 427: dianchi_qianya_baohu = (9.00/31.04)*1000;
 14900                           
 14901                           ;ird_remote.c: 429: dianchi_qianya_huifu = (9.50/31.04)*1000;
 14902                           
 14903                           ;ird_remote.c: 431: dianchi_cv_level = (12.20/31.04)*1000;
 14904                           
 14905                           ;ird_remote.c: 433: charge_i_limit = 5.00*15.0;
 14906                           
 14907                           ;ird_remote.c: 435: shuchu_shortout_voltage = (7.50/61)*1000;
 14908                           
 14909                           ;ird_remote.c: 437: shuchu_open_voltage = (61.00/61)*1000;
 14910                           
 14911                           ;ird_remote.c: 439: discharge_i_baohu = 4.50*160.0;
 14912                           
 14913                           ;ird_remote.c: 441: discharge_i_limit = 4.00*160.0;
 14914  2613  26FC  31A1         	fcall	PL6	;call to abstracted procedure
 14915                           
 14916                           ;ird_remote.c: 443: light_on_pv_level = (light_pv*10)/61;
 14917  2615  0020               	movlb	0	; select bank0
 14918  2616  00CA               	movwf	___fldiv@f2+3
 14919  2617  3074               	movlw	116
 14920  2618  00C9               	movwf	___fldiv@f2+2
 14921  2619  3041               	movlw	65
 14922  261A  01C8               	clrf	___fldiv@f2+1
 14923  261B  01C7               	clrf	___fldiv@f2
 14924  261C  00B7               	movwf	___flmul@f1+3
 14925  261D  3020               	movlw	32
 14926  261E  00B6               	movwf	___flmul@f1+2
 14927  261F  01B5               	clrf	___flmul@f1+1
 14928  2620  01B4               	clrf	___flmul@f1
 14929  2621  0021               	movlb	1	; select bank1
 14930  2622  0860               	movf	(_light_pv+3)^(0+128),w
 14931  2623  0020               	movlb	0	; select bank0
 14932  2624  00BB               	movwf	___flmul@f2+3
 14933  2625  0021               	movlb	1	; select bank1
 14934  2626  085F               	movf	(_light_pv+2)^(0+128),w
 14935  2627  0020               	movlb	0	; select bank0
 14936  2628  00BA               	movwf	___flmul@f2+2
 14937  2629  0021               	movlb	1	; select bank1
 14938  262A  085E               	movf	(_light_pv+1)^(0+128),w
 14939  262B  0020               	movlb	0	; select bank0
 14940  262C  00B9               	movwf	___flmul@f2+1
 14941  262D  0021               	movlb	1	; select bank1
 14942  262E  085D               	movf	_light_pv^(0+128),w
 14943  262F  0020               	movlb	0	; select bank0
 14944  2630  00B8               	movwf	___flmul@f2
 14945  2631  22FC               	fcall	___flmul
 14946  2632  31B4  2453  31A1   	fcall	PL82	;call to abstracted procedure
 14947  2635  2291  31A1         	fcall	___fldiv
 14948  2637  084A               	movf	?___fldiv+3,w
 14949  2638  0025               	movlb	5	; select bank5
 14950  2639  00E3               	movwf	(_light_on_pv_level+3)^(0+640)
 14951  263A  0020               	movlb	0	; select bank0
 14952  263B  0849               	movf	?___fldiv+2,w
 14953  263C  0025               	movlb	5	; select bank5
 14954  263D  00E2               	movwf	(_light_on_pv_level+2)^(0+640)
 14955  263E  0020               	movlb	0	; select bank0
 14956  263F  0848               	movf	?___fldiv+1,w
 14957  2640  0025               	movlb	5	; select bank5
 14958  2641  00E1               	movwf	(_light_on_pv_level+1)^(0+640)
 14959  2642  0020               	movlb	0	; select bank0
 14960  2643  0847               	movf	?___fldiv,w
 14961  2644  0025               	movlb	5	; select bank5
 14962                           
 14963                           ;ird_remote.c: 445: light_off_pv_level = (10.0/61)*1000;
 14964                           
 14965                           ;ird_remote.c: 447: Load_Pmax=41.00;
 14966                           
 14967                           ;ird_remote.c: 449: }
 14968  2645  2FCF               	ljmp	PL112	;call to abstracted procedure
 14969  2646                     L4:	
 14970                           ;ird_remote.c: 454: bt_volt_80 = (11.80/31.04)*1000;
 14971                           
 14972  2646  0024               	movlb	4	; select bank4
 14973                           
 14974                           ;ird_remote.c: 456: bt_volt_60 = (11.30/31.04)*1000;
 14975                           
 14976                           ;ird_remote.c: 458: bt_volt_40 = (10.80/31.04)*1000;
 14977                           
 14978                           ;ird_remote.c: 460: bt_volt_20 = (10.30/31.04)*1000;
 14979                           
 14980                           ;ird_remote.c: 462: bt_volt_00 = (9.00/31.04)*1000;
 14981                           
 14982                           ;ird_remote.c: 465: dianchi_guoya_baohu = (12.35/31.04)*1000;
 14983                           
 14984                           ;ird_remote.c: 467: dianchi_guoya_huifu = (12.15/31.04)*1000;
 14985                           
 14986                           ;ird_remote.c: 469: dianchi_qianya_baohu = (9.00/31.04)*1000;
 14987                           
 14988                           ;ird_remote.c: 471: dianchi_qianya_huifu = (9.50/31.04)*1000;
 14989                           
 14990                           ;ird_remote.c: 473: dianchi_cv_level = (12.20/31.04)*1000;
 14991                           
 14992                           ;ird_remote.c: 475: charge_i_limit = 5.00*15.0;
 14993                           
 14994                           ;ird_remote.c: 477: shuchu_shortout_voltage = (7.50/61)*1000;
 14995                           
 14996                           ;ird_remote.c: 479: shuchu_open_voltage = (61.00/61)*1000;
 14997                           
 14998                           ;ird_remote.c: 481: discharge_i_baohu = 4.50*160.0;
 14999                           
 15000                           ;ird_remote.c: 483: discharge_i_limit = 4.00*160.0;
 15001  2647  26FC  31A1         	fcall	PL6	;call to abstracted procedure
 15002                           
 15003                           ;ird_remote.c: 485: light_on_pv_level = (5.0/61)*1000;
 15004  2649  00E3               	movwf	(_light_on_pv_level+3)^(0+640)
 15005  264A  30A3               	movlw	163
 15006  264B  00E2               	movwf	(_light_on_pv_level+2)^(0+640)
 15007  264C  30EF               	movlw	239
 15008  264D  00E1               	movwf	(_light_on_pv_level+1)^(0+640)
 15009  264E  3037               	movlw	55
 15010                           
 15011                           ;ird_remote.c: 487: light_off_pv_level = (10.0/61)*1000;
 15012                           
 15013                           ;ird_remote.c: 489: Load_Pmax=41.00;
 15014  264F  2FCF               	ljmp	PL112	;call to abstracted procedure
 15015  2650                     __end_of_read_param_eeprom:	
 15016  2650                     __ptext7:	
 15017 ;; *************** function _eeprom_read *****************
 15018 ;; Defined at:
 15019 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  addr            1    wreg     unsigned char 
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;  addr            1    3[BANK0 ] unsigned char 
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      unsigned char 
 15026 ;; Registers used:
 15027 ;;		wreg, status,2, status,0
 15028 ;; Tracked objects:
 15029 ;;		On entry : 0/2
 15030 ;;		On exit  : 1F/3
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;Total ram usage:        1 bytes
 15038 ;; Hardware stack levels used:    1
 15039 ;; Hardware stack levels required when called:    2
 15040 ;; This function calls:
 15041 ;;		Nothing
 15042 ;; This function is called by:
 15043 ;;		_read_param_eeprom
 15044 ;;		_auto_system
 15045 ;;		_handle_uart_rx_buf
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           
 15050                           ;psect for function _eeprom_read
 15051  2650                     _eeprom_read:	
 15052                           
 15053                           ;incstack = 0
 15054                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
 15055                           ;eeprom_read@addr stored from wreg
 15056  2650  0020               	movlb	0	; select bank0
 15057  2651  00A3               	movwf	eeprom_read@addr
 15058  2652  2E54               	goto	l1831
 15059  2653                     u8841:	
 15060  2653  0020               	movlb	0	; select bank0
 15061  2654                     l1831:	
 15062  2654  0064               	clrwdt	;# 
 15063  2655  0023               	movlb	3	; select bank3
 15064  2656  1895               	btfsc	21,1	;volsfr
 15065  2657  2E53               	goto	u8841
 15066  2658  0020               	movlb	0	; select bank0
 15067  2659  0823               	movf	eeprom_read@addr,w
 15068  265A  0023               	movlb	3	; select bank3
 15069  265B  0091               	movwf	17	;volatile
 15070  265C  0192               	clrf	18	;volatile
 15071  265D  303F               	movlw	63
 15072  265E  0595               	andwf	21,f	;volsfr
 15073  265F  1415               	bsf	21,0	;volsfr
 15074  2660  1003               	clrc
 15075  2661  1815               	btfsc	21,0	;volsfr
 15076  2662  1403               	setc
 15077  2663  3000               	movlw	0
 15078  2664  3D09               	addwfc	9,w
 15079  2665  0813               	movf	19,w	;volatile
 15080  2666  0008               	return
 15081  2667                     __end_of_eeprom_read:	
 15082  2667                     __ptext21:	
 15083 ;; *************** function ___awtofl *****************
 15084 ;; Defined at:
 15085 ;;		line 31 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtofl.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;  c               2   13[BANK0 ] int 
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;  f1              4    0        int 
 15090 ;;  sign            1   17[BANK0 ] unsigned char 
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  4   13[BANK0 ] unsigned char 
 15093 ;; Registers used:
 15094 ;;		wreg, status,2, status,0, pclath, cstack
 15095 ;; Tracked objects:
 15096 ;;		On entry : 1F/0
 15097 ;;		On exit  : 1F/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;Total ram usage:        5 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:    3
 15107 ;; This function calls:
 15108 ;;		___flpack
 15109 ;; This function is called by:
 15110 ;;		_read_param_eeprom
 15111 ;;		_pid_calc
 15112 ;;		_handle_ad_loop
 15113 ;;		_handle_uart_rx_buf
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           
 15118                           ;psect for function ___awtofl
 15119  2667                     ___awtofl:	
 15120                           
 15121                           ;incstack = 0
 15122                           ; Regs used in ___awtofl: [wreg+status,2+status,0+pclath+cstack]
 15123  2667  01B1               	clrf	___awtofl@sign
 15124  2668  1FAE               	btfss	___awtofl@c+1,7
 15125  2669  2E70               	goto	l18948
 15126  266A  09AD               	comf	___awtofl@c,f
 15127  266B  09AE               	comf	___awtofl@c+1,f
 15128  266C  0AAD               	incf	___awtofl@c,f
 15129  266D  1903               	skipnz
 15130  266E  0AAE               	incf	___awtofl@c+1,f
 15131  266F  0AB1               	incf	___awtofl@sign,f
 15132  2670                     l18948:	
 15133  2670  082D               	movf	___awtofl@c,w
 15134  2671  00A3               	movwf	___flpack@arg
 15135  2672  082E               	movf	___awtofl@c+1,w
 15136  2673  00A4               	movwf	___flpack@arg+1
 15137  2674  3096               	movlw	150
 15138  2675  01A5               	clrf	___flpack@arg+2
 15139  2676  01A6               	clrf	___flpack@arg+3
 15140  2677  00A7               	movwf	___flpack@exp
 15141  2678  0831               	movf	___awtofl@sign,w
 15142  2679  00A8               	movwf	___flpack@sign
 15143  267A  236A               	fcall	___flpack
 15144  267B  0826               	movf	?___flpack+3,w
 15145  267C  00B0               	movwf	?___awtofl+3
 15146  267D  0825               	movf	?___flpack+2,w
 15147  267E  00AF               	movwf	?___awtofl+2
 15148  267F  0824               	movf	?___flpack+1,w
 15149  2680  00AE               	movwf	?___awtofl+1
 15150  2681  0823               	movf	?___flpack,w
 15151  2682  00AD               	movwf	?___awtofl
 15152  2683  0008               	return
 15153  2684                     __end_of___awtofl:	
 15154  2684                     __ptext9:	
 15155 ;; *************** function ___lbtofl *****************
 15156 ;; Defined at:
 15157 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtofl.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;  c               1    wreg     unsigned char 
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;  c               1   18[BANK0 ] unsigned char 
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  4   13[BANK0 ] unsigned char 
 15164 ;; Registers used:
 15165 ;;		wreg, status,2, status,0, pclath, cstack
 15166 ;; Tracked objects:
 15167 ;;		On entry : 17/0
 15168 ;;		On exit  : 1F/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15171 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;Total ram usage:        6 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; Hardware stack levels required when called:    3
 15178 ;; This function calls:
 15179 ;;		___flpack
 15180 ;; This function is called by:
 15181 ;;		_read_param_eeprom
 15182 ;;		_handle_uart_rx_buf
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           
 15187                           ;psect for function ___lbtofl
 15188  2684                     ___lbtofl:	
 15189                           
 15190                           ;incstack = 0
 15191                           ; Regs used in ___lbtofl: [wreg+status,2+status,0+pclath+cstack]
 15192                           ;___lbtofl@c stored from wreg
 15193  2684  0020               	movlb	0	; select bank0
 15194  2685  00B2               	movwf	___lbtofl@c
 15195  2686  00A3               	movwf	___flpack@arg
 15196  2687  3096               	movlw	150
 15197  2688  01A4               	clrf	___flpack@arg+1
 15198  2689  01A5               	clrf	___flpack@arg+2
 15199  268A  01A6               	clrf	___flpack@arg+3
 15200  268B  00A7               	movwf	___flpack@exp
 15201  268C  01A8               	clrf	___flpack@sign
 15202  268D  236A               	fcall	___flpack
 15203  268E  0826               	movf	?___flpack+3,w
 15204  268F  00B0               	movwf	?___lbtofl+3
 15205  2690  0825               	movf	?___flpack+2,w
 15206  2691  00AF               	movwf	?___lbtofl+2
 15207  2692  0824               	movf	?___flpack+1,w
 15208  2693  00AE               	movwf	?___lbtofl+1
 15209  2694  0823               	movf	?___flpack,w
 15210  2695  00AD               	movwf	?___lbtofl
 15211  2696  0008               	return
 15212  2697                     __end_of___lbtofl:	
 15213  2697                     __ptext4:	
 15214 ;; *************** function ___lmul *****************
 15215 ;; Defined at:
 15216 ;;		line 2 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;  multiplier      4    3[BANK0 ] unsigned long 
 15219 ;;  multiplicand    4    7[BANK0 ] unsigned long 
 15220 ;; Auto vars:     Size  Location     Type
 15221 ;;  product         4   11[BANK0 ] unsigned long 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  4    3[BANK0 ] unsigned long 
 15224 ;; Registers used:
 15225 ;;		wreg, status,2, status,0
 15226 ;; Tracked objects:
 15227 ;;		On entry : 1F/0
 15228 ;;		On exit  : 1F/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;Total ram usage:       12 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    2
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		_read_param_eeprom
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           
 15246                           ;psect for function ___lmul
 15247  2697                     ___lmul:	
 15248                           
 15249                           ;incstack = 0
 15250                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 15251  2697  01AB               	clrf	___lmul@product
 15252  2698  01AC               	clrf	___lmul@product+1
 15253  2699  01AD               	clrf	___lmul@product+2
 15254  269A  01AE               	clrf	___lmul@product+3
 15255  269B                     l2223:	
 15256  269B  1C23               	btfss	___lmul@multiplier,0
 15257  269C  2EA5               	goto	l15346
 15258  269D  0827               	movf	___lmul@multiplicand,w
 15259  269E  07AB               	addwf	___lmul@product,f
 15260  269F  0828               	movf	___lmul@multiplicand+1,w
 15261  26A0  3DAC               	addwfc	___lmul@product+1,f
 15262  26A1  0829               	movf	___lmul@multiplicand+2,w
 15263  26A2  3DAD               	addwfc	___lmul@product+2,f
 15264  26A3  082A               	movf	___lmul@multiplicand+3,w
 15265  26A4  3DAE               	addwfc	___lmul@product+3,f
 15266  26A5                     l15346:	
 15267  26A5  35A7               	lslf	___lmul@multiplicand,f
 15268  26A6  0DA8               	rlf	___lmul@multiplicand+1,f
 15269  26A7  0DA9               	rlf	___lmul@multiplicand+2,f
 15270  26A8  0DAA               	rlf	___lmul@multiplicand+3,f
 15271  26A9  36A6               	lsrf	___lmul@multiplier+3,f
 15272  26AA  0CA5               	rrf	___lmul@multiplier+2,f
 15273  26AB  0CA4               	rrf	___lmul@multiplier+1,f
 15274  26AC  0CA3               	rrf	___lmul@multiplier,f
 15275  26AD  0826               	movf	___lmul@multiplier+3,w
 15276  26AE  0425               	iorwf	___lmul@multiplier+2,w
 15277  26AF  0424               	iorwf	___lmul@multiplier+1,w
 15278  26B0  0423               	iorwf	___lmul@multiplier,w
 15279  26B1  1D03               	skipz
 15280  26B2  2E9B               	goto	l2223
 15281  26B3  082E               	movf	___lmul@product+3,w
 15282  26B4  00A6               	movwf	?___lmul+3
 15283  26B5  082D               	movf	___lmul@product+2,w
 15284  26B6  00A5               	movwf	?___lmul+2
 15285  26B7  082C               	movf	___lmul@product+1,w
 15286  26B8  00A4               	movwf	?___lmul+1
 15287  26B9  082B               	movf	___lmul@product,w
 15288  26BA  00A3               	movwf	?___lmul
 15289  26BB  0008               	return
 15290  26BC                     __end_of___lmul:	
 15291  26BC                     PL2:	
 15292  26BC  303A               	movlw	58
 15293  26BD  0026               	movlb	6	; select bank6
 15294  26BE  00A7               	movwf	((_PID_CC_charge+3)^(0+768)+4)
 15295  26BF  3083               	movlw	131
 15296  26C0  00A6               	movwf	((_PID_CC_charge+2)^(0+768)+4)
 15297  26C1  3012               	movlw	18
 15298  26C2  00A5               	movwf	((_PID_CC_charge+1)^(0+768)+4)
 15299  26C3  306F               	movlw	111
 15300  26C4  00A4               	movwf	(_PID_CC_charge^(0+768)+4)
 15301  26C5  3042               	movlw	66
 15302  26C6  01A8               	clrf	(_PID_CC_charge^(0+768)+8)
 15303  26C7  01A9               	clrf	((_PID_CC_charge+1)^(0+768)+8)
 15304  26C8  01AA               	clrf	((_PID_CC_charge+2)^(0+768)+8)
 15305  26C9  01AB               	clrf	((_PID_CC_charge+3)^(0+768)+8)
 15306  26CA  01AC               	clrf	(_PID_CC_charge^(0+768)+12)
 15307  26CB  01AD               	clrf	((_PID_CC_charge+1)^(0+768)+12)
 15308  26CC  01AE               	clrf	((_PID_CC_charge+2)^(0+768)+12)
 15309  26CD  01AF               	clrf	((_PID_CC_charge+3)^(0+768)+12)
 15310  26CE  00A3               	movwf	(_PID_CC_charge+3)^(0+768)
 15311  26CF  3096               	movlw	150
 15312  26D0  00A2               	movwf	(_PID_CC_charge+2)^(0+768)
 15313  26D1  303A               	movlw	58
 15314  26D2  01A1               	clrf	(_PID_CC_charge+1)^(0+768)
 15315  26D3  01A0               	clrf	_PID_CC_charge^(0+768)
 15316  26D4  0025               	movlb	5	; select bank5
 15317  26D5  00B3               	movwf	((_PID_CV_charge+3)^(0+640)+4)
 15318  26D6  3083               	movlw	131
 15319  26D7  00B2               	movwf	((_PID_CV_charge+2)^(0+640)+4)
 15320  26D8  3012               	movlw	18
 15321  26D9  00B1               	movwf	((_PID_CV_charge+1)^(0+640)+4)
 15322  26DA  306F               	movlw	111
 15323  26DB  00B0               	movwf	(_PID_CV_charge^(0+640)+4)
 15324  26DC  303F               	movlw	63
 15325  26DD  01B4               	clrf	(_PID_CV_charge^(0+640)+8)
 15326  26DE  01B5               	clrf	((_PID_CV_charge+1)^(0+640)+8)
 15327  26DF  01B6               	clrf	((_PID_CV_charge+2)^(0+640)+8)
 15328  26E0  01B7               	clrf	((_PID_CV_charge+3)^(0+640)+8)
 15329  26E1  01B8               	clrf	(_PID_CV_charge^(0+640)+12)
 15330  26E2  01B9               	clrf	((_PID_CV_charge+1)^(0+640)+12)
 15331  26E3  01BA               	clrf	((_PID_CV_charge+2)^(0+640)+12)
 15332  26E4  01BB               	clrf	((_PID_CV_charge+3)^(0+640)+12)
 15333  26E5  0020               	movlb	0	; select bank0
 15334  26E6  00CA               	movwf	___fladd@f1+3
 15335  26E7  3080               	movlw	128
 15336  26E8  00C9               	movwf	___fladd@f1+2
 15337  26E9  01C8               	clrf	___fladd@f1+1
 15338  26EA  01C7               	clrf	___fladd@f1
 15339  26EB  0023               	movlb	3	; select bank3
 15340  26EC  0866               	movf	(_dianchi_cv_level+3)^(0+384),w
 15341  26ED  0020               	movlb	0	; select bank0
 15342  26EE  00CE               	movwf	___fladd@f2+3
 15343  26EF  0023               	movlb	3	; select bank3
 15344  26F0  0865               	movf	(_dianchi_cv_level+2)^(0+384),w
 15345  26F1  0020               	movlb	0	; select bank0
 15346  26F2  00CD               	movwf	___fladd@f2+2
 15347  26F3  0023               	movlb	3	; select bank3
 15348  26F4  0864               	movf	(_dianchi_cv_level+1)^(0+384),w
 15349  26F5  0020               	movlb	0	; select bank0
 15350  26F6  00CC               	movwf	___fladd@f2+1
 15351  26F7  0023               	movlb	3	; select bank3
 15352  26F8  0863               	movf	_dianchi_cv_level^(0+384),w
 15353  26F9  0020               	movlb	0	; select bank0
 15354  26FA  00CB               	movwf	___fladd@f2
 15355  26FB  0008               	return
 15356  26FC                     __end_ofPL2:	
 15357  26FC                     PL6:	
 15358  26FC  00E7               	movwf	(_bt_volt_80+3)^(0+512)
 15359  26FD  30BE               	movlw	190
 15360  26FE  00E6               	movwf	(_bt_volt_80+2)^(0+512)
 15361  26FF  3013               	movlw	19
 15362  2700  00E5               	movwf	(_bt_volt_80+1)^(0+512)
 15363  2701  30CB               	movlw	203
 15364  2702  00E4               	movwf	_bt_volt_80^(0+512)
 15365  2703  3043               	movlw	67
 15366  2704  00E3               	movwf	(_bt_volt_60+3)^(0+512)
 15367  2705  30B6               	movlw	182
 15368  2706  00E2               	movwf	(_bt_volt_60+2)^(0+512)
 15369  2707  3005               	movlw	5
 15370  2708  00E1               	movwf	(_bt_volt_60+1)^(0+512)
 15371  2709  30F0               	movlw	240
 15372  270A  00E0               	movwf	_bt_volt_60^(0+512)
 15373  270B  3043               	movlw	67
 15374  270C  00DF               	movwf	(_bt_volt_40+3)^(0+512)
 15375  270D  30AD               	movlw	173
 15376  270E  00DE               	movwf	(_bt_volt_40+2)^(0+512)
 15377  270F  30F8               	movlw	248
 15378  2710  00DD               	movwf	(_bt_volt_40+1)^(0+512)
 15379  2711  3015               	movlw	21
 15380  2712  00DC               	movwf	_bt_volt_40^(0+512)
 15381  2713  3043               	movlw	67
 15382  2714  00DB               	movwf	(_bt_volt_20+3)^(0+512)
 15383  2715  30A5               	movlw	165
 15384  2716  00DA               	movwf	(_bt_volt_20+2)^(0+512)
 15385  2717  30EA               	movlw	234
 15386  2718  00D9               	movwf	(_bt_volt_20+1)^(0+512)
 15387  2719  303A               	movlw	58
 15388  271A  00D8               	movwf	_bt_volt_20^(0+512)
 15389  271B  3043               	movlw	67
 15390  271C  00D7               	movwf	(_bt_volt_00+3)^(0+512)
 15391  271D  3090               	movlw	144
 15392  271E  00D6               	movwf	(_bt_volt_00+2)^(0+512)
 15393  271F  30F9               	movlw	249
 15394  2720  00D5               	movwf	(_bt_volt_00+1)^(0+512)
 15395  2721  3067               	movlw	103
 15396  2722  00D4               	movwf	_bt_volt_00^(0+512)
 15397  2723  3043               	movlw	67
 15398  2724  0022               	movlb	2	; select bank2
 15399  2725  00D6               	movwf	(_dianchi_guoya_baohu+3)^(0+256)
 15400  2726  30C6               	movlw	198
 15401  2727  00D5               	movwf	(_dianchi_guoya_baohu+2)^(0+256)
 15402  2728  30EF               	movlw	239
 15403  2729  00D4               	movwf	(_dianchi_guoya_baohu+1)^(0+256)
 15404  272A  30D6               	movlw	214
 15405  272B  00D3               	movwf	_dianchi_guoya_baohu^(0+256)
 15406  272C  3043               	movlw	67
 15407  272D  0023               	movlb	3	; select bank3
 15408  272E  00EA               	movwf	(_dianchi_guoya_huifu+3)^(0+384)
 15409  272F  30C3               	movlw	195
 15410  2730  00E9               	movwf	(_dianchi_guoya_huifu+2)^(0+384)
 15411  2731  30B7               	movlw	183
 15412  2732  00E8               	movwf	(_dianchi_guoya_huifu+1)^(0+384)
 15413  2733  3018               	movlw	24
 15414  2734  00E7               	movwf	_dianchi_guoya_huifu^(0+384)
 15415  2735  3043               	movlw	67
 15416  2736  0024               	movlb	4	; select bank4
 15417  2737  00EB               	movwf	(_dianchi_qianya_baohu+3)^(0+512)
 15418  2738  3090               	movlw	144
 15419  2739  00EA               	movwf	(_dianchi_qianya_baohu+2)^(0+512)
 15420  273A  30F9               	movlw	249
 15421  273B  00E9               	movwf	(_dianchi_qianya_baohu+1)^(0+512)
 15422  273C  3067               	movlw	103
 15423  273D  00E8               	movwf	_dianchi_qianya_baohu^(0+512)
 15424  273E  3043               	movlw	67
 15425  273F  0025               	movlb	5	; select bank5
 15426  2740  00D3               	movwf	(_dianchi_qianya_huifu+3)^(0+640)
 15427  2741  3099               	movlw	153
 15428  2742  00D2               	movwf	(_dianchi_qianya_huifu+2)^(0+640)
 15429  2743  3007               	movlw	7
 15430  2744  00D1               	movwf	(_dianchi_qianya_huifu+1)^(0+640)
 15431  2745  3042               	movlw	66
 15432  2746  00D0               	movwf	_dianchi_qianya_huifu^(0+640)
 15433  2747  3043               	movlw	67
 15434  2748  0023               	movlb	3	; select bank3
 15435  2749  00E6               	movwf	(_dianchi_cv_level+3)^(0+384)
 15436  274A  30C4               	movlw	196
 15437  274B  00E5               	movwf	(_dianchi_cv_level+2)^(0+384)
 15438  274C  3085               	movlw	133
 15439  274D  00E4               	movwf	(_dianchi_cv_level+1)^(0+384)
 15440  274E  3047               	movlw	71
 15441  274F  00E3               	movwf	_dianchi_cv_level^(0+384)
 15442  2750  3042               	movlw	66
 15443  2751  0025               	movlb	5	; select bank5
 15444  2752  00CF               	movwf	(_charge_i_limit+3)^(0+640)
 15445  2753  3096               	movlw	150
 15446  2754  00CE               	movwf	(_charge_i_limit+2)^(0+640)
 15447  2755  3042               	movlw	66
 15448  2756  01CD               	clrf	(_charge_i_limit+1)^(0+640)
 15449  2757  01CC               	clrf	_charge_i_limit^(0+640)
 15450  2758  0023               	movlb	3	; select bank3
 15451  2759  00EE               	movwf	(_shuchu_shortout_voltage+3)^(0+384)
 15452  275A  30F5               	movlw	245
 15453  275B  00ED               	movwf	(_shuchu_shortout_voltage+2)^(0+384)
 15454  275C  30E6               	movlw	230
 15455  275D  00EC               	movwf	(_shuchu_shortout_voltage+1)^(0+384)
 15456  275E  30D2               	movlw	210
 15457  275F  00EB               	movwf	_shuchu_shortout_voltage^(0+384)
 15458  2760  3044               	movlw	68
 15459  2761  0025               	movlb	5	; select bank5
 15460  2762  00E7               	movwf	(_shuchu_open_voltage+3)^(0+640)
 15461  2763  307A               	movlw	122
 15462  2764  00E6               	movwf	(_shuchu_open_voltage+2)^(0+640)
 15463  2765  3044               	movlw	68
 15464  2766  01E5               	clrf	(_shuchu_open_voltage+1)^(0+640)
 15465  2767  01E4               	clrf	_shuchu_open_voltage^(0+640)
 15466  2768  00D7               	movwf	(_discharge_i_baohu+3)^(0+640)
 15467  2769  3034               	movlw	52
 15468  276A  00D6               	movwf	(_discharge_i_baohu+2)^(0+640)
 15469  276B  3044               	movlw	68
 15470  276C  01D5               	clrf	(_discharge_i_baohu+1)^(0+640)
 15471  276D  01D4               	clrf	_discharge_i_baohu^(0+640)
 15472  276E  00DB               	movwf	(_discharge_i_limit+3)^(0+640)
 15473  276F  3020               	movlw	32
 15474  2770  00DA               	movwf	(_discharge_i_limit+2)^(0+640)
 15475  2771  3042               	movlw	66
 15476  2772  01D9               	clrf	(_discharge_i_limit+1)^(0+640)
 15477  2773  01D8               	clrf	_discharge_i_limit^(0+640)
 15478  2774  0008               	return
 15479  2775                     __end_ofPL6:	
 15480  2775                     PL16:	
 15481  2775  303A               	movlw	58
 15482  2776  0023               	movlb	3	; select bank3
 15483  2777  00CE               	movwf	((_PID_CC_discharge+3)^(0+384)+4)
 15484  2778  3083               	movlw	131
 15485  2779  00CD               	movwf	((_PID_CC_discharge+2)^(0+384)+4)
 15486  277A  3012               	movlw	18
 15487  277B  00CC               	movwf	((_PID_CC_discharge+1)^(0+384)+4)
 15488  277C  306F               	movlw	111
 15489  277D  00CB               	movwf	(_PID_CC_discharge^(0+384)+4)
 15490  277E  3043               	movlw	67
 15491  277F  01CF               	clrf	(_PID_CC_discharge^(0+384)+8)
 15492  2780  01D0               	clrf	((_PID_CC_discharge+1)^(0+384)+8)
 15493  2781  01D1               	clrf	((_PID_CC_discharge+2)^(0+384)+8)
 15494  2782  01D2               	clrf	((_PID_CC_discharge+3)^(0+384)+8)
 15495  2783  01D3               	clrf	(_PID_CC_discharge^(0+384)+12)
 15496  2784  01D4               	clrf	((_PID_CC_discharge+1)^(0+384)+12)
 15497  2785  01D5               	clrf	((_PID_CC_discharge+2)^(0+384)+12)
 15498  2786  01D6               	clrf	((_PID_CC_discharge+3)^(0+384)+12)
 15499  2787  0020               	movlb	0	; select bank0
 15500  2788  0008               	return
 15501  2789                     __end_ofPL16:	
 15502  2789                     PL30:	
 15503  2789  0020               	movlb	0	; select bank0
 15504  278A  00DB               	movwf	read_param_eeprom@byte_l
 15505  278B  085A               	movf	read_param_eeprom@byte_h,w
 15506  278C  00AE               	movwf	___awtofl@c+1
 15507  278D  01AD               	clrf	___awtofl@c
 15508  278E  085B               	movf	read_param_eeprom@byte_l,w
 15509  278F  04AD               	iorwf	___awtofl@c,f
 15510  2790  0008               	return
 15511  2791                     __end_ofPL30:	
 15512  2791                     PL40:	
 15513  2791  00DD               	movwf	___flge@ff1+3
 15514  2792  3049               	movlw	73
 15515  2793  00DC               	movwf	___flge@ff1+2
 15516  2794  3099               	movlw	153
 15517  2795  00DB               	movwf	___flge@ff1+1
 15518  2796  309A               	movlw	154
 15519  2797  00DA               	movwf	___flge@ff1
 15520  2798  0021               	movlb	1	; select bank1
 15521  2799  082D               	movf	(auto_system@sys_bt_voltage+3)^(0+128),w
 15522  279A  0020               	movlb	0	; select bank0
 15523  279B  00E1               	movwf	___flge@ff2+3
 15524  279C  0021               	movlb	1	; select bank1
 15525  279D  082C               	movf	(auto_system@sys_bt_voltage+2)^(0+128),w
 15526  279E  0020               	movlb	0	; select bank0
 15527  279F  00E0               	movwf	___flge@ff2+2
 15528  27A0  0021               	movlb	1	; select bank1
 15529  27A1  082B               	movf	(auto_system@sys_bt_voltage+1)^(0+128),w
 15530  27A2  0020               	movlb	0	; select bank0
 15531  27A3  00DF               	movwf	___flge@ff2+1
 15532  27A4  0021               	movlb	1	; select bank1
 15533  27A5  082A               	movf	auto_system@sys_bt_voltage^(0+128),w
 15534  27A6  0020               	movlb	0	; select bank0
 15535  27A7  00DE               	movwf	___flge@ff2
 15536  27A8  0008               	return
 15537  27A9                     __end_ofPL40:	
 15538  27A9                     PL46:	
 15539  27A9  0020               	movlb	0	; select bank0
 15540  27AA  00DD               	movwf	___flge@ff1+3
 15541  27AB  0021               	movlb	1	; select bank1
 15542  27AC  082C               	movf	(auto_system@sys_bt_voltage+2)^(0+128),w
 15543  27AD  0020               	movlb	0	; select bank0
 15544  27AE  00DC               	movwf	___flge@ff1+2
 15545  27AF  0021               	movlb	1	; select bank1
 15546  27B0  082B               	movf	(auto_system@sys_bt_voltage+1)^(0+128),w
 15547  27B1  0020               	movlb	0	; select bank0
 15548  27B2  00DB               	movwf	___flge@ff1+1
 15549  27B3  0021               	movlb	1	; select bank1
 15550  27B4  082A               	movf	auto_system@sys_bt_voltage^(0+128),w
 15551  27B5  0020               	movlb	0	; select bank0
 15552  27B6  00DA               	movwf	___flge@ff1
 15553  27B7  3040               	movlw	64
 15554  27B8  00E1               	movwf	___flge@ff2+3
 15555  27B9  30F0               	movlw	240
 15556  27BA  00E0               	movwf	___flge@ff2+2
 15557  27BB  3000               	movlw	0
 15558  27BC  01DF               	clrf	___flge@ff2+1
 15559  27BD  01DE               	clrf	___flge@ff2
 15560  27BE  0008               	return
 15561  27BF                     __end_ofPL46:	
 15562  27BF                     PL70:	
 15563  27BF  084A               	movf	?___fladd+3,w
 15564  27C0  0025               	movlb	5	; select bank5
 15565  27C1  00AF               	movwf	(_PID_CV_charge+3)^(0+640)
 15566  27C2  0020               	movlb	0	; select bank0
 15567  27C3  0849               	movf	?___fladd+2,w
 15568  27C4  0025               	movlb	5	; select bank5
 15569  27C5  00AE               	movwf	(_PID_CV_charge+2)^(0+640)
 15570  27C6  0020               	movlb	0	; select bank0
 15571  27C7  0848               	movf	?___fladd+1,w
 15572  27C8  0025               	movlb	5	; select bank5
 15573  27C9  00AD               	movwf	(_PID_CV_charge+1)^(0+640)
 15574  27CA  0020               	movlb	0	; select bank0
 15575  27CB  0847               	movf	?___fladd,w
 15576  27CC  0025               	movlb	5	; select bank5
 15577  27CD  00AC               	movwf	_PID_CV_charge^(0+640)
 15578  27CE  0008               	return
 15579  27CF                     __end_ofPL70:	
 15580  27CF                     PL112:	
 15581  27CF  00E0               	movwf	_light_on_pv_level^(0+640)
 15582  27D0  3043               	movlw	67
 15583  27D1  00DF               	movwf	(_light_off_pv_level+3)^(0+640)
 15584  27D2  3023               	movlw	35
 15585  27D3  00DE               	movwf	(_light_off_pv_level+2)^(0+640)
 15586  27D4  30EF               	movlw	239
 15587  27D5  00DD               	movwf	(_light_off_pv_level+1)^(0+640)
 15588  27D6  3037               	movlw	55
 15589  27D7  00DC               	movwf	_light_off_pv_level^(0+640)
 15590  27D8  3042               	movlw	66
 15591  27D9  00CB               	movwf	(_Load_Pmax+3)^(0+640)
 15592  27DA  3024               	movlw	36
 15593  27DB  00CA               	movwf	(_Load_Pmax+2)^(0+640)
 15594  27DC  3000               	movlw	0
 15595  27DD  01C9               	clrf	(_Load_Pmax+1)^(0+640)
 15596  27DE  01C8               	clrf	_Load_Pmax^(0+640)
 15597  27DF  0008               	return
 15598  27E0                     __end_ofPL112:	
 15599  27E0                     PL190:	
 15600  27E0  01ED               	clrf	_volt_id^(0+128)
 15601  27E1  0AED               	incf	_volt_id^(0+128),f
 15602  27E2  086D               	movf	_volt_id^(0+128),w
 15603  27E3  0020               	movlb	0	; select bank0
 15604  27E4  00E4               	movwf	eeprom_write@value
 15605  27E5  3409               	retlw	9
 15606  27E6                     __end_ofPL190:	
 15607  27E6                     PL220:	
 15608  27E6  07C1               	addwf	___flmul@f3_as_product,f
 15609  27E7  0839               	movf	___flmul@f2+1,w
 15610  27E8  3DC2               	addwfc	___flmul@f3_as_product+1,f
 15611  27E9  083A               	movf	___flmul@f2+2,w
 15612  27EA  3DC3               	addwfc	___flmul@f3_as_product+2,f
 15613  27EB  083B               	movf	___flmul@f2+3,w
 15614  27EC  3DC4               	addwfc	___flmul@f3_as_product+3,f
 15615  27ED  0008               	return
 15616  27EE                     __end_ofPL220:	
 15617  27EE                     PL256:	
 15618  27EE  0020               	movlb	0	; select bank0
 15619  27EF  00AB               	movwf	pid_init@pp
 15620  27F0  3003               	movlw	high _PID_CC_charge
 15621  27F1  00AC               	movwf	pid_init@pp+1
 15622  27F2  0008               	return
 15623  27F3                     __end_ofPL256:	
 15624  27F3                     PL260:	
 15625  27F3  30AC               	movlw	low _PID_CV_charge
 15626  27F4  00AB               	movwf	pid_init@pp
 15627  27F5  3002               	movlw	high _PID_CV_charge
 15628  27F6  00AC               	movwf	pid_init@pp+1
 15629  27F7  0008               	return
 15630  27F8                     __end_ofPL260:	
 15631  27F8                     PL264:	
 15632  27F8  01C8               	clrf	?___fldiv+1
 15633  27F9  01C9               	clrf	?___fldiv+2
 15634  27FA  01CA               	clrf	?___fldiv+3
 15635  27FB  0008               	return
 15636  27FC                     __end_ofPL264:	
 15637  27FC                     PL272:	
 15638  27FC  01B5               	clrf	?___flmul+1
 15639  27FD  01B6               	clrf	?___flmul+2
 15640  27FE  01B7               	clrf	?___flmul+3
 15641  27FF  0008               	return
 15642  2800                     __end_ofPL272:	
 15643                           
 15644                           	psect	intentry
 15645  0004                     __pintentry:	
 15646 ;; *************** function _isr *****************
 15647 ;; Defined at:
 15648 ;;		line 62 in file "D:\MCUProject\ZH-SL-H40\src\interrupt.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;		None
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  time_cnt        2    1[BANK0 ] unsigned int 
 15653 ;;  r1_data         1    0[BANK0 ] unsigned char 
 15654 ;;  r2_data         1    0        unsigned char 
 15655 ;; Return value:  Size  Location     Type
 15656 ;;		None               void
 15657 ;; Registers used:
 15658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 10/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;Total ram usage:       11 bytes
 15669 ;; Hardware stack levels used:    1
 15670 ;; Hardware stack levels required when called:    1
 15671 ;; This function calls:
 15672 ;;		i1_Disable_Bost_Pwm
 15673 ;;		i1_Set_Bost_Pwm_Duty
 15674 ;; This function is called by:
 15675 ;;		Interrupt level 1
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679  0004                     _isr:	
 15680                           
 15681                           ;incstack = 0
 15682                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15683  0004  3180               	pagesel	$
 15684                           
 15685                           ;interrupt.c: 64: unsigned char r1_data,r2_data;
 15686                           ;interrupt.c: 67: if (TMR1IE && TMR1IF)
 15687  0005  0021               	movlb	1	; select bank1
 15688  0006  1C11               	btfss	17,0	;volatile
 15689  0007  29A8               	goto	i1l15646
 15690  0008  0020               	movlb	0	; select bank0
 15691  0009  1C11               	btfss	17,0	;volatile
 15692  000A  29A8               	goto	i1l15646
 15693                           
 15694                           ;interrupt.c: 68: {
 15695                           ;interrupt.c: 69: TMR1IF = 0x00;
 15696  000B  1011               	bcf	17,0	;volatile
 15697                           
 15698                           ;interrupt.c: 70: TMR1H = 0xE0;
 15699  000C  30E0               	movlw	224
 15700  000D  0097               	movwf	23	;volatile
 15701                           
 15702                           ;interrupt.c: 71: TMR1L = 0xC0;
 15703  000E  30C0               	movlw	192
 15704  000F  0096               	movwf	22	;volatile
 15705                           
 15706                           ;interrupt.c: 74: if(system_check_time==0x01)
 15707  0010  0022               	movlb	2	; select bank2
 15708  0011  0B48               	decfsz	_system_check_time^(0+256),w
 15709  0012  284D               	goto	i1l15458
 15710                           
 15711                           ;interrupt.c: 75: {
 15712                           ;interrupt.c: 76: system_time_count++;
 15713  0013  0023               	movlb	3	; select bank3
 15714  0014  0ABE               	incf	_system_time_count^(0+384),f
 15715  0015  1903               	skipnz
 15716  0016  0ABF               	incf	(_system_time_count+1)^(0+384),f
 15717                           
 15718                           ;interrupt.c: 78: if(system_time_count>800)
 15719  0017  3003               	movlw	3
 15720  0018  023F               	subwf	(_system_time_count+1)^(0+384),w
 15721  0019  3021               	movlw	33
 15722  001A  1903               	skipnz
 15723  001B  023E               	subwf	_system_time_count^(0+384),w
 15724  001C  1C03               	skipc
 15725  001D  2844               	goto	i1l15450
 15726                           
 15727                           ;interrupt.c: 82: set_1HZ_flag^=0x01;
 15728  001E  01BE               	clrf	_system_time_count^(0+384)
 15729  001F  01BF               	clrf	(_system_time_count+1)^(0+384)
 15730                           
 15731                           ;interrupt.c: 84: if(have_person1_flag==0x01)
 15732  0020  0021               	movlb	1	; select bank1
 15733  0021  0B55               	decfsz	_have_person1_flag^(0+128),w
 15734  0022  282C               	goto	i1l15434
 15735                           
 15736                           ;interrupt.c: 85: {
 15737                           ;interrupt.c: 86: have_person1_time_count++;
 15738  0023  0022               	movlb	2	; select bank2
 15739  0024  3015               	movlw	21
 15740  0025  0AB1               	incf	_have_person1_time_count^(0+256),f
 15741                           
 15742                           ;interrupt.c: 88: if(have_person1_time_count>20)
 15743  0026  0231               	subwf	_have_person1_time_count^(0+256),w
 15744  0027  1C03               	skipc
 15745  0028  282C               	goto	i1l15434
 15746                           
 15747                           ;interrupt.c: 89: {
 15748                           ;interrupt.c: 90: have_person1_time_count=0x00;
 15749  0029  01B1               	clrf	_have_person1_time_count^(0+256)
 15750                           
 15751                           ;interrupt.c: 92: have_person1_flag=0x00;
 15752  002A  0021               	movlb	1	; select bank1
 15753  002B  01D5               	clrf	_have_person1_flag^(0+128)
 15754  002C                     i1l15434:	
 15755                           
 15756                           ;interrupt.c: 93: }
 15757                           ;interrupt.c: 94: }
 15758                           ;interrupt.c: 96: if(open_sleep_time==0x01 && device_status==0x00)
 15759  002C  0022               	movlb	2	; select bank2
 15760  002D  0B3F               	decfsz	_open_sleep_time^(0+256),w
 15761  002E  2844               	goto	i1l15450
 15762  002F  0020               	movlb	0	; select bank0
 15763  0030  08EA               	movf	_device_status,f
 15764  0031  1D03               	skipz
 15765  0032  2844               	goto	i1l15450
 15766                           
 15767                           ;interrupt.c: 97: {
 15768                           ;interrupt.c: 98: sleep_time_count++;
 15769  0033  0023               	movlb	3	; select bank3
 15770  0034  0ABC               	incf	_sleep_time_count^(0+384),f
 15771  0035  1903               	skipnz
 15772  0036  0ABD               	incf	(_sleep_time_count+1)^(0+384),f
 15773                           
 15774                           ;interrupt.c: 100: if(sleep_time_count>=20)
 15775  0037  3000               	movlw	0
 15776  0038  023D               	subwf	(_sleep_time_count+1)^(0+384),w
 15777  0039  3014               	movlw	20
 15778  003A  1903               	skipnz
 15779  003B  023C               	subwf	_sleep_time_count^(0+384),w
 15780  003C  1C03               	skipc
 15781  003D  2844               	goto	i1l15450
 15782                           
 15783                           ;interrupt.c: 101: {
 15784                           ;interrupt.c: 102: sleep_time_count=0x00;
 15785  003E  01BC               	clrf	_sleep_time_count^(0+384)
 15786  003F  01BD               	clrf	(_sleep_time_count+1)^(0+384)
 15787  0040  0063               	sleep	;# 
 15788                           
 15789                           ;interrupt.c: 106: __nop();
 15790  0041  0000               	nop
 15791                           
 15792                           ;interrupt.c: 107: __nop();
 15793  0042  0000               	nop
 15794                           
 15795                           ;interrupt.c: 108: __nop();
 15796  0043  0000               	nop
 15797  0044                     i1l15450:	
 15798                           
 15799                           ;interrupt.c: 109: }
 15800                           ;interrupt.c: 110: }
 15801                           ;interrupt.c: 112: }
 15802                           ;interrupt.c: 114: scan_key_time_count++;
 15803  0044  0022               	movlb	2	; select bank2
 15804  0045  3028               	movlw	40
 15805  0046  0AC5               	incf	_scan_key_time_count^(0+256),f
 15806                           
 15807                           ;interrupt.c: 116: if(scan_key_time_count>=40)
 15808  0047  0245               	subwf	_scan_key_time_count^(0+256),w
 15809  0048  1C03               	skipc
 15810  0049  284D               	goto	i1l15458
 15811                           
 15812                           ;interrupt.c: 117: {
 15813                           ;interrupt.c: 118: scan_key_time_count=0x00;
 15814  004A  01C5               	clrf	_scan_key_time_count^(0+256)
 15815                           
 15816                           ;interrupt.c: 120: handle_scan_key_flag=0x01;
 15817  004B  01AF               	clrf	_handle_scan_key_flag^(0+256)
 15818  004C  0AAF               	incf	_handle_scan_key_flag^(0+256),f
 15819  004D                     i1l15458:	
 15820                           
 15821                           ;interrupt.c: 121: }
 15822                           ;interrupt.c: 123: }
 15823                           ;interrupt.c: 125: if(open_discharge_time==0x01)
 15824  004D  0B3E               	decfsz	_open_discharge_time^(0+256),w
 15825  004E  2885               	goto	i1l15484
 15826                           
 15827                           ;interrupt.c: 126: {
 15828                           ;interrupt.c: 127: if(ms_cnt<1000)
 15829  004F  3003               	movlw	3
 15830  0050  0023               	movlb	3	; select bank3
 15831  0051  0239               	subwf	(_ms_cnt+1)^(0+384),w
 15832  0052  30E8               	movlw	232
 15833  0053  1903               	skipnz
 15834  0054  0238               	subwf	_ms_cnt^(0+384),w
 15835  0055  1803               	skipnc
 15836  0056  285B               	goto	i1l15464
 15837                           
 15838                           ;interrupt.c: 128: {
 15839                           ;interrupt.c: 129: ms_cnt++;
 15840  0057  0AB8               	incf	_ms_cnt^(0+384),f
 15841  0058  1903               	skipnz
 15842  0059  0AB9               	incf	(_ms_cnt+1)^(0+384),f
 15843                           
 15844                           ;interrupt.c: 130: }
 15845  005A  2885               	goto	i1l15484
 15846  005B                     i1l15464:	
 15847  005B  3000               	movlw	0
 15848                           
 15849                           ;interrupt.c: 131: else
 15850                           ;interrupt.c: 132: {
 15851                           ;interrupt.c: 133: ms_cnt=0x00;
 15852  005C  01B8               	clrf	_ms_cnt^(0+384)
 15853  005D  01B9               	clrf	(_ms_cnt+1)^(0+384)
 15854                           
 15855                           ;interrupt.c: 135: if(se_cnt<60)
 15856  005E  023B               	subwf	(_se_cnt+1)^(0+384),w
 15857  005F  303C               	movlw	60
 15858  0060  1903               	skipnz
 15859  0061  023A               	subwf	_se_cnt^(0+384),w
 15860  0062  1803               	skipnc
 15861  0063  2868               	goto	i1l15470
 15862                           
 15863                           ;interrupt.c: 136: {
 15864                           ;interrupt.c: 137: se_cnt++;
 15865  0064  0ABA               	incf	_se_cnt^(0+384),f
 15866  0065  1903               	skipnz
 15867  0066  0ABB               	incf	(_se_cnt+1)^(0+384),f
 15868                           
 15869                           ;interrupt.c: 138: }
 15870  0067  2885               	goto	i1l15484
 15871  0068                     i1l15470:	
 15872  0068  3000               	movlw	0
 15873                           
 15874                           ;interrupt.c: 139: else
 15875                           ;interrupt.c: 140: {
 15876                           ;interrupt.c: 141: se_cnt=0x00;
 15877  0069  01BA               	clrf	_se_cnt^(0+384)
 15878  006A  01BB               	clrf	(_se_cnt+1)^(0+384)
 15879                           
 15880                           ;interrupt.c: 143: if(mi_cnt<60)
 15881  006B  0237               	subwf	(_mi_cnt+1)^(0+384),w
 15882  006C  303C               	movlw	60
 15883  006D  1903               	skipnz
 15884  006E  0236               	subwf	_mi_cnt^(0+384),w
 15885  006F  1803               	skipnc
 15886  0070  2875               	goto	i1l15476
 15887                           
 15888                           ;interrupt.c: 144: {
 15889                           ;interrupt.c: 145: mi_cnt++;
 15890  0071  0AB6               	incf	_mi_cnt^(0+384),f
 15891  0072  1903               	skipnz
 15892  0073  0AB7               	incf	(_mi_cnt+1)^(0+384),f
 15893                           
 15894                           ;interrupt.c: 146: }
 15895  0074  2885               	goto	i1l15484
 15896  0075                     i1l15476:	
 15897  0075  3000               	movlw	0
 15898                           
 15899                           ;interrupt.c: 147: else
 15900                           ;interrupt.c: 148: {
 15901                           ;interrupt.c: 149: mi_cnt=0x00;
 15902  0076  01B6               	clrf	_mi_cnt^(0+384)
 15903  0077  01B7               	clrf	(_mi_cnt+1)^(0+384)
 15904                           
 15905                           ;interrupt.c: 151: if(ho_cnt<24)
 15906  0078  0021               	movlb	1	; select bank1
 15907  0079  024D               	subwf	(_ho_cnt+1)^(0+128),w
 15908  007A  3018               	movlw	24
 15909  007B  1903               	skipnz
 15910  007C  024C               	subwf	_ho_cnt^(0+128),w
 15911  007D  1803               	skipnc
 15912  007E  2883               	goto	i1l15482
 15913                           
 15914                           ;interrupt.c: 152: {
 15915                           ;interrupt.c: 153: ho_cnt++;
 15916  007F  0ACC               	incf	_ho_cnt^(0+128),f
 15917  0080  1903               	skipnz
 15918  0081  0ACD               	incf	(_ho_cnt+1)^(0+128),f
 15919                           
 15920                           ;interrupt.c: 154: }
 15921  0082  2885               	goto	i1l15484
 15922  0083                     i1l15482:	
 15923                           
 15924                           ;interrupt.c: 155: else
 15925                           ;interrupt.c: 156: {
 15926                           ;interrupt.c: 157: ho_cnt=0x00;
 15927  0083  01CC               	clrf	_ho_cnt^(0+128)
 15928  0084  01CD               	clrf	(_ho_cnt+1)^(0+128)
 15929  0085                     i1l15484:	
 15930                           
 15931                           ;interrupt.c: 158: }
 15932                           ;interrupt.c: 159: }
 15933                           ;interrupt.c: 160: }
 15934                           ;interrupt.c: 161: }
 15935                           ;interrupt.c: 162: }
 15936                           ;interrupt.c: 164: if(open_an0_time==0x01)
 15937  0085  0022               	movlb	2	; select bank2
 15938  0086  0B37               	decfsz	_open_an0_time^(0+256),w
 15939  0087  2898               	goto	i1l15494
 15940                           
 15941                           ;interrupt.c: 165: {
 15942                           ;interrupt.c: 166: an0_time_count++;
 15943  0088  0023               	movlb	3	; select bank3
 15944  0089  0AA6               	incf	_an0_time_count^(0+384),f
 15945  008A  1903               	skipnz
 15946  008B  0AA7               	incf	(_an0_time_count+1)^(0+384),f
 15947                           
 15948                           ;interrupt.c: 168: if(an0_time_count>=1000)
 15949  008C  3003               	movlw	3
 15950  008D  0227               	subwf	(_an0_time_count+1)^(0+384),w
 15951  008E  30E8               	movlw	232
 15952  008F  1903               	skipnz
 15953  0090  0226               	subwf	_an0_time_count^(0+384),w
 15954  0091  1C03               	skipc
 15955  0092  2898               	goto	i1l15494
 15956                           
 15957                           ;interrupt.c: 169: {
 15958                           ;interrupt.c: 170: an0_time_count=0x00;
 15959  0093  01A6               	clrf	_an0_time_count^(0+384)
 15960  0094  01A7               	clrf	(_an0_time_count+1)^(0+384)
 15961                           
 15962                           ;interrupt.c: 172: handle_an0_process_flag=0x01;
 15963  0095  0022               	movlb	2	; select bank2
 15964  0096  01A8               	clrf	_handle_an0_process_flag^(0+256)
 15965  0097  0AA8               	incf	_handle_an0_process_flag^(0+256),f
 15966  0098                     i1l15494:	
 15967                           
 15968                           ;interrupt.c: 173: }
 15969                           ;interrupt.c: 175: }
 15970                           ;interrupt.c: 176: if(open_an1_time==0x01)
 15971  0098  0022               	movlb	2	; select bank2
 15972  0099  0B39               	decfsz	_open_an1_time^(0+256),w
 15973  009A  28AB               	goto	i1l15504
 15974                           
 15975                           ;interrupt.c: 177: {
 15976                           ;interrupt.c: 178: an1_time_count++;
 15977  009B  0023               	movlb	3	; select bank3
 15978  009C  0AAA               	incf	_an1_time_count^(0+384),f
 15979  009D  1903               	skipnz
 15980  009E  0AAB               	incf	(_an1_time_count+1)^(0+384),f
 15981                           
 15982                           ;interrupt.c: 180: if(an1_time_count>=1000)
 15983  009F  3003               	movlw	3
 15984  00A0  022B               	subwf	(_an1_time_count+1)^(0+384),w
 15985  00A1  30E8               	movlw	232
 15986  00A2  1903               	skipnz
 15987  00A3  022A               	subwf	_an1_time_count^(0+384),w
 15988  00A4  1C03               	skipc
 15989  00A5  28AB               	goto	i1l15504
 15990                           
 15991                           ;interrupt.c: 181: {
 15992                           ;interrupt.c: 182: an1_time_count=0x00;
 15993  00A6  01AA               	clrf	_an1_time_count^(0+384)
 15994  00A7  01AB               	clrf	(_an1_time_count+1)^(0+384)
 15995                           
 15996                           ;interrupt.c: 184: handle_an1_process_flag=0x01;
 15997  00A8  0022               	movlb	2	; select bank2
 15998  00A9  01AA               	clrf	_handle_an1_process_flag^(0+256)
 15999  00AA  0AAA               	incf	_handle_an1_process_flag^(0+256),f
 16000  00AB                     i1l15504:	
 16001                           
 16002                           ;interrupt.c: 185: }
 16003                           ;interrupt.c: 187: }
 16004                           ;interrupt.c: 188: if(open_an2_time==0x01)
 16005  00AB  0022               	movlb	2	; select bank2
 16006  00AC  0B3A               	decfsz	_open_an2_time^(0+256),w
 16007  00AD  28BE               	goto	i1l15514
 16008                           
 16009                           ;interrupt.c: 189: {
 16010                           ;interrupt.c: 190: an2_time_count++;
 16011  00AE  0023               	movlb	3	; select bank3
 16012  00AF  0AAC               	incf	_an2_time_count^(0+384),f
 16013  00B0  1903               	skipnz
 16014  00B1  0AAD               	incf	(_an2_time_count+1)^(0+384),f
 16015                           
 16016                           ;interrupt.c: 192: if(an2_time_count>=5)
 16017  00B2  3000               	movlw	0
 16018  00B3  022D               	subwf	(_an2_time_count+1)^(0+384),w
 16019  00B4  3005               	movlw	5
 16020  00B5  1903               	skipnz
 16021  00B6  022C               	subwf	_an2_time_count^(0+384),w
 16022  00B7  1C03               	skipc
 16023  00B8  28BE               	goto	i1l15514
 16024                           
 16025                           ;interrupt.c: 193: {
 16026                           ;interrupt.c: 194: an2_time_count=0x00;
 16027  00B9  01AC               	clrf	_an2_time_count^(0+384)
 16028  00BA  01AD               	clrf	(_an2_time_count+1)^(0+384)
 16029                           
 16030                           ;interrupt.c: 196: handle_an2_process_flag=0x01;
 16031  00BB  0022               	movlb	2	; select bank2
 16032  00BC  01AB               	clrf	_handle_an2_process_flag^(0+256)
 16033  00BD  0AAB               	incf	_handle_an2_process_flag^(0+256),f
 16034  00BE                     i1l15514:	
 16035                           
 16036                           ;interrupt.c: 197: }
 16037                           ;interrupt.c: 199: }
 16038                           ;interrupt.c: 201: if(open_an3_time==0x01)
 16039  00BE  0022               	movlb	2	; select bank2
 16040  00BF  0B3B               	decfsz	_open_an3_time^(0+256),w
 16041  00C0  28D1               	goto	i1l15524
 16042                           
 16043                           ;interrupt.c: 202: {
 16044                           ;interrupt.c: 203: an3_time_count++;
 16045  00C1  0023               	movlb	3	; select bank3
 16046  00C2  0AAE               	incf	_an3_time_count^(0+384),f
 16047  00C3  1903               	skipnz
 16048  00C4  0AAF               	incf	(_an3_time_count+1)^(0+384),f
 16049                           
 16050                           ;interrupt.c: 205: if(an3_time_count>=5)
 16051  00C5  3000               	movlw	0
 16052  00C6  022F               	subwf	(_an3_time_count+1)^(0+384),w
 16053  00C7  3005               	movlw	5
 16054  00C8  1903               	skipnz
 16055  00C9  022E               	subwf	_an3_time_count^(0+384),w
 16056  00CA  1C03               	skipc
 16057  00CB  28D1               	goto	i1l15524
 16058                           
 16059                           ;interrupt.c: 206: {
 16060                           ;interrupt.c: 207: an3_time_count=0x00;
 16061  00CC  01AE               	clrf	_an3_time_count^(0+384)
 16062  00CD  01AF               	clrf	(_an3_time_count+1)^(0+384)
 16063                           
 16064                           ;interrupt.c: 209: handle_an3_process_flag=0x01;
 16065  00CE  0022               	movlb	2	; select bank2
 16066  00CF  01AC               	clrf	_handle_an3_process_flag^(0+256)
 16067  00D0  0AAC               	incf	_handle_an3_process_flag^(0+256),f
 16068  00D1                     i1l15524:	
 16069                           
 16070                           ;interrupt.c: 210: }
 16071                           ;interrupt.c: 212: }
 16072                           ;interrupt.c: 215: if(open_an9_time==0x01)
 16073  00D1  0022               	movlb	2	; select bank2
 16074  00D2  0B3D               	decfsz	_open_an9_time^(0+256),w
 16075  00D3  28E4               	goto	i1l15534
 16076                           
 16077                           ;interrupt.c: 216: {
 16078                           ;interrupt.c: 217: an9_time_count++;
 16079  00D4  0023               	movlb	3	; select bank3
 16080  00D5  0AB2               	incf	_an9_time_count^(0+384),f
 16081  00D6  1903               	skipnz
 16082  00D7  0AB3               	incf	(_an9_time_count+1)^(0+384),f
 16083                           
 16084                           ;interrupt.c: 219: if(an9_time_count>=5)
 16085  00D8  3000               	movlw	0
 16086  00D9  0233               	subwf	(_an9_time_count+1)^(0+384),w
 16087  00DA  3005               	movlw	5
 16088  00DB  1903               	skipnz
 16089  00DC  0232               	subwf	_an9_time_count^(0+384),w
 16090  00DD  1C03               	skipc
 16091  00DE  28E4               	goto	i1l15534
 16092                           
 16093                           ;interrupt.c: 220: {
 16094                           ;interrupt.c: 221: an9_time_count=0x00;
 16095  00DF  01B2               	clrf	_an9_time_count^(0+384)
 16096  00E0  01B3               	clrf	(_an9_time_count+1)^(0+384)
 16097                           
 16098                           ;interrupt.c: 223: handle_an9_process_flag=0x01;
 16099  00E1  0022               	movlb	2	; select bank2
 16100  00E2  01AE               	clrf	_handle_an9_process_flag^(0+256)
 16101  00E3  0AAE               	incf	_handle_an9_process_flag^(0+256),f
 16102  00E4                     i1l15534:	
 16103                           
 16104                           ;interrupt.c: 226: }
 16105                           ;interrupt.c: 228: }
 16106                           ;interrupt.c: 230: if(open_an4_time==0x01)
 16107  00E4  0022               	movlb	2	; select bank2
 16108  00E5  0B3C               	decfsz	_open_an4_time^(0+256),w
 16109  00E6  28F7               	goto	i1l15544
 16110                           
 16111                           ;interrupt.c: 231: {
 16112                           ;interrupt.c: 232: an4_time_count++;
 16113  00E7  0023               	movlb	3	; select bank3
 16114  00E8  0AB0               	incf	_an4_time_count^(0+384),f
 16115  00E9  1903               	skipnz
 16116  00EA  0AB1               	incf	(_an4_time_count+1)^(0+384),f
 16117                           
 16118                           ;interrupt.c: 234: if(an4_time_count>=5)
 16119  00EB  3000               	movlw	0
 16120  00EC  0231               	subwf	(_an4_time_count+1)^(0+384),w
 16121  00ED  3005               	movlw	5
 16122  00EE  1903               	skipnz
 16123  00EF  0230               	subwf	_an4_time_count^(0+384),w
 16124  00F0  1C03               	skipc
 16125  00F1  28F7               	goto	i1l15544
 16126                           
 16127                           ;interrupt.c: 235: {
 16128                           ;interrupt.c: 236: an4_time_count=0x00;
 16129  00F2  01B0               	clrf	_an4_time_count^(0+384)
 16130  00F3  01B1               	clrf	(_an4_time_count+1)^(0+384)
 16131                           
 16132                           ;interrupt.c: 238: handle_an4_process_flag=0x01;
 16133  00F4  0022               	movlb	2	; select bank2
 16134  00F5  01AD               	clrf	_handle_an4_process_flag^(0+256)
 16135  00F6  0AAD               	incf	_handle_an4_process_flag^(0+256),f
 16136  00F7                     i1l15544:	
 16137                           
 16138                           ;interrupt.c: 239: }
 16139                           ;interrupt.c: 241: }
 16140                           ;interrupt.c: 243: if(open_an10_time==0x01)
 16141  00F7  0022               	movlb	2	; select bank2
 16142  00F8  0B38               	decfsz	_open_an10_time^(0+256),w
 16143  00F9  290A               	goto	i1l15554
 16144                           
 16145                           ;interrupt.c: 244: {
 16146                           ;interrupt.c: 245: an10_time_count++;
 16147  00FA  0023               	movlb	3	; select bank3
 16148  00FB  0AA8               	incf	_an10_time_count^(0+384),f
 16149  00FC  1903               	skipnz
 16150  00FD  0AA9               	incf	(_an10_time_count+1)^(0+384),f
 16151                           
 16152                           ;interrupt.c: 247: if(an10_time_count>=2)
 16153  00FE  3000               	movlw	0
 16154  00FF  0229               	subwf	(_an10_time_count+1)^(0+384),w
 16155  0100  3002               	movlw	2
 16156  0101  1903               	skipnz
 16157  0102  0228               	subwf	_an10_time_count^(0+384),w
 16158  0103  1C03               	skipc
 16159  0104  290A               	goto	i1l15554
 16160                           
 16161                           ;interrupt.c: 248: {
 16162                           ;interrupt.c: 249: an10_time_count=0x00;
 16163  0105  01A8               	clrf	_an10_time_count^(0+384)
 16164  0106  01A9               	clrf	(_an10_time_count+1)^(0+384)
 16165                           
 16166                           ;interrupt.c: 251: handle_an10_process_flag=0x01;
 16167  0107  0022               	movlb	2	; select bank2
 16168  0108  01A9               	clrf	_handle_an10_process_flag^(0+256)
 16169  0109  0AA9               	incf	_handle_an10_process_flag^(0+256),f
 16170  010A                     i1l15554:	
 16171                           
 16172                           ;interrupt.c: 252: }
 16173                           ;interrupt.c: 254: }
 16174                           ;interrupt.c: 257: if (uart1_time_count > 0x00)
 16175  010A  0022               	movlb	2	; select bank2
 16176  010B  084E               	movf	_uart1_time_count^(0+256),w
 16177  010C  1903               	btfsc	3,2
 16178  010D  2985               	goto	i1l15620
 16179                           
 16180                           ;interrupt.c: 258: {
 16181                           ;interrupt.c: 259: uart1_time_count--;
 16182  010E  0BCE               	decfsz	_uart1_time_count^(0+256),f
 16183                           
 16184                           ;interrupt.c: 261: if(uart1_time_count==0)
 16185  010F  2985               	goto	i1l15620
 16186                           
 16187                           ;interrupt.c: 262: {
 16188                           ;interrupt.c: 263: if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA1)&&(uart1_rx_
      +                          buf[4]==0xAA))
 16189  0110  0021               	movlb	1	; select bank1
 16190  0111  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16191  0112  3A05               	xorlw	5
 16192  0113  1D03               	skipz
 16193  0114  2922               	goto	i1l15566
 16194  0115  0028               	movlb	8	; select bank8
 16195  0116  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16196  0117  3AA1               	xorlw	161
 16197  0118  1D03               	skipz
 16198  0119  2922               	goto	i1l15566
 16199  011A  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16200  011B  3AAA               	xorlw	170
 16201  011C  1D03               	skipz
 16202  011D  2922               	goto	i1l15566
 16203                           
 16204                           ;interrupt.c: 264: {
 16205                           ;interrupt.c: 265: rx_frame_kind=0x01;
 16206  011E  0022               	movlb	2	; select bank2
 16207  011F  01C4               	clrf	_rx_frame_kind^(0+256)
 16208  0120  0AC4               	incf	_rx_frame_kind^(0+256),f
 16209  0121  2933               	goto	i1l15574
 16210  0122                     i1l15566:	
 16211                           ;interrupt.c: 268: }
 16212                           
 16213                           ;interrupt.c: 267: uart1_receive_flag=TRUE;
 16214                           
 16215                           
 16216                           ;interrupt.c: 269: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA2)&&(uart
      +                          1_rx_buf[4]==0xAA))
 16217  0122  0021               	movlb	1	; select bank1
 16218  0123  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16219  0124  3A05               	xorlw	5
 16220  0125  1D03               	skipz
 16221  0126  2936               	goto	i1l15576
 16222  0127  0028               	movlb	8	; select bank8
 16223  0128  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16224  0129  3AA2               	xorlw	162
 16225  012A  1D03               	skipz
 16226  012B  2936               	goto	i1l15576
 16227  012C  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16228  012D  3AAA               	xorlw	170
 16229  012E  1D03               	skipz
 16230  012F  2936               	goto	i1l15576
 16231                           
 16232                           ;interrupt.c: 270: {
 16233                           ;interrupt.c: 271: rx_frame_kind=0x02;
 16234  0130  3002               	movlw	2
 16235  0131                     L66:	
 16236  0131  0022               	movlb	2	; select bank2
 16237  0132  00C4               	movwf	_rx_frame_kind^(0+256)
 16238  0133                     i1l15574:	
 16239                           
 16240                           ;interrupt.c: 273: uart1_receive_flag=TRUE;
 16241  0133  01CD               	clrf	_uart1_receive_flag^(0+256)
 16242  0134  0ACD               	incf	_uart1_receive_flag^(0+256),f
 16243                           
 16244                           ;interrupt.c: 274: }
 16245  0135  2985               	goto	i1l15620
 16246  0136                     i1l15576:	
 16247                           
 16248                           ;interrupt.c: 275: else if((uart1_receive_byte_count==21)&&(uart1_rx_buf[1]==0xA3)&&(uar
      +                          t1_rx_buf[20]==0xAA))
 16249  0136  0021               	movlb	1	; select bank1
 16250  0137  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16251  0138  3A15               	xorlw	21
 16252  0139  1D03               	skipz
 16253  013A  2946               	goto	i1l15586
 16254  013B  0028               	movlb	8	; select bank8
 16255  013C  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16256  013D  3AA3               	xorlw	163
 16257  013E  1D03               	skipz
 16258  013F  2946               	goto	i1l15586
 16259  0140  0834               	movf	(_uart1_rx_buf^(0+1024)+20),w
 16260  0141  3AAA               	xorlw	170
 16261  0142  1D03               	skipz
 16262  0143  2946               	goto	i1l15586
 16263                           
 16264                           ;interrupt.c: 276: {
 16265                           ;interrupt.c: 277: rx_frame_kind=0x03;
 16266  0144  3003               	movlw	3
 16267  0145  2931               	goto	L66
 16268  0146                     i1l15586:	
 16269                           
 16270                           ;interrupt.c: 281: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA4)&&(uart
      +                          1_rx_buf[4]==0xAA))
 16271  0146  0021               	movlb	1	; select bank1
 16272  0147  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16273  0148  3A05               	xorlw	5
 16274  0149  1D03               	skipz
 16275  014A  2956               	goto	i1l15596
 16276  014B  0028               	movlb	8	; select bank8
 16277  014C  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16278  014D  3AA4               	xorlw	164
 16279  014E  1D03               	skipz
 16280  014F  2956               	goto	i1l15596
 16281  0150  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16282  0151  3AAA               	xorlw	170
 16283  0152  1D03               	skipz
 16284  0153  2956               	goto	i1l15596
 16285                           
 16286                           ;interrupt.c: 282: {
 16287                           ;interrupt.c: 283: rx_frame_kind=0x04;
 16288  0154  3004               	movlw	4
 16289  0155  2931               	goto	L66
 16290  0156                     i1l15596:	
 16291                           
 16292                           ;interrupt.c: 287: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA5)&&(uart
      +                          1_rx_buf[4]==0xAA))
 16293  0156  0021               	movlb	1	; select bank1
 16294  0157  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16295  0158  3A05               	xorlw	5
 16296  0159  1D03               	skipz
 16297  015A  2966               	goto	i1l15606
 16298  015B  0028               	movlb	8	; select bank8
 16299  015C  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16300  015D  3AA5               	xorlw	165
 16301  015E  1D03               	skipz
 16302  015F  2966               	goto	i1l15606
 16303  0160  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16304  0161  3AAA               	xorlw	170
 16305  0162  1D03               	skipz
 16306  0163  2966               	goto	i1l15606
 16307                           
 16308                           ;interrupt.c: 288: {
 16309                           ;interrupt.c: 289: rx_frame_kind=0x05;
 16310  0164  3005               	movlw	5
 16311  0165  2931               	goto	L66
 16312  0166                     i1l15606:	
 16313                           
 16314                           ;interrupt.c: 293: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA6)&&(uart
      +                          1_rx_buf[4]==0xAA))
 16315  0166  0021               	movlb	1	; select bank1
 16316  0167  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16317  0168  3A05               	xorlw	5
 16318  0169  1D03               	skipz
 16319  016A  2976               	goto	i1l258
 16320  016B  0028               	movlb	8	; select bank8
 16321  016C  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16322  016D  3AA6               	xorlw	166
 16323  016E  1D03               	skipz
 16324  016F  2976               	goto	i1l258
 16325  0170  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 16326  0171  3AAA               	xorlw	170
 16327  0172  1D03               	skipz
 16328  0173  2976               	goto	i1l258
 16329                           
 16330                           ;interrupt.c: 294: {
 16331                           ;interrupt.c: 295: rx_frame_kind=0x06;
 16332  0174  3006               	movlw	6
 16333  0175  2931               	goto	L66
 16334  0176                     i1l258:	
 16335                           
 16336                           ;interrupt.c: 299: else
 16337                           ;interrupt.c: 300: {
 16338                           ;interrupt.c: 301: if (RCSTAbits.FERR || RCSTAbits.OERR)
 16339  0176  0023               	movlb	3	; select bank3
 16340  0177  191D               	btfsc	29,2	;volatile
 16341  0178  297B               	goto	i1l262
 16342  0179  1C9D               	btfss	29,1	;volatile
 16343  017A  2983               	goto	i1l15618
 16344  017B                     i1l262:	
 16345                           
 16346                           ;interrupt.c: 302: {
 16347                           ;interrupt.c: 303: RCSTAbits.CREN = 0x00;
 16348  017B  121D               	bcf	29,4	;volatile
 16349                           
 16350                           ;interrupt.c: 304: RCSTAbits.SPEN = 0x00;
 16351  017C  139D               	bcf	29,7	;volatile
 16352                           
 16353                           ;interrupt.c: 305: __nop();
 16354  017D  0000               	nop
 16355                           
 16356                           ;interrupt.c: 306: __nop();
 16357  017E  0000               	nop
 16358                           
 16359                           ;interrupt.c: 307: __nop();
 16360  017F  0000               	nop
 16361                           
 16362                           ;interrupt.c: 308: RCSTAbits.CREN = 0x01;
 16363  0180  0023               	movlb	3	; select bank3
 16364  0181  161D               	bsf	29,4	;volatile
 16365                           
 16366                           ;interrupt.c: 309: RCSTAbits.SPEN = 0x01;
 16367  0182  179D               	bsf	29,7	;volatile
 16368  0183                     i1l15618:	
 16369                           
 16370                           ;interrupt.c: 310: }
 16371                           ;interrupt.c: 312: uart1_receive_byte_count=0x00;
 16372  0183  0021               	movlb	1	; select bank1
 16373  0184  01D9               	clrf	_uart1_receive_byte_count^(0+128)
 16374  0185                     i1l15620:	
 16375                           
 16376                           ;interrupt.c: 313: }
 16377                           ;interrupt.c: 314: }
 16378                           ;interrupt.c: 316: }
 16379                           ;interrupt.c: 319: if (uart_send_delay_timer > 0x00)
 16380  0185  0022               	movlb	2	; select bank2
 16381  0186  0850               	movf	_uart_send_delay_timer^(0+256),w
 16382  0187  1903               	btfsc	3,2
 16383  0188  298D               	goto	i1l15626
 16384                           
 16385                           ;interrupt.c: 320: {
 16386                           ;interrupt.c: 321: uart_send_delay_timer--;
 16387  0189  0BD0               	decfsz	_uart_send_delay_timer^(0+256),f
 16388                           
 16389                           ;interrupt.c: 323: if (uart_send_delay_timer == 0x00)
 16390  018A  298D               	goto	i1l15626
 16391                           
 16392                           ;interrupt.c: 324: {
 16393                           ;interrupt.c: 325: TXIE = 0x01;
 16394  018B  0021               	movlb	1	; select bank1
 16395  018C  1611               	bsf	17,4	;volatile
 16396  018D                     i1l15626:	
 16397                           
 16398                           ;interrupt.c: 326: }
 16399                           ;interrupt.c: 328: }
 16400                           ;interrupt.c: 330: if (uart_send_end_flag == 0x01)
 16401  018D  0022               	movlb	2	; select bank2
 16402  018E  0B51               	decfsz	_uart_send_end_flag^(0+256),w
 16403  018F  2995               	goto	i1l15632
 16404                           
 16405                           ;interrupt.c: 331: {
 16406                           ;interrupt.c: 332: if (TXSTAbits.TRMT)
 16407  0190  0023               	movlb	3	; select bank3
 16408  0191  1C9E               	btfss	30,1	;volatile
 16409  0192  2995               	goto	i1l15632
 16410                           
 16411                           ;interrupt.c: 333: {
 16412                           ;interrupt.c: 335: uart_send_end_flag = 0x00;
 16413  0193  0022               	movlb	2	; select bank2
 16414  0194  01D1               	clrf	_uart_send_end_flag^(0+256)
 16415  0195                     i1l15632:	
 16416                           
 16417                           ;interrupt.c: 337: }
 16418                           ;interrupt.c: 339: }
 16419                           ;interrupt.c: 343: if(ird_receive_time_count>0)
 16420  0195  0022               	movlb	2	; select bank2
 16421  0196  0833               	movf	_ird_receive_time_count^(0+256),w
 16422  0197  1903               	btfsc	3,2
 16423  0198  29A8               	goto	i1l15646
 16424                           
 16425                           ;interrupt.c: 344: {
 16426                           ;interrupt.c: 345: ird_receive_time_count--;
 16427  0199  0BB3               	decfsz	_ird_receive_time_count^(0+256),f
 16428                           
 16429                           ;interrupt.c: 347: if(ird_receive_time_count==0x00)
 16430  019A  29A8               	goto	i1l15646
 16431                           
 16432                           ;interrupt.c: 348: {
 16433                           ;interrupt.c: 349: if(receive_bit_count==32)
 16434  019B  0843               	movf	_receive_bit_count^(0+256),w
 16435  019C  3A20               	xorlw	32
 16436  019D  1D03               	skipz
 16437  019E  29A3               	goto	i1l15642
 16438                           
 16439                           ;interrupt.c: 350: {
 16440                           ;interrupt.c: 351: ird_receive_flag=0x01;
 16441  019F  01B2               	clrf	_ird_receive_flag^(0+256)
 16442  01A0  0AB2               	incf	_ird_receive_flag^(0+256),f
 16443                           
 16444                           ;interrupt.c: 353: receive_bit_count=0x00;
 16445  01A1  01C3               	clrf	_receive_bit_count^(0+256)
 16446                           
 16447                           ;interrupt.c: 354: }
 16448  01A2  29A8               	goto	i1l15646
 16449  01A3                     i1l15642:	
 16450                           
 16451                           ;interrupt.c: 355: else
 16452                           ;interrupt.c: 356: {
 16453                           ;interrupt.c: 357: receive_bit_count=0x00;
 16454  01A3  01C3               	clrf	_receive_bit_count^(0+256)
 16455                           
 16456                           ;interrupt.c: 359: ird_status=0x00;
 16457  01A4  01B4               	clrf	_ird_status^(0+256)
 16458                           
 16459                           ;interrupt.c: 361: TMR0=0;
 16460  01A5  0020               	movlb	0	; select bank0
 16461  01A6  0195               	clrf	21	;volatile
 16462                           
 16463                           ;interrupt.c: 363: TMR0IF = 0;
 16464  01A7  110B               	bcf	11,2	;volatile
 16465  01A8                     i1l15646:	
 16466                           
 16467                           ;interrupt.c: 365: }
 16468                           ;interrupt.c: 366: }
 16469                           ;interrupt.c: 367: }
 16470                           ;interrupt.c: 371: }
 16471                           ;interrupt.c: 375: if (TXIE && TXIF)
 16472  01A8  0021               	movlb	1	; select bank1
 16473  01A9  1E11               	btfss	17,4	;volatile
 16474  01AA  29C5               	goto	i1l271
 16475  01AB  0020               	movlb	0	; select bank0
 16476  01AC  1E11               	btfss	17,4	;volatile
 16477  01AD  29C5               	goto	i1l271
 16478                           
 16479                           ;interrupt.c: 376: {
 16480                           ;interrupt.c: 377: if (uart_send_byte_count > 0x00)
 16481  01AE  0022               	movlb	2	; select bank2
 16482  01AF  084F               	movf	_uart_send_byte_count^(0+256),w
 16483  01B0  1903               	btfsc	3,2
 16484  01B1  29BC               	goto	i1l15658
 16485                           
 16486                           ;interrupt.c: 378: {
 16487                           ;interrupt.c: 379: uart_send_byte_count--;
 16488  01B2  03CF               	decf	_uart_send_byte_count^(0+256),f
 16489                           
 16490                           ;interrupt.c: 380: TXREG = *uart_send_point;
 16491  01B3  0852               	movf	_uart_send_point^(0+256),w
 16492  01B4  0086               	movwf	6
 16493  01B5  0187               	clrf	7
 16494  01B6  0801               	movf	1,w
 16495  01B7  0023               	movlb	3	; select bank3
 16496  01B8  009A               	movwf	26	;volatile
 16497                           
 16498                           ;interrupt.c: 381: uart_send_point++;
 16499  01B9  0022               	movlb	2	; select bank2
 16500  01BA  0AD2               	incf	_uart_send_point^(0+256),f
 16501                           
 16502                           ;interrupt.c: 382: }
 16503  01BB  29C5               	goto	i1l271
 16504  01BC                     i1l15658:	
 16505                           
 16506                           ;interrupt.c: 383: else if (uart_send_byte_count == 0x00)
 16507  01BC  08CF               	movf	_uart_send_byte_count^(0+256),f
 16508  01BD  1D03               	skipz
 16509  01BE  29C4               	goto	i1l274
 16510                           
 16511                           ;interrupt.c: 384: {
 16512                           ;interrupt.c: 385: uart_send_end_flag = 0x01;
 16513  01BF  01D1               	clrf	_uart_send_end_flag^(0+256)
 16514  01C0  0AD1               	incf	_uart_send_end_flag^(0+256),f
 16515                           
 16516                           ;interrupt.c: 386: TXIE = 0x00;
 16517  01C1  0021               	movlb	1	; select bank1
 16518  01C2  1211               	bcf	17,4	;volatile
 16519                           
 16520                           ;interrupt.c: 387: }
 16521  01C3  29C5               	goto	i1l271
 16522  01C4                     i1l274:	
 16523                           
 16524                           ;interrupt.c: 388: else
 16525                           ;interrupt.c: 389: {
 16526                           ;interrupt.c: 390: __nop();
 16527  01C4  0000               	nop
 16528  01C5                     i1l271:	
 16529                           
 16530                           ;interrupt.c: 391: }
 16531                           ;interrupt.c: 392: }
 16532                           ;interrupt.c: 394: if(RCIF && RCIE)
 16533  01C5  0020               	movlb	0	; select bank0
 16534  01C6  1E91               	btfss	17,5	;volatile
 16535  01C7  29EB               	goto	i1l15674
 16536  01C8  0021               	movlb	1	; select bank1
 16537  01C9  1E91               	btfss	17,5	;volatile
 16538  01CA  29EB               	goto	i1l15674
 16539                           
 16540                           ;interrupt.c: 395: {
 16541                           ;interrupt.c: 397: r1_data=RCREG;
 16542  01CB  0023               	movlb	3	; select bank3
 16543  01CC  0819               	movf	25,w	;volatile
 16544  01CD  0020               	movlb	0	; select bank0
 16545  01CE  00A0               	movwf	isr@r1_data
 16546                           
 16547                           ;interrupt.c: 399: uart1_time_count=0x0A;
 16548  01CF  300A               	movlw	10
 16549  01D0  0022               	movlb	2	; select bank2
 16550  01D1  00CE               	movwf	_uart1_time_count^(0+256)
 16551                           
 16552                           ;interrupt.c: 401: if( (uart1_receive_byte_count<21)&&(uart1_receive_flag==FALSE) )
 16553  01D2  3015               	movlw	21
 16554  01D3  0021               	movlb	1	; select bank1
 16555  01D4  0259               	subwf	_uart1_receive_byte_count^(0+128),w
 16556  01D5  1803               	skipnc
 16557  01D6  29EB               	goto	i1l15674
 16558  01D7  0022               	movlb	2	; select bank2
 16559  01D8  08CD               	movf	_uart1_receive_flag^(0+256),f
 16560  01D9  1D03               	skipz
 16561  01DA  29EB               	goto	i1l15674
 16562                           
 16563                           ;interrupt.c: 402: {
 16564                           ;interrupt.c: 403: uart1_rx_buf[uart1_receive_byte_count]=r1_data;
 16565  01DB  0021               	movlb	1	; select bank1
 16566  01DC  0859               	movf	_uart1_receive_byte_count^(0+128),w
 16567  01DD  3E20               	addlw	_uart1_rx_buf& (0+255)
 16568  01DE  0086               	movwf	6
 16569  01DF  3004               	movlw	4	; select bank8/9
 16570  01E0  0087               	movwf	7
 16571  01E1  0020               	movlb	0	; select bank0
 16572  01E2  0820               	movf	isr@r1_data,w
 16573  01E3  0081               	movwf	1
 16574                           
 16575                           ;interrupt.c: 405: if(uart1_rx_buf[0]==0x55)
 16576  01E4  0028               	movlb	8	; select bank8
 16577  01E5  0820               	movf	_uart1_rx_buf^(0+1024),w
 16578  01E6  3A55               	xorlw	85
 16579  01E7  1D03               	skipz
 16580  01E8  29EB               	goto	i1l15674
 16581                           
 16582                           ;interrupt.c: 406: {
 16583                           ;interrupt.c: 407: uart1_receive_byte_count++;
 16584  01E9  0021               	movlb	1	; select bank1
 16585  01EA  0AD9               	incf	_uart1_receive_byte_count^(0+128),f
 16586  01EB                     i1l15674:	
 16587                           
 16588                           ;interrupt.c: 408: }
 16589                           ;interrupt.c: 409: }
 16590                           ;interrupt.c: 413: }
 16591                           ;interrupt.c: 416: if(C1IE && C1IF)
 16592  01EB  0021               	movlb	1	; select bank1
 16593  01EC  1E92               	btfss	18,5	;volatile
 16594  01ED  2A08               	goto	i1l15686
 16595  01EE  0020               	movlb	0	; select bank0
 16596  01EF  1E92               	btfss	18,5	;volatile
 16597  01F0  2A08               	goto	i1l15686
 16598                           
 16599                           ;interrupt.c: 417: {
 16600                           ;interrupt.c: 418: C1IF=0;
 16601  01F1  1292               	bcf	18,5	;volatile
 16602                           
 16603                           ;interrupt.c: 420: handle_short_flag=0x01;
 16604  01F2  0022               	movlb	2	; select bank2
 16605  01F3  3003               	movlw	3
 16606  01F4  01B0               	clrf	_handle_short_flag^(0+256)
 16607  01F5  0AB0               	incf	_handle_short_flag^(0+256),f
 16608                           
 16609                           ;interrupt.c: 422: discharge_index=0x03;
 16610  01F6  0021               	movlb	1	; select bank1
 16611  01F7  00D4               	movwf	_discharge_index^(0+128)
 16612                           
 16613                           ;interrupt.c: 424: (LATCbits.LATC3 = 0x00);
 16614  01F8  0022               	movlb	2	; select bank2
 16615  01F9  118E               	bcf	14,3	;volatile
 16616                           
 16617                           ;interrupt.c: 426: bost_pwm_value=2;
 16618  01FA  3002               	movlw	2
 16619  01FB  0021               	movlb	1	; select bank1
 16620  01FC  00C4               	movwf	_bost_pwm_value^(0+128)
 16621  01FD  01C5               	clrf	(_bost_pwm_value+1)^(0+128)
 16622                           
 16623                           ;interrupt.c: 428: Set_Bost_Pwm_Duty(bost_pwm_value);
 16624  01FE  0845               	movf	(_bost_pwm_value+1)^(0+128),w
 16625  01FF  00F1               	movwf	i1Set_Bost_Pwm_Duty@dduty+1
 16626  0200  0844               	movf	_bost_pwm_value^(0+128),w
 16627  0201  00F0               	movwf	i1Set_Bost_Pwm_Duty@dduty
 16628  0202  318E  26C4  3180   	fcall	i1_Set_Bost_Pwm_Duty
 16629                           
 16630                           ;interrupt.c: 430: Disable_Bost_Pwm();
 16631  0205  3190  20CD  3180   	fcall	i1_Disable_Bost_Pwm
 16632  0208                     i1l15686:	
 16633                           
 16634                           ;interrupt.c: 432: }
 16635                           ;interrupt.c: 434: if(IOCIE && IOCIF)
 16636  0208  198B               	btfsc	11,3	;volatile
 16637  0209  1C0B               	btfss	11,0	;volatile
 16638  020A  0009               	retfie
 16639                           
 16640                           ;interrupt.c: 435: {
 16641                           ;interrupt.c: 436: unsigned int time_cnt;
 16642                           ;interrupt.c: 438: if(IOCBF4)
 16643  020B  0027               	movlb	7	; select bank7
 16644  020C  1A16               	btfsc	22,4	;volatile
 16645                           
 16646                           ;interrupt.c: 439: {
 16647                           ;interrupt.c: 440: IOCBF4=0;
 16648  020D  1216               	bcf	22,4	;volatile
 16649                           
 16650                           ;interrupt.c: 441: }
 16651                           ;interrupt.c: 443: if(IOCBF7)
 16652  020E  1F96               	btfss	22,7	;volatile
 16653  020F  0009               	retfie
 16654                           
 16655                           ;interrupt.c: 444: {
 16656                           ;interrupt.c: 445: IOCBF7 = 0;
 16657  0210  1396               	bcf	22,7	;volatile
 16658                           
 16659                           ;interrupt.c: 447: ird_receive_time_count=150;
 16660  0211  3096               	movlw	150
 16661  0212  0022               	movlb	2	; select bank2
 16662  0213  00B3               	movwf	_ird_receive_time_count^(0+256)
 16663                           
 16664                           ;interrupt.c: 449: if((receive_bit_count<32)&&(ird_receive_flag==0x00))
 16665  0214  3020               	movlw	32
 16666  0215  0243               	subwf	_receive_bit_count^(0+256),w
 16667  0216  1803               	skipnc
 16668  0217  0009               	retfie
 16669  0218  08B2               	movf	_ird_receive_flag^(0+256),f
 16670  0219  1D03               	skipz
 16671  021A  0009               	retfie
 16672                           
 16673                           ;interrupt.c: 450: {
 16674                           ;interrupt.c: 451: if(ird_status==0x00)
 16675  021B  08B4               	movf	_ird_status^(0+256),f
 16676  021C  1D03               	skipz
 16677  021D  2A2C               	goto	i1l15708
 16678                           
 16679                           ;interrupt.c: 452: {
 16680                           ;interrupt.c: 453: ird_status=0x01;
 16681  021E  01B4               	clrf	_ird_status^(0+256)
 16682  021F  0AB4               	incf	_ird_status^(0+256),f
 16683  0220  2A28               	goto	L67
 16684  0221                     i1l15714:	
 16685                           ;interrupt.c: 455: TMR0=0;
 16686                           
 16687                           
 16688                           ;interrupt.c: 465: {
 16689                           ;interrupt.c: 466: receive_bit_count=0x00;
 16690  0221  0022               	movlb	2	; select bank2
 16691  0222  01C3               	clrf	_receive_bit_count^(0+256)
 16692                           
 16693                           ;interrupt.c: 468: ird_data=0x00;
 16694  0223  0024               	movlb	4	; select bank4
 16695  0224  01EC               	clrf	_ird_data^(0+512)
 16696  0225  01ED               	clrf	(_ird_data+1)^(0+512)
 16697  0226  01EE               	clrf	(_ird_data+2)^(0+512)
 16698  0227  01EF               	clrf	(_ird_data+3)^(0+512)
 16699  0228                     L67:	
 16700                           
 16701                           ;interrupt.c: 470: TMR0=0;
 16702  0228  0020               	movlb	0	; select bank0
 16703  0229  0195               	clrf	21	;volatile
 16704                           
 16705                           ;interrupt.c: 457: TMR0IF = 0;
 16706  022A  110B               	bcf	11,2	;volatile
 16707                           
 16708                           ;interrupt.c: 459: }
 16709  022B  0009               	retfie
 16710  022C                     i1l15708:	
 16711                           
 16712                           ;interrupt.c: 460: else if(ird_status==0x01)
 16713  022C  0B34               	decfsz	_ird_status^(0+256),w
 16714  022D  0009               	retfie
 16715                           
 16716                           ;interrupt.c: 461: {
 16717                           ;interrupt.c: 462: time_cnt=TMR0;
 16718  022E  0020               	movlb	0	; select bank0
 16719  022F  0815               	movf	21,w	;volatile
 16720  0230  00A1               	movwf	isr@time_cnt
 16721  0231  01A2               	clrf	isr@time_cnt+1
 16722                           
 16723                           ;interrupt.c: 464: if(TMR0IF==1)
 16724  0232  190B               	btfsc	11,2	;volatile
 16725  0233  2A21               	goto	i1l15714
 16726                           
 16727                           ;interrupt.c: 476: else if((time_cnt>20)&&(time_cnt<50))
 16728  0234  3000               	movlw	0
 16729  0235  0222               	subwf	isr@time_cnt+1,w
 16730  0236  3015               	movlw	21
 16731  0237  1903               	skipnz
 16732  0238  0221               	subwf	isr@time_cnt,w
 16733  0239  3000               	movlw	0
 16734  023A  1C03               	skipc
 16735  023B  2A4B               	goto	L68
 16736  023C  0222               	subwf	isr@time_cnt+1,w
 16737  023D  3032               	movlw	50
 16738  023E  1903               	skipnz
 16739  023F  0221               	subwf	isr@time_cnt,w
 16740  0240  1803               	skipnc
 16741  0241  2A4A               	goto	i1l15730
 16742                           
 16743                           ;interrupt.c: 477: {
 16744                           ;interrupt.c: 478: receive_bit_count++;
 16745  0242  0022               	movlb	2	; select bank2
 16746  0243  0AC3               	incf	_receive_bit_count^(0+256),f
 16747                           
 16748                           ;interrupt.c: 480: ird_data=ird_data<<1;
 16749  0244  0024               	movlb	4	; select bank4
 16750  0245  35EC               	lslf	_ird_data^(0+512),f
 16751  0246  0DED               	rlf	(_ird_data+1)^(0+512),f
 16752  0247  0DEE               	rlf	(_ird_data+2)^(0+512),f
 16753  0248  0DEF               	rlf	(_ird_data+3)^(0+512),f
 16754  0249  2A28               	goto	L67
 16755  024A                     i1l15730:	
 16756                           
 16757                           ;interrupt.c: 486: else if((time_cnt>50)&&(time_cnt<90))
 16758  024A  3000               	movlw	0
 16759  024B                     L68:	
 16760  024B  0222               	subwf	isr@time_cnt+1,w
 16761  024C  3033               	movlw	51
 16762  024D  1903               	skipnz
 16763  024E  0221               	subwf	isr@time_cnt,w
 16764  024F  1C03               	skipc
 16765  0250  0009               	retfie
 16766  0251  3000               	movlw	0
 16767  0252  0222               	subwf	isr@time_cnt+1,w
 16768  0253  305A               	movlw	90
 16769  0254  1903               	skipnz
 16770  0255  0221               	subwf	isr@time_cnt,w
 16771  0256  1803               	skipnc
 16772  0257  0009               	retfie
 16773                           
 16774                           ;interrupt.c: 487: {
 16775                           ;interrupt.c: 488: receive_bit_count++;
 16776  0258  0022               	movlb	2	; select bank2
 16777  0259  3001               	movlw	1
 16778  025A  0AC3               	incf	_receive_bit_count^(0+256),f
 16779                           
 16780                           ;interrupt.c: 490: ird_data=(ird_data<<1)+1;
 16781  025B  00F4               	movwf	??_isr
 16782  025C  01F5               	clrf	??_isr+1
 16783  025D  01F6               	clrf	??_isr+2
 16784  025E  01F7               	clrf	??_isr+3
 16785  025F  0024               	movlb	4	; select bank4
 16786  0260  086C               	movf	_ird_data^(0+512),w
 16787  0261  00F8               	movwf	??_isr+4
 16788  0262  086D               	movf	(_ird_data+1)^(0+512),w
 16789  0263  00F9               	movwf	??_isr+5
 16790  0264  086E               	movf	(_ird_data+2)^(0+512),w
 16791  0265  00FA               	movwf	??_isr+6
 16792  0266  086F               	movf	(_ird_data+3)^(0+512),w
 16793  0267  00FB               	movwf	??_isr+7
 16794  0268  35F8               	lslf	??_isr+4,f
 16795  0269  0DF9               	rlf	??_isr+5,f
 16796  026A  0DFA               	rlf	??_isr+6,f
 16797  026B  0DFB               	rlf	??_isr+7,f
 16798  026C  0878               	movf	??_isr+4,w
 16799  026D  07F4               	addwf	??_isr,f
 16800  026E  0879               	movf	??_isr+5,w
 16801  026F  3DF5               	addwfc	??_isr+1,f
 16802  0270  087A               	movf	??_isr+6,w
 16803  0271  3DF6               	addwfc	??_isr+2,f
 16804  0272  087B               	movf	??_isr+7,w
 16805  0273  3DF7               	addwfc	??_isr+3,f
 16806  0274  0877               	movf	??_isr+3,w
 16807  0275  00EF               	movwf	(_ird_data+3)^(0+512)
 16808  0276  0876               	movf	??_isr+2,w
 16809  0277  00EE               	movwf	(_ird_data+2)^(0+512)
 16810  0278  0875               	movf	??_isr+1,w
 16811  0279  00ED               	movwf	(_ird_data+1)^(0+512)
 16812  027A  0874               	movf	??_isr,w
 16813  027B  00EC               	movwf	_ird_data^(0+512)
 16814  027C  2A28               	goto	L67
 16815  027D                     __end_of_isr:	
 16816                           
 16817                           	psect	text52
 16818  10CD                     __ptext52:	
 16819 ;; *************** function i1_Disable_Bost_Pwm *****************
 16820 ;; Defined at:
 16821 ;;		line 201 in file "D:\MCUProject\ZH-SL-H40\src\pwm.c"
 16822 ;; Parameters:    Size  Location     Type
 16823 ;;		None
 16824 ;; Auto vars:     Size  Location     Type
 16825 ;;		None
 16826 ;; Return value:  Size  Location     Type
 16827 ;;		None               void
 16828 ;; Registers used:
 16829 ;;		None
 16830 ;; Tracked objects:
 16831 ;;		On entry : 1F/6
 16832 ;;		On exit  : 1F/8
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16839 ;;Total ram usage:        0 bytes
 16840 ;; Hardware stack levels used:    1
 16841 ;; This function calls:
 16842 ;;		Nothing
 16843 ;; This function is called by:
 16844 ;;		_isr
 16845 ;; This function uses a non-reentrant model
 16846 ;;
 16847                           
 16848                           
 16849                           ;psect for function i1_Disable_Bost_Pwm
 16850  10CD                     i1_Disable_Bost_Pwm:	
 16851                           
 16852                           ;pwm.c: 203: TRISBbits.TRISB5 =1;
 16853                           
 16854                           ;incstack = 0
 16855                           ; Regs used in i1_Disable_Bost_Pwm: []
 16856  10CD  0021               	movlb	1	; select bank1
 16857  10CE  168D               	bsf	13,5	;volatile
 16858                           
 16859                           ;pwm.c: 205: TMR4ON=0;
 16860  10CF  0028               	movlb	8	; select bank8
 16861  10D0  1117               	bcf	23,2	;volatile
 16862  10D1  0008               	return
 16863  10D2                     __end_ofi1_Disable_Bost_Pwm:	
 16864  007E                     btemp	set	126	;btemp
 16865  007E                     wtemp	set	126
 16866  007E                     wtemp0	set	126
 16867  0080                     wtemp1	set	128
 16868  0082                     wtemp2	set	130
 16869  0084                     wtemp3	set	132
 16870  0086                     wtemp4	set	134
 16871  0088                     wtemp5	set	136
 16872  007F                     wtemp6	set	127
 16873  007E                     ttemp	set	126
 16874  007E                     ttemp0	set	126
 16875  0081                     ttemp1	set	129
 16876  0084                     ttemp2	set	132
 16877  0087                     ttemp3	set	135
 16878  007F                     ttemp4	set	127
 16879  007E                     ltemp	set	126
 16880  007E                     ltemp0	set	126
 16881  0082                     ltemp1	set	130
 16882  0086                     ltemp2	set	134
 16883  0080                     ltemp3	set	128
 16884  2370                     
 16885                           	psect	text6_split_1
 16886  027F                     l18434:	
 16887                           
 16888                           ;uart.c: 384: if(uart1_rx_buf[1]==0xA2)
 16889  027F  0028               	movlb	8	; select bank8
 16890  0280  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 16891  0281  3AA2               	xorlw	162
 16892  0282  1D03               	skipz
 16893  0283  2EA1               	goto	l18696
 16894                           
 16895                           ;uart.c: 385: {
 16896                           ;uart.c: 386: crc_in=crc16(&uart1_rx_buf[1],1);
 16897  0284  3021               	movlw	low (_uart1_rx_buf+1)
 16898  0285  27F1               	fcall	PL234	;call to abstracted procedure
 16899  0286  3188  2003  3182   	fcall	_crc16
 16900  0289  0824               	movf	?_crc16+1,w
 16901  028A  00E7               	movwf	handle_uart_rx_buf@crc_in+1
 16902                           
 16903                           ;uart.c: 388: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
 16904  028B  27CF  3182         	fcall	PL176	;call to abstracted procedure
 16905  028D  1D03               	skipz
 16906  028E  2EA1               	goto	l18696
 16907                           
 16908                           ;uart.c: 389: {
 16909                           ;uart.c: 392: uart1_tx_buf[0]=0x55;
 16910  028F  3055               	movlw	85
 16911  0290  0027               	movlb	7	; select bank7
 16912  0291  00A0               	movwf	_uart1_tx_buf^(0+896)
 16913                           
 16914                           ;uart.c: 394: uart1_tx_buf[1]=0xB2;
 16915  0292  30B2               	movlw	178
 16916  0293  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 16917                           
 16918                           ;uart.c: 396: uart1_tx_buf[2] =(unsigned char )(light_pv/256);
 16919  0294  26F5  3182         	fcall	PL78	;call to abstracted procedure
 16920  0296  26C6               	fcall	PL32	;call to abstracted procedure
 16921  0297  31A2  2291  3182   	fcall	___fldiv
 16922  029A  26CF               	fcall	PL34	;call to abstracted procedure
 16923  029B  318E  2674  3182   	fcall	___fltol
 16924  029E  085A               	movf	?___fltol,w
 16925  029F  0027               	movlb	7	; select bank7
 16926  02A0  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 16927                           
 16928                           ;uart.c: 398: uart1_tx_buf[3] =(unsigned char )light_pv;
 16929  02A1  2779               	fcall	PL128	;call to abstracted procedure
 16930  02A2  318E  2674  3182   	fcall	___fltol
 16931  02A5  085A               	movf	?___fltol,w
 16932  02A6  0027               	movlb	7	; select bank7
 16933  02A7  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 16934                           
 16935                           ;uart.c: 400: uart1_tx_buf[4] =(unsigned char )(load_cc_I/256);
 16936  02A8  26AF               	fcall	PL14	;call to abstracted procedure
 16937  02A9  31A2  2291  3182   	fcall	___fldiv
 16938  02AC  26CF               	fcall	PL34	;call to abstracted procedure
 16939  02AD  318E  2674  3182   	fcall	___fltol
 16940  02B0  085A               	movf	?___fltol,w
 16941  02B1  0027               	movlb	7	; select bank7
 16942  02B2  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 16943                           
 16944                           ;uart.c: 402: uart1_tx_buf[5] =(unsigned char )load_cc_I;
 16945  02B3  2768               	fcall	PL126	;call to abstracted procedure
 16946  02B4  318E  2674  3182   	fcall	___fltol
 16947  02B7  085A               	movf	?___fltol,w
 16948  02B8  0027               	movlb	7	; select bank7
 16949  02B9  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 16950                           
 16951                           ;uart.c: 404: uart1_tx_buf[6] =(unsigned char )(step_01_load_percent);
 16952  02BA  2735               	fcall	PL120	;call to abstracted procedure
 16953  02BB  318E  2674  3182   	fcall	___fltol
 16954  02BE  085A               	movf	?___fltol,w
 16955  02BF  0027               	movlb	7	; select bank7
 16956  02C0  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
 16957                           
 16958                           ;uart.c: 406: uart1_tx_buf[7] =(unsigned char )(step_02_load_percent);
 16959  02C1  2757               	fcall	PL124	;call to abstracted procedure
 16960  02C2  318E  2674  3182   	fcall	___fltol
 16961  02C5  085A               	movf	?___fltol,w
 16962  02C6  0027               	movlb	7	; select bank7
 16963  02C7  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
 16964                           
 16965                           ;uart.c: 408: uart1_tx_buf[8] =(unsigned char )(step_03_load_percent);
 16966  02C8  2746               	fcall	PL122	;call to abstracted procedure
 16967  02C9  318E  2674  3182   	fcall	___fltol
 16968  02CC  085A               	movf	?___fltol,w
 16969  02CD  0027               	movlb	7	; select bank7
 16970  02CE  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
 16971                           
 16972                           ;uart.c: 410: uart1_tx_buf[9] =(unsigned char )(step_04_load_percent);
 16973  02CF  2713               	fcall	PL114	;call to abstracted procedure
 16974  02D0  318E  2674  3182   	fcall	___fltol
 16975  02D3  085A               	movf	?___fltol,w
 16976  02D4  0027               	movlb	7	; select bank7
 16977  02D5  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
 16978                           
 16979                           ;uart.c: 412: uart1_tx_buf[10]=(unsigned char )(step_05_load_percent);
 16980  02D6  2724               	fcall	PL116	;call to abstracted procedure
 16981  02D7  318E  2674  3182   	fcall	___fltol
 16982  02DA  085A               	movf	?___fltol,w
 16983  02DB  0027               	movlb	7	; select bank7
 16984  02DC  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
 16985                           
 16986                           ;uart.c: 414: uart1_tx_buf[11]=(unsigned char )(bt_id);
 16987  02DD  0021               	movlb	1	; select bank1
 16988  02DE  086C               	movf	_bt_id^(0+128),w
 16989  02DF  0027               	movlb	7	; select bank7
 16990  02E0  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
 16991                           
 16992                           ;uart.c: 416: uart1_tx_buf[12]=(unsigned char )(light_time);
 16993  02E1  0021               	movlb	1	; select bank1
 16994  02E2  085B               	movf	_light_time^(0+128),w
 16995  02E3  0027               	movlb	7	; select bank7
 16996  02E4  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
 16997                           
 16998                           ;uart.c: 418: uart1_tx_buf[13] =(unsigned char )(step_01_time_limit);
 16999  02E5  0021               	movlb	1	; select bank1
 17000  02E6  0865               	movf	_step_01_time_limit^(0+128),w
 17001  02E7  0027               	movlb	7	; select bank7
 17002  02E8  00AD               	movwf	(_uart1_tx_buf^(0+896)+13)
 17003                           
 17004                           ;uart.c: 420: uart1_tx_buf[14] =(unsigned char )(step_02_time_limit);
 17005  02E9  0021               	movlb	1	; select bank1
 17006  02EA  0867               	movf	_step_02_time_limit^(0+128),w
 17007  02EB  0027               	movlb	7	; select bank7
 17008  02EC  00AE               	movwf	(_uart1_tx_buf^(0+896)+14)
 17009                           
 17010                           ;uart.c: 422: uart1_tx_buf[15] =(unsigned char )(step_03_time_limit);
 17011  02ED  0021               	movlb	1	; select bank1
 17012  02EE  0869               	movf	_step_03_time_limit^(0+128),w
 17013  02EF  0027               	movlb	7	; select bank7
 17014  02F0  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
 17015                           
 17016                           ;uart.c: 424: uart1_tx_buf[16] =(unsigned char )(step_04_time_limit);
 17017  02F1  0022               	movlb	2	; select bank2
 17018  02F2  086B               	movf	_step_04_time_limit^(0+256),w
 17019  02F3  0027               	movlb	7	; select bank7
 17020  02F4  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
 17021                           
 17022                           ;uart.c: 426: uart1_tx_buf[17] =(unsigned char )(step_05_time_limit);
 17023  02F5  0022               	movlb	2	; select bank2
 17024  02F6  086D               	movf	_step_05_time_limit^(0+256),w
 17025  02F7  0027               	movlb	7	; select bank7
 17026  02F8  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
 17027                           
 17028                           ;uart.c: 429: crc_data=crc16(&uart1_tx_buf[1],17);
 17029  02F9  27EB               	fcall	PL224	;call to abstracted procedure
 17030  02FA  3011               	movlw	17
 17031  02FB  00A5               	movwf	crc16@usDataLen
 17032  02FC  3188  2003  3182   	fcall	_crc16
 17033                           
 17034                           ;uart.c: 431: uart1_tx_buf[18]=crc_data/256;
 17035  02FF  27C8  3182         	fcall	PL172	;call to abstracted procedure
 17036  0301  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
 17037                           
 17038                           ;uart.c: 433: uart1_tx_buf[19]=crc_data%256;
 17039  0302  087C               	movf	_crc_data,w
 17040  0303  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
 17041                           
 17042                           ;uart.c: 435: uart1_tx_buf[20]=0xAA;
 17043  0304  30AA               	movlw	170
 17044  0305  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
 17045  0306  2EA1               	goto	l18696
 17046  0307                     l18482:	
 17047                           
 17048                           ;uart.c: 443: if(uart1_rx_buf[1]==0xA3)
 17049  0307  0028               	movlb	8	; select bank8
 17050  0308  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 17051  0309  3AA3               	xorlw	163
 17052  030A  1D03               	skipz
 17053  030B  2EA1               	goto	l18696
 17054                           
 17055                           ;uart.c: 444: {
 17056                           ;uart.c: 445: crc_in=crc16(&uart1_rx_buf[1],17);
 17057  030C  3021               	movlw	low (_uart1_rx_buf+1)
 17058  030D  0020               	movlb	0	; select bank0
 17059  030E  00A3               	movwf	crc16@puchMsg
 17060  030F  3004               	movlw	high (_uart1_rx_buf+1)
 17061  0310  00A4               	movwf	crc16@puchMsg+1
 17062  0311  3011               	movlw	17
 17063  0312  00A5               	movwf	crc16@usDataLen
 17064  0313  3188  2003  3182   	fcall	_crc16
 17065  0316  0824               	movf	?_crc16+1,w
 17066  0317  00E7               	movwf	handle_uart_rx_buf@crc_in+1
 17067  0318  0823               	movf	?_crc16,w
 17068  0319  00E6               	movwf	handle_uart_rx_buf@crc_in
 17069                           
 17070                           ;uart.c: 447: if(crc_in==( (uart1_rx_buf[18]<<8) | uart1_rx_buf[19]) )
 17071  031A  0867               	movf	handle_uart_rx_buf@crc_in+1,w
 17072  031B  0028               	movlb	8	; select bank8
 17073  031C  0632               	xorwf	(_uart1_rx_buf^(0+1024)+18),w
 17074  031D  1D03               	skipz
 17075  031E  2B23               	goto	u11045
 17076  031F  0020               	movlb	0	; select bank0
 17077  0320  0866               	movf	handle_uart_rx_buf@crc_in,w
 17078  0321  0028               	movlb	8	; select bank8
 17079  0322  0633               	xorwf	(_uart1_rx_buf^(0+1024)+19),w
 17080  0323                     u11045:	
 17081  0323  1D03               	skipz
 17082  0324  2EA1               	goto	l18696
 17083                           
 17084                           ;uart.c: 448: {
 17085                           ;uart.c: 450: light_pv = (uart1_rx_buf[2]<<8) | uart1_rx_buf[3];
 17086  0325  0822               	movf	(_uart1_rx_buf^(0+1024)+2),w
 17087  0326  0020               	movlb	0	; select bank0
 17088  0327  00AE               	movwf	___awtofl@c+1
 17089  0328  0028               	movlb	8	; select bank8
 17090  0329  0823               	movf	(_uart1_rx_buf^(0+1024)+3),w
 17091  032A  0020               	movlb	0	; select bank0
 17092  032B  00AD               	movwf	___awtofl@c
 17093  032C  31A6  2667  3182   	fcall	___awtofl
 17094  032F  0830               	movf	?___awtofl+3,w
 17095  0330  0021               	movlb	1	; select bank1
 17096  0331  00E0               	movwf	(_light_pv+3)^(0+128)
 17097  0332  0020               	movlb	0	; select bank0
 17098  0333  082F               	movf	?___awtofl+2,w
 17099  0334  0021               	movlb	1	; select bank1
 17100  0335  00DF               	movwf	(_light_pv+2)^(0+128)
 17101  0336  0020               	movlb	0	; select bank0
 17102  0337  082E               	movf	?___awtofl+1,w
 17103  0338  0021               	movlb	1	; select bank1
 17104  0339  00DE               	movwf	(_light_pv+1)^(0+128)
 17105  033A  0020               	movlb	0	; select bank0
 17106  033B  082D               	movf	?___awtofl,w
 17107  033C  0021               	movlb	1	; select bank1
 17108  033D  00DD               	movwf	_light_pv^(0+128)
 17109                           
 17110                           ;uart.c: 452: load_cc_I = (uart1_rx_buf[4]<<8) | uart1_rx_buf[5];
 17111  033E  0028               	movlb	8	; select bank8
 17112  033F  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 17113  0340  0020               	movlb	0	; select bank0
 17114  0341  00AE               	movwf	___awtofl@c+1
 17115  0342  0028               	movlb	8	; select bank8
 17116  0343  0825               	movf	(_uart1_rx_buf^(0+1024)+5),w
 17117  0344  0020               	movlb	0	; select bank0
 17118  0345  00AD               	movwf	___awtofl@c
 17119  0346  31A6  2667  3182   	fcall	___awtofl
 17120  0349  0830               	movf	?___awtofl+3,w
 17121  034A  0021               	movlb	1	; select bank1
 17122  034B  00E4               	movwf	(_load_cc_I+3)^(0+128)
 17123  034C  0020               	movlb	0	; select bank0
 17124  034D  082F               	movf	?___awtofl+2,w
 17125  034E  0021               	movlb	1	; select bank1
 17126  034F  00E3               	movwf	(_load_cc_I+2)^(0+128)
 17127  0350  0020               	movlb	0	; select bank0
 17128  0351  082E               	movf	?___awtofl+1,w
 17129  0352  0021               	movlb	1	; select bank1
 17130  0353  00E2               	movwf	(_load_cc_I+1)^(0+128)
 17131  0354  0020               	movlb	0	; select bank0
 17132  0355  082D               	movf	?___awtofl,w
 17133  0356  0021               	movlb	1	; select bank1
 17134  0357  00E1               	movwf	_load_cc_I^(0+128)
 17135                           
 17136                           ;uart.c: 454: step_01_load_percent = uart1_rx_buf[6];
 17137  0358  0028               	movlb	8	; select bank8
 17138  0359  0826               	movf	(_uart1_rx_buf^(0+1024)+6),w
 17139  035A  31A6  2684  3182   	fcall	___lbtofl
 17140  035D  0830               	movf	?___lbtofl+3,w
 17141  035E  0022               	movlb	2	; select bank2
 17142  035F  00DA               	movwf	(_step_01_load_percent+3)^(0+256)
 17143  0360  0020               	movlb	0	; select bank0
 17144  0361  082F               	movf	?___lbtofl+2,w
 17145  0362  0022               	movlb	2	; select bank2
 17146  0363  00D9               	movwf	(_step_01_load_percent+2)^(0+256)
 17147  0364  0020               	movlb	0	; select bank0
 17148  0365  082E               	movf	?___lbtofl+1,w
 17149  0366  0022               	movlb	2	; select bank2
 17150  0367  00D8               	movwf	(_step_01_load_percent+1)^(0+256)
 17151  0368  0020               	movlb	0	; select bank0
 17152  0369  082D               	movf	?___lbtofl,w
 17153  036A  0022               	movlb	2	; select bank2
 17154  036B  00D7               	movwf	_step_01_load_percent^(0+256)
 17155                           
 17156                           ;uart.c: 456: step_02_load_percent = uart1_rx_buf[7];
 17157  036C  0028               	movlb	8	; select bank8
 17158  036D  0827               	movf	(_uart1_rx_buf^(0+1024)+7),w
 17159  036E  31A6  2684  3182   	fcall	___lbtofl
 17160  0371  0830               	movf	?___lbtofl+3,w
 17161  0372  0022               	movlb	2	; select bank2
 17162  0373  00DE               	movwf	(_step_02_load_percent+3)^(0+256)
 17163  0374  0020               	movlb	0	; select bank0
 17164  0375  082F               	movf	?___lbtofl+2,w
 17165  0376  0022               	movlb	2	; select bank2
 17166  0377  00DD               	movwf	(_step_02_load_percent+2)^(0+256)
 17167  0378  0020               	movlb	0	; select bank0
 17168  0379  082E               	movf	?___lbtofl+1,w
 17169  037A  0022               	movlb	2	; select bank2
 17170  037B  00DC               	movwf	(_step_02_load_percent+1)^(0+256)
 17171  037C  0020               	movlb	0	; select bank0
 17172  037D  082D               	movf	?___lbtofl,w
 17173  037E  0022               	movlb	2	; select bank2
 17174  037F  00DB               	movwf	_step_02_load_percent^(0+256)
 17175                           
 17176                           ;uart.c: 458: step_03_load_percent = uart1_rx_buf[8];
 17177  0380  0028               	movlb	8	; select bank8
 17178  0381  0828               	movf	(_uart1_rx_buf^(0+1024)+8),w
 17179  0382  31A6  2684  3182   	fcall	___lbtofl
 17180  0385  0830               	movf	?___lbtofl+3,w
 17181  0386  0022               	movlb	2	; select bank2
 17182  0387  00E2               	movwf	(_step_03_load_percent+3)^(0+256)
 17183  0388  0020               	movlb	0	; select bank0
 17184  0389  082F               	movf	?___lbtofl+2,w
 17185  038A  0022               	movlb	2	; select bank2
 17186  038B  00E1               	movwf	(_step_03_load_percent+2)^(0+256)
 17187  038C  0020               	movlb	0	; select bank0
 17188  038D  082E               	movf	?___lbtofl+1,w
 17189  038E  0022               	movlb	2	; select bank2
 17190  038F  00E0               	movwf	(_step_03_load_percent+1)^(0+256)
 17191  0390  0020               	movlb	0	; select bank0
 17192  0391  082D               	movf	?___lbtofl,w
 17193  0392  0022               	movlb	2	; select bank2
 17194  0393  00DF               	movwf	_step_03_load_percent^(0+256)
 17195                           
 17196                           ;uart.c: 460: step_04_load_percent = uart1_rx_buf[9];
 17197  0394  0028               	movlb	8	; select bank8
 17198  0395  0829               	movf	(_uart1_rx_buf^(0+1024)+9),w
 17199  0396  31A6  2684  3182   	fcall	___lbtofl
 17200  0399  0830               	movf	?___lbtofl+3,w
 17201  039A  0022               	movlb	2	; select bank2
 17202  039B  00E6               	movwf	(_step_04_load_percent+3)^(0+256)
 17203  039C  0020               	movlb	0	; select bank0
 17204  039D  082F               	movf	?___lbtofl+2,w
 17205  039E  0022               	movlb	2	; select bank2
 17206  039F  00E5               	movwf	(_step_04_load_percent+2)^(0+256)
 17207  03A0  0020               	movlb	0	; select bank0
 17208  03A1  082E               	movf	?___lbtofl+1,w
 17209  03A2  0022               	movlb	2	; select bank2
 17210  03A3  00E4               	movwf	(_step_04_load_percent+1)^(0+256)
 17211  03A4  0020               	movlb	0	; select bank0
 17212  03A5  082D               	movf	?___lbtofl,w
 17213  03A6  0022               	movlb	2	; select bank2
 17214  03A7  00E3               	movwf	_step_04_load_percent^(0+256)
 17215                           
 17216                           ;uart.c: 462: step_05_load_percent = uart1_rx_buf[10];
 17217  03A8  0028               	movlb	8	; select bank8
 17218  03A9  082A               	movf	(_uart1_rx_buf^(0+1024)+10),w
 17219  03AA  31A6  2684  3182   	fcall	___lbtofl
 17220  03AD  0830               	movf	?___lbtofl+3,w
 17221  03AE  0022               	movlb	2	; select bank2
 17222  03AF  00EA               	movwf	(_step_05_load_percent+3)^(0+256)
 17223  03B0  0020               	movlb	0	; select bank0
 17224  03B1  082F               	movf	?___lbtofl+2,w
 17225  03B2  0022               	movlb	2	; select bank2
 17226  03B3  00E9               	movwf	(_step_05_load_percent+2)^(0+256)
 17227  03B4  0020               	movlb	0	; select bank0
 17228  03B5  082E               	movf	?___lbtofl+1,w
 17229  03B6  0022               	movlb	2	; select bank2
 17230  03B7  00E8               	movwf	(_step_05_load_percent+1)^(0+256)
 17231  03B8  0020               	movlb	0	; select bank0
 17232  03B9  082D               	movf	?___lbtofl,w
 17233  03BA  0022               	movlb	2	; select bank2
 17234  03BB  00E7               	movwf	_step_05_load_percent^(0+256)
 17235                           
 17236                           ;uart.c: 464: Adjust_Pout_Flag=0x00;
 17237  03BC  0021               	movlb	1	; select bank1
 17238  03BD  01D2               	clrf	_Adjust_Pout_Flag^(0+128)
 17239                           
 17240                           ;uart.c: 465: voltage_adjust_index=0x01;
 17241  03BE  01EE               	clrf	_voltage_adjust_index^(0+128)
 17242  03BF  0AEE               	incf	_voltage_adjust_index^(0+128),f
 17243                           
 17244                           ;uart.c: 467: bt_id = uart1_rx_buf[11];
 17245  03C0  0028               	movlb	8	; select bank8
 17246  03C1  082B               	movf	(_uart1_rx_buf^(0+1024)+11),w
 17247  03C2  0021               	movlb	1	; select bank1
 17248  03C3  00EC               	movwf	_bt_id^(0+128)
 17249                           
 17250                           ;uart.c: 469: light_time = uart1_rx_buf[12];
 17251  03C4  0028               	movlb	8	; select bank8
 17252  03C5  082C               	movf	(_uart1_rx_buf^(0+1024)+12),w
 17253  03C6  0021               	movlb	1	; select bank1
 17254  03C7  00DB               	movwf	_light_time^(0+128)
 17255  03C8  01DC               	clrf	(_light_time+1)^(0+128)
 17256                           
 17257                           ;uart.c: 471: step_01_time_limit = uart1_rx_buf[13];
 17258  03C9  0028               	movlb	8	; select bank8
 17259  03CA  082D               	movf	(_uart1_rx_buf^(0+1024)+13),w
 17260  03CB  0021               	movlb	1	; select bank1
 17261  03CC  00E5               	movwf	_step_01_time_limit^(0+128)
 17262  03CD  01E6               	clrf	(_step_01_time_limit+1)^(0+128)
 17263                           
 17264                           ;uart.c: 473: step_02_time_limit = uart1_rx_buf[14];
 17265  03CE  0028               	movlb	8	; select bank8
 17266  03CF  082E               	movf	(_uart1_rx_buf^(0+1024)+14),w
 17267  03D0  0021               	movlb	1	; select bank1
 17268  03D1  00E7               	movwf	_step_02_time_limit^(0+128)
 17269  03D2  01E8               	clrf	(_step_02_time_limit+1)^(0+128)
 17270                           
 17271                           ;uart.c: 475: step_03_time_limit = uart1_rx_buf[15];
 17272  03D3  0028               	movlb	8	; select bank8
 17273  03D4  082F               	movf	(_uart1_rx_buf^(0+1024)+15),w
 17274  03D5  0021               	movlb	1	; select bank1
 17275  03D6  00E9               	movwf	_step_03_time_limit^(0+128)
 17276  03D7  01EA               	clrf	(_step_03_time_limit+1)^(0+128)
 17277                           
 17278                           ;uart.c: 477: step_04_time_limit = uart1_rx_buf[16];
 17279  03D8  0028               	movlb	8	; select bank8
 17280  03D9  0830               	movf	(_uart1_rx_buf^(0+1024)+16),w
 17281  03DA  0022               	movlb	2	; select bank2
 17282  03DB  00EB               	movwf	_step_04_time_limit^(0+256)
 17283  03DC  01EC               	clrf	(_step_04_time_limit+1)^(0+256)
 17284                           
 17285                           ;uart.c: 479: step_05_time_limit = uart1_rx_buf[17];
 17286  03DD  0028               	movlb	8	; select bank8
 17287  03DE  0831               	movf	(_uart1_rx_buf^(0+1024)+17),w
 17288  03DF  0022               	movlb	2	; select bank2
 17289  03E0  00ED               	movwf	_step_05_time_limit^(0+256)
 17290  03E1  01EE               	clrf	(_step_05_time_limit+1)^(0+256)
 17291                           
 17292                           ;uart.c: 481: if((light_pv>=100)&&(light_pv<=1200)&&(load_cc_I<=500)&&(step_01_load_perc
      +                          ent<=100)&&(step_02_load_percent<=100) &&(step_03_load_percent<=100)&&(step_04_load_perc
      +                          ent<=100)&&(step_05_load_percent<=100)&&(bt_id>=1)&&(bt_id<=2) &&(light_time<=60)&&(step
 17293  03E2  0021               	movlb	1	; select bank1
 17294  03E3  0860               	movf	(_light_pv+3)^(0+128),w
 17295  03E4  0020               	movlb	0	; select bank0
 17296  03E5  00DD               	movwf	___flge@ff1+3
 17297  03E6  0021               	movlb	1	; select bank1
 17298  03E7  085F               	movf	(_light_pv+2)^(0+128),w
 17299  03E8  0020               	movlb	0	; select bank0
 17300  03E9  00DC               	movwf	___flge@ff1+2
 17301  03EA  0021               	movlb	1	; select bank1
 17302  03EB  085E               	movf	(_light_pv+1)^(0+128),w
 17303  03EC  0020               	movlb	0	; select bank0
 17304  03ED  00DB               	movwf	___flge@ff1+1
 17305  03EE  0021               	movlb	1	; select bank1
 17306  03EF  085D               	movf	_light_pv^(0+128),w
 17307  03F0  0020               	movlb	0	; select bank0
 17308  03F1  00DA               	movwf	___flge@ff1
 17309  03F2  3042               	movlw	66
 17310  03F3  00E1               	movwf	___flge@ff2+3
 17311  03F4  30C8               	movlw	200
 17312  03F5  00E0               	movwf	___flge@ff2+2
 17313  03F6  01DF               	clrf	___flge@ff2+1
 17314  03F7  01DE               	clrf	___flge@ff2
 17315  03F8  319D  25DA  3182   	fcall	___flge
 17316  03FB  1C03               	btfss	3,0
 17317  03FC  2E0C               	goto	l18590
 17318  03FD  3044               	movlw	68
 17319  03FE  00DD               	movwf	___flge@ff1+3
 17320  03FF  3096               	movlw	150
 17321  0400  00DC               	movwf	___flge@ff1+2
 17322  0401  01DB               	clrf	___flge@ff1+1
 17323  0402  01DA               	clrf	___flge@ff1
 17324  0403  0021               	movlb	1	; select bank1
 17325  0404  0860               	movf	(_light_pv+3)^(0+128),w
 17326  0405  0020               	movlb	0	; select bank0
 17327  0406  00E1               	movwf	___flge@ff2+3
 17328  0407  0021               	movlb	1	; select bank1
 17329  0408  085F               	movf	(_light_pv+2)^(0+128),w
 17330  0409  0020               	movlb	0	; select bank0
 17331  040A  00E0               	movwf	___flge@ff2+2
 17332  040B  0021               	movlb	1	; select bank1
 17333  040C  085E               	movf	(_light_pv+1)^(0+128),w
 17334  040D  0020               	movlb	0	; select bank0
 17335  040E  00DF               	movwf	___flge@ff2+1
 17336  040F  0021               	movlb	1	; select bank1
 17337  0410  085D               	movf	_light_pv^(0+128),w
 17338  0411  0020               	movlb	0	; select bank0
 17339  0412  00DE               	movwf	___flge@ff2
 17340  0413  319D  25DA  3182   	fcall	___flge
 17341  0416  1C03               	btfss	3,0
 17342  0417  2E0C               	goto	l18590
 17343  0418  3043               	movlw	67
 17344  0419  00DD               	movwf	___flge@ff1+3
 17345  041A  30FA               	movlw	250
 17346  041B  00DC               	movwf	___flge@ff1+2
 17347  041C  01DB               	clrf	___flge@ff1+1
 17348  041D  01DA               	clrf	___flge@ff1
 17349  041E  0021               	movlb	1	; select bank1
 17350  041F  0864               	movf	(_load_cc_I+3)^(0+128),w
 17351  0420  0020               	movlb	0	; select bank0
 17352  0421  00E1               	movwf	___flge@ff2+3
 17353  0422  0021               	movlb	1	; select bank1
 17354  0423  0863               	movf	(_load_cc_I+2)^(0+128),w
 17355  0424  0020               	movlb	0	; select bank0
 17356  0425  00E0               	movwf	___flge@ff2+2
 17357  0426  0021               	movlb	1	; select bank1
 17358  0427  0862               	movf	(_load_cc_I+1)^(0+128),w
 17359  0428  0020               	movlb	0	; select bank0
 17360  0429  00DF               	movwf	___flge@ff2+1
 17361  042A  0021               	movlb	1	; select bank1
 17362  042B  0861               	movf	_load_cc_I^(0+128),w
 17363  042C  0020               	movlb	0	; select bank0
 17364  042D  00DE               	movwf	___flge@ff2
 17365  042E  319D  25DA  3182   	fcall	___flge
 17366  0431  1C03               	btfss	3,0
 17367  0432  2E0C               	goto	l18590
 17368  0433  3042               	movlw	66
 17369  0434  27B4               	fcall	PL162	;call to abstracted procedure
 17370  0435  085A               	movf	(_step_01_load_percent+3)^(0+256),w
 17371  0436  0020               	movlb	0	; select bank0
 17372  0437  00E1               	movwf	___flge@ff2+3
 17373  0438  0022               	movlb	2	; select bank2
 17374  0439  0859               	movf	(_step_01_load_percent+2)^(0+256),w
 17375  043A  0020               	movlb	0	; select bank0
 17376  043B  00E0               	movwf	___flge@ff2+2
 17377  043C  0022               	movlb	2	; select bank2
 17378  043D  0858               	movf	(_step_01_load_percent+1)^(0+256),w
 17379  043E  0020               	movlb	0	; select bank0
 17380  043F  00DF               	movwf	___flge@ff2+1
 17381  0440  0022               	movlb	2	; select bank2
 17382  0441  0857               	movf	_step_01_load_percent^(0+256),w
 17383  0442  0020               	movlb	0	; select bank0
 17384  0443  00DE               	movwf	___flge@ff2
 17385  0444  319D  25DA  3182   	fcall	___flge
 17386  0447  1C03               	btfss	3,0
 17387  0448  2E0C               	goto	l18590
 17388  0449  3042               	movlw	66
 17389  044A  27B4               	fcall	PL162	;call to abstracted procedure
 17390  044B  085E               	movf	(_step_02_load_percent+3)^(0+256),w
 17391  044C  0020               	movlb	0	; select bank0
 17392  044D  00E1               	movwf	___flge@ff2+3
 17393  044E  0022               	movlb	2	; select bank2
 17394  044F  085D               	movf	(_step_02_load_percent+2)^(0+256),w
 17395  0450  0020               	movlb	0	; select bank0
 17396  0451  00E0               	movwf	___flge@ff2+2
 17397  0452  0022               	movlb	2	; select bank2
 17398  0453  085C               	movf	(_step_02_load_percent+1)^(0+256),w
 17399  0454  0020               	movlb	0	; select bank0
 17400  0455  00DF               	movwf	___flge@ff2+1
 17401  0456  0022               	movlb	2	; select bank2
 17402  0457  085B               	movf	_step_02_load_percent^(0+256),w
 17403  0458  0020               	movlb	0	; select bank0
 17404  0459  00DE               	movwf	___flge@ff2
 17405  045A  319D  25DA  3182   	fcall	___flge
 17406  045D  1C03               	btfss	3,0
 17407  045E  2E0C               	goto	l18590
 17408  045F  3042               	movlw	66
 17409  0460  27B4               	fcall	PL162	;call to abstracted procedure
 17410  0461  0862               	movf	(_step_03_load_percent+3)^(0+256),w
 17411  0462  0020               	movlb	0	; select bank0
 17412  0463  00E1               	movwf	___flge@ff2+3
 17413  0464  0022               	movlb	2	; select bank2
 17414  0465  0861               	movf	(_step_03_load_percent+2)^(0+256),w
 17415  0466  0020               	movlb	0	; select bank0
 17416  0467  00E0               	movwf	___flge@ff2+2
 17417  0468  0022               	movlb	2	; select bank2
 17418  0469  0860               	movf	(_step_03_load_percent+1)^(0+256),w
 17419  046A  0020               	movlb	0	; select bank0
 17420  046B  00DF               	movwf	___flge@ff2+1
 17421  046C  0022               	movlb	2	; select bank2
 17422  046D  085F               	movf	_step_03_load_percent^(0+256),w
 17423  046E  0020               	movlb	0	; select bank0
 17424  046F  00DE               	movwf	___flge@ff2
 17425  0470  319D  25DA  3182   	fcall	___flge
 17426  0473  1C03               	btfss	3,0
 17427  0474  2E0C               	goto	l18590
 17428  0475  3042               	movlw	66
 17429  0476  27B4               	fcall	PL162	;call to abstracted procedure
 17430  0477  0866               	movf	(_step_04_load_percent+3)^(0+256),w
 17431  0478  0020               	movlb	0	; select bank0
 17432  0479  00E1               	movwf	___flge@ff2+3
 17433  047A  0022               	movlb	2	; select bank2
 17434  047B  0865               	movf	(_step_04_load_percent+2)^(0+256),w
 17435  047C  0020               	movlb	0	; select bank0
 17436  047D  00E0               	movwf	___flge@ff2+2
 17437  047E  0022               	movlb	2	; select bank2
 17438  047F  0864               	movf	(_step_04_load_percent+1)^(0+256),w
 17439  0480  0020               	movlb	0	; select bank0
 17440  0481  00DF               	movwf	___flge@ff2+1
 17441  0482  0022               	movlb	2	; select bank2
 17442  0483  0863               	movf	_step_04_load_percent^(0+256),w
 17443  0484  0020               	movlb	0	; select bank0
 17444  0485  00DE               	movwf	___flge@ff2
 17445  0486  319D  25DA  3182   	fcall	___flge
 17446  0489  1C03               	btfss	3,0
 17447  048A  2E0C               	goto	l18590
 17448  048B  3042               	movlw	66
 17449  048C  27B4               	fcall	PL162	;call to abstracted procedure
 17450  048D  086A               	movf	(_step_05_load_percent+3)^(0+256),w
 17451  048E  0020               	movlb	0	; select bank0
 17452  048F  00E1               	movwf	___flge@ff2+3
 17453  0490  0022               	movlb	2	; select bank2
 17454  0491  0869               	movf	(_step_05_load_percent+2)^(0+256),w
 17455  0492  0020               	movlb	0	; select bank0
 17456  0493  00E0               	movwf	___flge@ff2+2
 17457  0494  0022               	movlb	2	; select bank2
 17458  0495  0868               	movf	(_step_05_load_percent+1)^(0+256),w
 17459  0496  0020               	movlb	0	; select bank0
 17460  0497  00DF               	movwf	___flge@ff2+1
 17461  0498  0022               	movlb	2	; select bank2
 17462  0499  0867               	movf	_step_05_load_percent^(0+256),w
 17463  049A  0020               	movlb	0	; select bank0
 17464  049B  00DE               	movwf	___flge@ff2
 17465  049C  319D  25DA  3182   	fcall	___flge
 17466  049F  1C03               	btfss	3,0
 17467  04A0  2E0C               	goto	l18590
 17468  04A1  0021               	movlb	1	; select bank1
 17469  04A2  086C               	movf	_bt_id^(0+128),w
 17470  04A3  1903               	btfsc	3,2
 17471  04A4  2E0C               	goto	l18590
 17472  04A5  3003               	movlw	3
 17473  04A6  026C               	subwf	_bt_id^(0+128),w
 17474  04A7  1803               	skipnc
 17475  04A8  2E0C               	goto	l18590
 17476  04A9  3000               	movlw	0
 17477  04AA  025C               	subwf	(_light_time+1)^(0+128),w
 17478  04AB  303D               	movlw	61
 17479  04AC  1903               	skipnz
 17480  04AD  025B               	subwf	_light_time^(0+128),w
 17481  04AE  1803               	skipnc
 17482  04AF  2E0C               	goto	l18590
 17483  04B0  3000               	movlw	0
 17484  04B1  0266               	subwf	(_step_01_time_limit+1)^(0+128),w
 17485  04B2  3019               	movlw	25
 17486  04B3  1903               	skipnz
 17487  04B4  0265               	subwf	_step_01_time_limit^(0+128),w
 17488  04B5  1803               	skipnc
 17489  04B6  2E0C               	goto	l18590
 17490  04B7  3000               	movlw	0
 17491  04B8  0268               	subwf	(_step_02_time_limit+1)^(0+128),w
 17492  04B9  3019               	movlw	25
 17493  04BA  1903               	skipnz
 17494  04BB  0267               	subwf	_step_02_time_limit^(0+128),w
 17495  04BC  1803               	skipnc
 17496  04BD  2E0C               	goto	l18590
 17497  04BE  3000               	movlw	0
 17498  04BF  026A               	subwf	(_step_03_time_limit+1)^(0+128),w
 17499  04C0  3019               	movlw	25
 17500  04C1  1903               	skipnz
 17501  04C2  0269               	subwf	_step_03_time_limit^(0+128),w
 17502  04C3  1803               	skipnc
 17503  04C4  2E0C               	goto	l18590
 17504  04C5  3000               	movlw	0
 17505  04C6  0022               	movlb	2	; select bank2
 17506  04C7  026C               	subwf	(_step_04_time_limit+1)^(0+256),w
 17507  04C8  3019               	movlw	25
 17508  04C9  1903               	skipnz
 17509  04CA  026B               	subwf	_step_04_time_limit^(0+256),w
 17510  04CB  1803               	skipnc
 17511  04CC  2CD4               	goto	u11201
 17512  04CD  3000               	movlw	0
 17513  04CE  026E               	subwf	(_step_05_time_limit+1)^(0+256),w
 17514  04CF  3019               	movlw	25
 17515  04D0  1903               	skipnz
 17516  04D1  026D               	subwf	_step_05_time_limit^(0+256),w
 17517  04D2  1C03               	btfss	3,0
 17518  04D3  2CD6               	goto	l18540
 17519  04D4                     u11201:	
 17520  04D4  0021               	movlb	1	; select bank1
 17521  04D5  2E0C               	goto	l18590
 17522  04D6                     l18540:	
 17523                           
 17524                           ;uart.c: 484: {
 17525                           ;uart.c: 486: eeprom_write(0x00,(unsigned char)(light_pv/256));
 17526  04D6  26F5  3182         	fcall	PL78	;call to abstracted procedure
 17527  04D8  26C6               	fcall	PL32	;call to abstracted procedure
 17528  04D9  31A2  2291  3182   	fcall	___fldiv
 17529  04DC  26CF               	fcall	PL34	;call to abstracted procedure
 17530  04DD  318E  2674  3182   	fcall	___fltol
 17531  04E0  085A               	movf	?___fltol,w
 17532  04E1  00E4               	movwf	eeprom_write@value
 17533  04E2  3000               	movlw	0
 17534  04E3  318B  2367  3182   	fcall	_eeprom_write
 17535                           
 17536                           ;uart.c: 488: eeprom_write(0x01,(unsigned char)light_pv);
 17537  04E6  2779               	fcall	PL128	;call to abstracted procedure
 17538  04E7  318E  2674  3182   	fcall	___fltol
 17539  04EA  085A               	movf	?___fltol,w
 17540  04EB  00E4               	movwf	eeprom_write@value
 17541  04EC  3001               	movlw	1
 17542  04ED  318B  2367  3182   	fcall	_eeprom_write
 17543                           
 17544                           ;uart.c: 491: eeprom_write(0x02,(unsigned char)(load_cc_I/256));
 17545  04F0  26AF               	fcall	PL14	;call to abstracted procedure
 17546  04F1  31A2  2291  3182   	fcall	___fldiv
 17547  04F4  26CF               	fcall	PL34	;call to abstracted procedure
 17548  04F5  318E  2674  3182   	fcall	___fltol
 17549  04F8  085A               	movf	?___fltol,w
 17550  04F9  00E4               	movwf	eeprom_write@value
 17551  04FA  3002               	movlw	2
 17552  04FB  318B  2367  3182   	fcall	_eeprom_write
 17553                           
 17554                           ;uart.c: 493: eeprom_write(0x03,(unsigned char)load_cc_I);
 17555  04FE  2768               	fcall	PL126	;call to abstracted procedure
 17556  04FF  318E  2674  3182   	fcall	___fltol
 17557  0502  085A               	movf	?___fltol,w
 17558  0503  00E4               	movwf	eeprom_write@value
 17559  0504  3003               	movlw	3
 17560  0505  318B  2367  3182   	fcall	_eeprom_write
 17561                           
 17562                           ;uart.c: 496: eeprom_write(0x04,(unsigned char)(step_01_load_percent));
 17563  0508  2735               	fcall	PL120	;call to abstracted procedure
 17564  0509  318E  2674  3182   	fcall	___fltol
 17565  050C  085A               	movf	?___fltol,w
 17566  050D  00E4               	movwf	eeprom_write@value
 17567  050E  3004               	movlw	4
 17568  050F  318B  2367  3182   	fcall	_eeprom_write
 17569                           
 17570                           ;uart.c: 498: eeprom_write(0x05,(unsigned char)(step_02_load_percent));
 17571  0512  2757               	fcall	PL124	;call to abstracted procedure
 17572  0513  318E  2674  3182   	fcall	___fltol
 17573  0516  085A               	movf	?___fltol,w
 17574  0517  00E4               	movwf	eeprom_write@value
 17575  0518  3005               	movlw	5
 17576  0519  318B  2367  3182   	fcall	_eeprom_write
 17577                           
 17578                           ;uart.c: 500: eeprom_write(0x06,(unsigned char)(step_03_load_percent));
 17579  051C  2746               	fcall	PL122	;call to abstracted procedure
 17580  051D  318E  2674  3182   	fcall	___fltol
 17581  0520  085A               	movf	?___fltol,w
 17582  0521  00E4               	movwf	eeprom_write@value
 17583  0522  3006               	movlw	6
 17584  0523  318B  2367  3182   	fcall	_eeprom_write
 17585                           
 17586                           ;uart.c: 502: eeprom_write(0x07,(unsigned char)(step_04_load_percent));
 17587  0526  2713               	fcall	PL114	;call to abstracted procedure
 17588  0527  318E  2674  3182   	fcall	___fltol
 17589  052A  085A               	movf	?___fltol,w
 17590  052B  00E4               	movwf	eeprom_write@value
 17591  052C  3007               	movlw	7
 17592  052D  318B  2367  3182   	fcall	_eeprom_write
 17593                           
 17594                           ;uart.c: 504: eeprom_write(0x08,(unsigned char)(step_05_load_percent));
 17595  0530  2724               	fcall	PL116	;call to abstracted procedure
 17596  0531  318E  2674  3182   	fcall	___fltol
 17597  0534  085A               	movf	?___fltol,w
 17598  0535  00E4               	movwf	eeprom_write@value
 17599  0536  3008               	movlw	8
 17600  0537  318B  2367  3182   	fcall	_eeprom_write
 17601                           
 17602                           ;uart.c: 506: eeprom_write(0x0a,(unsigned char)(bt_id));
 17603  053A  0021               	movlb	1	; select bank1
 17604  053B  086C               	movf	_bt_id^(0+128),w
 17605  053C  0020               	movlb	0	; select bank0
 17606  053D  00E4               	movwf	eeprom_write@value
 17607  053E  300A               	movlw	10
 17608  053F  318B  2367  3182   	fcall	_eeprom_write
 17609                           
 17610                           ;uart.c: 508: eeprom_write(0x0b,(unsigned char)(light_time));
 17611  0542  0021               	movlb	1	; select bank1
 17612  0543  085B               	movf	_light_time^(0+128),w
 17613  0544  0020               	movlb	0	; select bank0
 17614  0545  00E4               	movwf	eeprom_write@value
 17615  0546  300B               	movlw	11
 17616  0547  318B  2367  3182   	fcall	_eeprom_write
 17617                           
 17618                           ;uart.c: 510: eeprom_write(0x0c,(unsigned char)(step_01_time_limit));
 17619  054A  0021               	movlb	1	; select bank1
 17620  054B  0865               	movf	_step_01_time_limit^(0+128),w
 17621  054C  0020               	movlb	0	; select bank0
 17622  054D  00E4               	movwf	eeprom_write@value
 17623  054E  300C               	movlw	12
 17624  054F  318B  2367  3182   	fcall	_eeprom_write
 17625                           
 17626                           ;uart.c: 512: eeprom_write(0x0d,(unsigned char)(step_02_time_limit));
 17627  0552  0021               	movlb	1	; select bank1
 17628  0553  0867               	movf	_step_02_time_limit^(0+128),w
 17629  0554  0020               	movlb	0	; select bank0
 17630  0555  00E4               	movwf	eeprom_write@value
 17631  0556  300D               	movlw	13
 17632  0557  318B  2367  3182   	fcall	_eeprom_write
 17633                           
 17634                           ;uart.c: 514: eeprom_write(0x0e,(unsigned char)(step_03_time_limit));
 17635  055A  0021               	movlb	1	; select bank1
 17636  055B  0869               	movf	_step_03_time_limit^(0+128),w
 17637  055C  0020               	movlb	0	; select bank0
 17638  055D  00E4               	movwf	eeprom_write@value
 17639  055E  300E               	movlw	14
 17640  055F  318B  2367  3182   	fcall	_eeprom_write
 17641                           
 17642                           ;uart.c: 516: eeprom_write(0x0f,(unsigned char)(step_04_time_limit));
 17643  0562  0022               	movlb	2	; select bank2
 17644  0563  086B               	movf	_step_04_time_limit^(0+256),w
 17645  0564  0020               	movlb	0	; select bank0
 17646  0565  00E4               	movwf	eeprom_write@value
 17647  0566  300F               	movlw	15
 17648  0567  318B  2367  3182   	fcall	_eeprom_write
 17649                           
 17650                           ;uart.c: 518: eeprom_write(0x10,(unsigned char)(step_05_time_limit));
 17651  056A  0022               	movlb	2	; select bank2
 17652  056B  086D               	movf	_step_05_time_limit^(0+256),w
 17653  056C  0020               	movlb	0	; select bank0
 17654  056D  00E4               	movwf	eeprom_write@value
 17655  056E  3010               	movlw	16
 17656  056F  318B  2367  3182   	fcall	_eeprom_write
 17657                           
 17658                           ;uart.c: 521: light_on_pv_level =(light_pv*10)/61;
 17659  0572  3042               	movlw	66
 17660  0573  0020               	movlb	0	; select bank0
 17661  0574  00CA               	movwf	___fldiv@f2+3
 17662  0575  3074               	movlw	116
 17663  0576  00C9               	movwf	___fldiv@f2+2
 17664  0577  3041               	movlw	65
 17665  0578  01C8               	clrf	___fldiv@f2+1
 17666  0579  01C7               	clrf	___fldiv@f2
 17667  057A  00B7               	movwf	___flmul@f1+3
 17668  057B  3020               	movlw	32
 17669  057C  00B6               	movwf	___flmul@f1+2
 17670  057D  01B5               	clrf	___flmul@f1+1
 17671  057E  01B4               	clrf	___flmul@f1
 17672  057F  0021               	movlb	1	; select bank1
 17673  0580  0860               	movf	(_light_pv+3)^(0+128),w
 17674  0581  0020               	movlb	0	; select bank0
 17675  0582  00BB               	movwf	___flmul@f2+3
 17676  0583  0021               	movlb	1	; select bank1
 17677  0584  085F               	movf	(_light_pv+2)^(0+128),w
 17678  0585  0020               	movlb	0	; select bank0
 17679  0586  00BA               	movwf	___flmul@f2+2
 17680  0587  0021               	movlb	1	; select bank1
 17681  0588  085E               	movf	(_light_pv+1)^(0+128),w
 17682  0589  0020               	movlb	0	; select bank0
 17683  058A  00B9               	movwf	___flmul@f2+1
 17684  058B  0021               	movlb	1	; select bank1
 17685  058C  085D               	movf	_light_pv^(0+128),w
 17686  058D  0020               	movlb	0	; select bank0
 17687  058E  00B8               	movwf	___flmul@f2
 17688  058F  31A2  22FC  3182   	fcall	___flmul
 17689  0592  31B4  2453  3182   	fcall	PL82	;call to abstracted procedure
 17690  0595  31A2  2291  3182   	fcall	___fldiv
 17691  0598  084A               	movf	?___fldiv+3,w
 17692  0599  0025               	movlb	5	; select bank5
 17693  059A  00E3               	movwf	(_light_on_pv_level+3)^(0+640)
 17694  059B  0020               	movlb	0	; select bank0
 17695  059C  0849               	movf	?___fldiv+2,w
 17696  059D  0025               	movlb	5	; select bank5
 17697  059E  00E2               	movwf	(_light_on_pv_level+2)^(0+640)
 17698  059F  0020               	movlb	0	; select bank0
 17699  05A0  0848               	movf	?___fldiv+1,w
 17700  05A1  0025               	movlb	5	; select bank5
 17701  05A2  00E1               	movwf	(_light_on_pv_level+1)^(0+640)
 17702  05A3  0020               	movlb	0	; select bank0
 17703  05A4  0847               	movf	?___fldiv,w
 17704  05A5  0025               	movlb	5	; select bank5
 17705  05A6  00E0               	movwf	_light_on_pv_level^(0+640)
 17706                           
 17707                           ;uart.c: 522: light_off_pv_level =(10.0/61)*1000;
 17708  05A7  3043               	movlw	67
 17709  05A8  00DF               	movwf	(_light_off_pv_level+3)^(0+640)
 17710  05A9  3023               	movlw	35
 17711  05AA  00DE               	movwf	(_light_off_pv_level+2)^(0+640)
 17712  05AB  30EF               	movlw	239
 17713  05AC  00DD               	movwf	(_light_off_pv_level+1)^(0+640)
 17714  05AD  3037               	movlw	55
 17715  05AE  00DC               	movwf	_light_off_pv_level^(0+640)
 17716                           
 17717                           ;uart.c: 524: PID_CC_discharge.SetPoint = (load_cc_I/100)*160;
 17718  05AF  3043               	movlw	67
 17719  05B0  0020               	movlb	0	; select bank0
 17720  05B1  31B3  2397  3182   	fcall	PL4	;call to abstracted procedure
 17721  05B4  31A2  2291  3182   	fcall	___fldiv
 17722  05B7  26D8               	fcall	PL36	;call to abstracted procedure
 17723  05B8  31A2  22FC  3182   	fcall	___flmul
 17724  05BB  318E  2600  3182   	fcall	PL24	;call to abstracted procedure
 17725                           
 17726                           ;uart.c: 526: if(light_time==0x00)
 17727  05BE  0021               	movlb	1	; select bank1
 17728  05BF  085C               	movf	(_light_time+1)^(0+128),w
 17729  05C0  045B               	iorwf	_light_time^(0+128),w
 17730  05C1  1D03               	skipz
 17731  05C2  2DCB               	goto	l18550
 17732                           
 17733                           ;uart.c: 527: {
 17734                           ;uart.c: 528: light_time_level = 500;
 17735  05C3  0023               	movlb	3	; select bank3
 17736  05C4  3001               	movlw	1
 17737  05C5  01A3               	clrf	(_light_time_level+3)^(0+384)
 17738  05C6  01A2               	clrf	(_light_time_level+2)^(0+384)
 17739  05C7  00A1               	movwf	(_light_time_level+1)^(0+384)
 17740  05C8  30F4               	movlw	244
 17741  05C9  00A0               	movwf	_light_time_level^(0+384)
 17742                           
 17743                           ;uart.c: 529: }
 17744  05CA  2DE2               	goto	l18552
 17745  05CB                     l18550:	
 17746                           
 17747                           ;uart.c: 530: else
 17748                           ;uart.c: 531: {
 17749                           ;uart.c: 532: light_time_level = (unsigned long int)(light_time*6*180);
 17750  05CB  085C               	movf	(_light_time+1)^(0+128),w
 17751  05CC  0020               	movlb	0	; select bank0
 17752  05CD  00A4               	movwf	___wmul@multiplier+1
 17753  05CE  0021               	movlb	1	; select bank1
 17754  05CF  085B               	movf	_light_time^(0+128),w
 17755  05D0  0020               	movlb	0	; select bank0
 17756  05D1  00A3               	movwf	___wmul@multiplier
 17757  05D2  3038               	movlw	56
 17758  05D3  00A5               	movwf	___wmul@multiplicand
 17759  05D4  3004               	movlw	4
 17760  05D5  00A6               	movwf	___wmul@multiplicand+1
 17761  05D6  3191  2108  3182   	fcall	___wmul
 17762  05D9  0823               	movf	?___wmul,w
 17763  05DA  0023               	movlb	3	; select bank3
 17764  05DB  00A0               	movwf	_light_time_level^(0+384)
 17765  05DC  0020               	movlb	0	; select bank0
 17766  05DD  0824               	movf	?___wmul+1,w
 17767  05DE  0023               	movlb	3	; select bank3
 17768  05DF  00A1               	movwf	(_light_time_level^(0+384)+1)
 17769  05E0  01A2               	clrf	(_light_time_level^(0+384)+2)
 17770  05E1  01A3               	clrf	(_light_time_level^(0+384)+3)
 17771  05E2                     l18552:	
 17772                           
 17773                           ;uart.c: 533: }
 17774                           ;uart.c: 536: device_status=0x00;
 17775  05E2  0020               	movlb	0	; select bank0
 17776  05E3  01EA               	clrf	_device_status
 17777                           
 17778                           ;uart.c: 538: eeprom_write(0x38,(unsigned char)(device_status));
 17779  05E4  086A               	movf	_device_status,w
 17780  05E5  00E4               	movwf	eeprom_write@value
 17781  05E6  3038               	movlw	56
 17782  05E7  318B  2367  3182   	fcall	_eeprom_write
 17783                           
 17784                           ;uart.c: 542: lr_cnt = 0x00;
 17785  05EA  3004               	movlw	4
 17786  05EB  0021               	movlb	1	; select bank1
 17787  05EC  00DA               	movwf	_work_mode^(0+128)
 17788                           
 17789                           ;uart.c: 544: nop_index=0x00;
 17790  05ED  0022               	movlb	2	; select bank2
 17791                           
 17792                           ;uart.c: 545: discharge_index=0x00;
 17793                           
 17794                           ;uart.c: 546: charge_index=0x00;
 17795                           
 17796                           ;uart.c: 548: led_out_ctrl=0x00;
 17797                           
 17798                           ;uart.c: 549: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 17799  05EE  318E  2636  3182   	fcall	PL88	;call to abstracted procedure
 17800  05F1  318B  2367  3182   	fcall	_eeprom_write
 17801                           
 17802                           ;uart.c: 551: pv_voltage_status=0x00;
 17803  05F4  0022               	movlb	2	; select bank2
 17804  05F5  01C2               	clrf	_pv_voltage_status^(0+256)
 17805                           
 17806                           ;uart.c: 553: day_time_count=0x00;
 17807                           
 17808                           ;uart.c: 555: night_time_count=0x00;
 17809  05F6  26EA  3182         	fcall	PL68	;call to abstracted procedure
 17810                           
 17811                           ;uart.c: 557: pv_time_count=0x00;
 17812                           
 17813                           ;uart.c: 561: uart1_tx_buf[0]=0x55;
 17814  05F8  27E2               	fcall	PL200	;call to abstracted procedure
 17815                           
 17816                           ;uart.c: 563: uart1_tx_buf[1]=0xB3;
 17817  05F9  30B3               	movlw	179
 17818  05FA                     L5:	
 17819  05FA  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 17820  05FB  30A1               	movlw	low (_uart1_tx_buf+1)
 17821                           
 17822                           ;uart.c: 565: uart1_tx_buf[2]=0x01;
 17823  05FC  01A2               	clrf	(_uart1_tx_buf^(0+896)+2)
 17824  05FD  0AA2               	incf	(_uart1_tx_buf^(0+896)+2),f
 17825                           
 17826                           ;uart.c: 567: crc_data=crc16(&uart1_tx_buf[1],2);
 17827  05FE  0020               	movlb	0	; select bank0
 17828  05FF  00A3               	movwf	crc16@puchMsg
 17829  0600  3003               	movlw	high (_uart1_tx_buf+1)
 17830  0601  00A4               	movwf	crc16@puchMsg+1
 17831  0602  3002               	movlw	2
 17832  0603  00A5               	movwf	crc16@usDataLen
 17833  0604  3188  2003  3182   	fcall	_crc16
 17834                           
 17835                           ;uart.c: 569: uart1_tx_buf[3]=crc_data/256;
 17836  0607  27C8  3182         	fcall	PL172	;call to abstracted procedure
 17837                           
 17838                           ;uart.c: 571: uart1_tx_buf[4]=crc_data%256;
 17839                           
 17840                           ;uart.c: 573: uart1_tx_buf[5]=0xAA;
 17841  0609  27F8  3182         	fcall	PL248	;call to abstracted procedure
 17842                           
 17843                           ;uart.c: 577: }
 17844  060B  2EA1               	goto	l18696
 17845  060C                     l18590:	
 17846                           
 17847                           ;uart.c: 578: else
 17848                           ;uart.c: 579: {
 17849                           ;uart.c: 580: uart1_tx_buf[0]=0x55;
 17850  060C  3055               	movlw	85
 17851  060D  0027               	movlb	7	; select bank7
 17852  060E  00A0               	movwf	_uart1_tx_buf^(0+896)
 17853                           
 17854                           ;uart.c: 582: uart1_tx_buf[1]=0xB3;
 17855  060F  30B3               	movlw	179
 17856  0610  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 17857                           
 17858                           ;uart.c: 584: uart1_tx_buf[2]=0x02;
 17859  0611  3002               	movlw	2
 17860  0612  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 17861                           
 17862                           ;uart.c: 586: crc_data=crc16(&uart1_tx_buf[1],2);
 17863  0613  27EB               	fcall	PL224	;call to abstracted procedure
 17864  0614  3002               	movlw	2
 17865  0615  00A5               	movwf	crc16@usDataLen
 17866  0616  3188  2003  3182   	fcall	_crc16
 17867                           
 17868                           ;uart.c: 588: uart1_tx_buf[3]=crc_data/256;
 17869  0619  27C8  3182         	fcall	PL172	;call to abstracted procedure
 17870                           
 17871                           ;uart.c: 590: uart1_tx_buf[4]=crc_data%256;
 17872                           
 17873                           ;uart.c: 592: uart1_tx_buf[5]=0xAA;
 17874  061B  27F8  3182         	fcall	PL248	;call to abstracted procedure
 17875  061D  0001               	reset	;# 
 17876  061E  2EA1               	goto	l18696
 17877  061F                     l1814:	
 17878                           ;uart.c: 604: case 0x04:
 17879                           
 17880                           
 17881                           ;uart.c: 605: work_mode=0x01;
 17882  061F  0021               	movlb	1	; select bank1
 17883  0620  3055               	movlw	85
 17884  0621  01DA               	clrf	_work_mode^(0+128)
 17885  0622  0ADA               	incf	_work_mode^(0+128),f
 17886                           
 17887                           ;uart.c: 607: uart1_tx_buf[0]=0x55;
 17888  0623  0027               	movlb	7	; select bank7
 17889  0624  00A0               	movwf	_uart1_tx_buf^(0+896)
 17890                           
 17891                           ;uart.c: 609: uart1_tx_buf[1]=0xB4;
 17892  0625  30B4               	movlw	180
 17893  0626  2DFA               	goto	L5
 17894  0627                     l18612:	
 17895                           
 17896                           ;uart.c: 625: work_mode=0x02;
 17897  0627  3002               	movlw	2
 17898  0628  0021               	movlb	1	; select bank1
 17899  0629  00DA               	movwf	_work_mode^(0+128)
 17900                           
 17901                           ;uart.c: 627: uart1_tx_buf[0]=0x55;
 17902  062A  3055               	movlw	85
 17903  062B  0027               	movlb	7	; select bank7
 17904  062C  00A0               	movwf	_uart1_tx_buf^(0+896)
 17905                           
 17906                           ;uart.c: 629: uart1_tx_buf[1]=0xB5;
 17907  062D  30B5               	movlw	181
 17908  062E  2DFA               	goto	L5
 17909  062F                     l18624:	
 17910                           
 17911                           ;uart.c: 644: work_mode=0x00;
 17912  062F  0021               	movlb	1	; select bank1
 17913  0630  01DA               	clrf	_work_mode^(0+128)
 17914                           
 17915                           ;uart.c: 647: open_sleep_time=0x00;
 17916  0631  0022               	movlb	2	; select bank2
 17917  0632  01BF               	clrf	_open_sleep_time^(0+256)
 17918                           
 17919                           ;uart.c: 649: lr_cnt=0x00;
 17920  0633  0023               	movlb	3	; select bank3
 17921  0634  01BC               	clrf	_sleep_time_count^(0+384)
 17922  0635  01BD               	clrf	(_sleep_time_count+1)^(0+384)
 17923                           
 17924                           ;uart.c: 651: nop_index=0x00;
 17925  0636  0022               	movlb	2	; select bank2
 17926                           
 17927                           ;uart.c: 652: discharge_index=0x00;
 17928                           
 17929                           ;uart.c: 653: charge_index=0x00;
 17930                           
 17931                           ;uart.c: 655: led_out_ctrl=0x00;
 17932                           
 17933                           ;uart.c: 656: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 17934  0637  318E  2636  3182   	fcall	PL88	;call to abstracted procedure
 17935  063A  318B  2367  3182   	fcall	_eeprom_write
 17936                           
 17937                           ;uart.c: 658: device_status=0x01;
 17938  063D  0020               	movlb	0	; select bank0
 17939  063E  01EA               	clrf	_device_status
 17940  063F  0AEA               	incf	_device_status,f
 17941                           
 17942                           ;uart.c: 660: eeprom_write(0x38,(unsigned char)(device_status));
 17943  0640  086A               	movf	_device_status,w
 17944  0641  00E4               	movwf	eeprom_write@value
 17945  0642  3038               	movlw	56
 17946  0643  318B  2367  3182   	fcall	_eeprom_write
 17947                           
 17948                           ;uart.c: 662: Disable_Buck_Pwm();
 17949  0646  318D  25A1  3182   	fcall	_Disable_Buck_Pwm
 17950                           
 17951                           ;uart.c: 663: Set_Buck_Pwm_Duty(0);
 17952  0649  0020               	movlb	0	; select bank0
 17953  064A  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 17954  064B  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 17955  064C  318D  25A7  3182   	fcall	_Set_Buck_Pwm_Duty
 17956                           
 17957                           ;uart.c: 664: Disable_Bost_Pwm();
 17958  064F  318B  2362  3182   	fcall	_Disable_Bost_Pwm
 17959                           
 17960                           ;uart.c: 665: (LATCbits.LATC3 = 0x00);
 17961                           
 17962                           ;uart.c: 666: Set_Bost_Pwm_Duty(0);
 17963  0652  318E  263F  3182   	fcall	PL104	;call to abstracted procedure
 17964  0655  318D  256C  3182   	fcall	_Set_Bost_Pwm_Duty
 17965                           
 17966                           ;uart.c: 668: (LATCbits.LATC3 = 0x01);
 17967  0658  0022               	movlb	2	; select bank2
 17968  0659  158E               	bsf	14,3	;volatile
 17969                           
 17970                           ;uart.c: 669: Enable_Bost_Pwm();
 17971  065A  318D  25D2  3182   	fcall	_Enable_Bost_Pwm
 17972                           
 17973                           ;uart.c: 670: Set_Bost_Pwm_Duty(200);
 17974  065D  318E  2666  3182   	fcall	PL240	;call to abstracted procedure
 17975  0660  318D  256C  3182   	fcall	_Set_Bost_Pwm_Duty
 17976                           
 17977                           ;uart.c: 672: delay_ms(1000);
 17978  0663  318E  265B  3182   	fcall	PL202	;call to abstracted procedure
 17979  0666  318B  233D  3182   	fcall	_delay_ms
 17980                           
 17981                           ;uart.c: 674: Set_Bost_Pwm_Duty(0);
 17982  0669  01A3               	clrf	Set_Bost_Pwm_Duty@dduty
 17983  066A  01A4               	clrf	Set_Bost_Pwm_Duty@dduty+1
 17984  066B  318D  256C  3182   	fcall	_Set_Bost_Pwm_Duty
 17985                           
 17986                           ;uart.c: 676: Disable_Bost_Pwm();
 17987  066E  318B  2362  3182   	fcall	_Disable_Bost_Pwm
 17988                           
 17989                           ;uart.c: 677: (LATCbits.LATC3 = 0x00);
 17990                           
 17991                           ;uart.c: 678: Set_Bost_Pwm_Duty(0);
 17992  0671  318E  263F  3182   	fcall	PL104	;call to abstracted procedure
 17993  0674  318D  256C  3182   	fcall	_Set_Bost_Pwm_Duty
 17994                           
 17995                           ;uart.c: 680: open_an0_time=0x01;
 17996  0677  0022               	movlb	2	; select bank2
 17997  0678  01B7               	clrf	_open_an0_time^(0+256)
 17998  0679  0AB7               	incf	_open_an0_time^(0+256),f
 17999                           
 18000                           ;uart.c: 682: open_an1_time=0x01;
 18001  067A  01B9               	clrf	_open_an1_time^(0+256)
 18002  067B  0AB9               	incf	_open_an1_time^(0+256),f
 18003                           
 18004                           ;uart.c: 684: open_an2_time=0x01;
 18005  067C  01BA               	clrf	_open_an2_time^(0+256)
 18006  067D  0ABA               	incf	_open_an2_time^(0+256),f
 18007                           
 18008                           ;uart.c: 686: open_an3_time=0x01;
 18009  067E  01BB               	clrf	_open_an3_time^(0+256)
 18010  067F  0ABB               	incf	_open_an3_time^(0+256),f
 18011                           
 18012                           ;uart.c: 688: open_an4_time=0x01;
 18013  0680  01BC               	clrf	_open_an4_time^(0+256)
 18014  0681  0ABC               	incf	_open_an4_time^(0+256),f
 18015                           
 18016                           ;uart.c: 690: open_an9_time=0x01;
 18017  0682  01BD               	clrf	_open_an9_time^(0+256)
 18018  0683  0ABD               	incf	_open_an9_time^(0+256),f
 18019                           
 18020                           ;uart.c: 692: open_an10_time=0x01;
 18021  0684  01B8               	clrf	_open_an10_time^(0+256)
 18022  0685  0AB8               	incf	_open_an10_time^(0+256),f
 18023                           
 18024                           ;uart.c: 694: pv_voltage_status=0x00;
 18025  0686  01C2               	clrf	_pv_voltage_status^(0+256)
 18026                           
 18027                           ;uart.c: 696: day_time_count=0x00;
 18028                           
 18029                           ;uart.c: 698: night_time_count=0x00;
 18030  0687  26EA  3182         	fcall	PL68	;call to abstracted procedure
 18031                           
 18032                           ;uart.c: 700: pv_time_count=0x00;
 18033                           
 18034                           ;uart.c: 703: uart1_tx_buf[0]=0x55;
 18035  0689  27E2  3182         	fcall	PL200	;call to abstracted procedure
 18036                           
 18037                           ;uart.c: 705: uart1_tx_buf[1]=0xB6;
 18038  068B  30B6               	movlw	182
 18039  068C  2DFA               	goto	L5
 18040  068D                     l18694:	
 18041  068D  0844               	movf	_rx_frame_kind^(0+256),w
 18042                           
 18043                           ; Switch size 1, requested type "space"
 18044                           ; Number of cases is 6, Range of values is 1 to 6
 18045                           ; switch strategies available:
 18046                           ; Name         Instructions Cycles
 18047                           ; simple_byte           19    10 (average)
 18048                           ; direct_byte           21     9 (fixed)
 18049                           ; jumptable            263     9 (fixed)
 18050                           ;	Chosen strategy is simple_byte
 18051  068E  3A01               	xorlw	1	; case 1
 18052  068F  1903               	skipnz
 18053  0690  2FFE               	goto	L70
 18054  0691  3A03               	xorlw	3	; case 2
 18055  0692  1903               	skipnz
 18056  0693  2A7F               	goto	l18434
 18057  0694  3A01               	xorlw	1	; case 3
 18058  0695  1903               	skipnz
 18059  0696  2B07               	goto	l18482
 18060  0697  3A07               	xorlw	7	; case 4
 18061  0698  1903               	skipnz
 18062  0699  2E1F               	goto	l1814
 18063  069A  3A01               	xorlw	1	; case 5
 18064  069B  1903               	skipnz
 18065  069C  2E27               	goto	l18612
 18066  069D  3A03               	xorlw	3	; case 6
 18067  069E  1903               	skipnz
 18068  069F  2E2F               	goto	l18624
 18069  06A0  2EA1               	goto	l18696
 18070  06A1                     l18696:	
 18071                           
 18072                           ;uart.c: 722: rx_frame_kind=0x00;
 18073  06A1  0022               	movlb	2	; select bank2
 18074  06A2  3020               	movlw	low _uart1_rx_buf
 18075  06A3  01C4               	clrf	_rx_frame_kind^(0+256)
 18076                           
 18077                           ;uart.c: 724: memset (uart1_rx_buf,0,sizeof(uart1_rx_buf));
 18078  06A4  0020               	movlb	0	; select bank0
 18079  06A5  00A3               	movwf	memset@p1
 18080  06A6  3004               	movlw	high _uart1_rx_buf
 18081  06A7  00A4               	movwf	memset@p1+1
 18082  06A8  3050               	movlw	80
 18083  06A9  01A5               	clrf	memset@c
 18084  06AA  01A6               	clrf	memset@c+1
 18085  06AB  00A7               	movwf	memset@n
 18086  06AC  01A8               	clrf	memset@n+1
 18087  06AD  318F  2FE9         	ljmp	l14952
 18088  06AF                     __end_of_handle_uart_rx_buf:	
 18089  06AF                     PL14:	
 18090  06AF  0021               	movlb	1	; select bank1
 18091  06B0  0864               	movf	(_load_cc_I+3)^(0+128),w
 18092  06B1  0020               	movlb	0	; select bank0
 18093  06B2  00CE               	movwf	___fldiv@f1+3
 18094  06B3  0021               	movlb	1	; select bank1
 18095  06B4  0863               	movf	(_load_cc_I+2)^(0+128),w
 18096  06B5  0020               	movlb	0	; select bank0
 18097  06B6  00CD               	movwf	___fldiv@f1+2
 18098  06B7  0021               	movlb	1	; select bank1
 18099  06B8  0862               	movf	(_load_cc_I+1)^(0+128),w
 18100  06B9  0020               	movlb	0	; select bank0
 18101  06BA  00CC               	movwf	___fldiv@f1+1
 18102  06BB  0021               	movlb	1	; select bank1
 18103  06BC  0861               	movf	_load_cc_I^(0+128),w
 18104  06BD  0020               	movlb	0	; select bank0
 18105  06BE  00CB               	movwf	___fldiv@f1
 18106  06BF  3043               	movlw	67
 18107  06C0  00CA               	movwf	___fldiv@f2+3
 18108  06C1  3080               	movlw	128
 18109  06C2  00C9               	movwf	___fldiv@f2+2
 18110  06C3  01C8               	clrf	___fldiv@f2+1
 18111  06C4  01C7               	clrf	___fldiv@f2
 18112  06C5  0008               	return
 18113  06C6                     __end_ofPL14:	
 18114  06C6                     PL32:	
 18115  06C6  0020               	movlb	0	; select bank0
 18116  06C7  00CB               	movwf	___fldiv@f1
 18117  06C8  3043               	movlw	67
 18118  06C9  00CA               	movwf	___fldiv@f2+3
 18119  06CA  3080               	movlw	128
 18120  06CB  00C9               	movwf	___fldiv@f2+2
 18121  06CC  01C8               	clrf	___fldiv@f2+1
 18122  06CD  01C7               	clrf	___fldiv@f2
 18123  06CE  0008               	return
 18124  06CF                     __end_ofPL32:	
 18125  06CF                     PL34:	
 18126  06CF  084A               	movf	?___fldiv+3,w
 18127  06D0  00DD               	movwf	___fltol@f1+3
 18128  06D1  0849               	movf	?___fldiv+2,w
 18129  06D2  00DC               	movwf	___fltol@f1+2
 18130  06D3  0848               	movf	?___fldiv+1,w
 18131  06D4  00DB               	movwf	___fltol@f1+1
 18132  06D5  0847               	movf	?___fldiv,w
 18133  06D6  00DA               	movwf	___fltol@f1
 18134  06D7  0008               	return
 18135  06D8                     __end_ofPL34:	
 18136  06D8                     PL36:	
 18137  06D8  084A               	movf	?___fldiv+3,w
 18138  06D9  00BB               	movwf	___flmul@f2+3
 18139  06DA  0849               	movf	?___fldiv+2,w
 18140  06DB  00BA               	movwf	___flmul@f2+2
 18141  06DC  0848               	movf	?___fldiv+1,w
 18142  06DD  00B9               	movwf	___flmul@f2+1
 18143  06DE  0847               	movf	?___fldiv,w
 18144  06DF  00B8               	movwf	___flmul@f2
 18145  06E0  0008               	return
 18146  06E1                     __end_ofPL36:	
 18147  06E1                     PL56:	
 18148  06E1  0833               	movf	?___lwtofl+3,w
 18149  06E2  00CE               	movwf	___fldiv@f1+3
 18150  06E3  0832               	movf	?___lwtofl+2,w
 18151  06E4  00CD               	movwf	___fldiv@f1+2
 18152  06E5  0831               	movf	?___lwtofl+1,w
 18153  06E6  00CC               	movwf	___fldiv@f1+1
 18154  06E7  0830               	movf	?___lwtofl,w
 18155  06E8  00CB               	movwf	___fldiv@f1
 18156  06E9  0008               	return
 18157  06EA                     __end_ofPL56:	
 18158  06EA                     PL68:	
 18159  06EA  0025               	movlb	5	; select bank5
 18160  06EB  01A4               	clrf	_day_time_count^(0+640)
 18161  06EC  01A5               	clrf	(_day_time_count+1)^(0+640)
 18162  06ED  01A6               	clrf	(_day_time_count+2)^(0+640)
 18163  06EE  01A7               	clrf	(_day_time_count+3)^(0+640)
 18164  06EF  0024               	movlb	4	; select bank4
 18165  06F0  01B4               	clrf	_night_time_count^(0+512)
 18166  06F1  01B5               	clrf	(_night_time_count+1)^(0+512)
 18167  06F2  01B6               	clrf	(_night_time_count+2)^(0+512)
 18168  06F3  01B7               	clrf	(_night_time_count+3)^(0+512)
 18169  06F4  0008               	return
 18170  06F5                     __end_ofPL68:	
 18171  06F5                     PL78:	
 18172  06F5  0021               	movlb	1	; select bank1
 18173  06F6  0860               	movf	(_light_pv+3)^(0+128),w
 18174  06F7  0020               	movlb	0	; select bank0
 18175  06F8  00CE               	movwf	___fldiv@f1+3
 18176  06F9  0021               	movlb	1	; select bank1
 18177  06FA  085F               	movf	(_light_pv+2)^(0+128),w
 18178  06FB  0020               	movlb	0	; select bank0
 18179  06FC  00CD               	movwf	___fldiv@f1+2
 18180  06FD  0021               	movlb	1	; select bank1
 18181  06FE  085E               	movf	(_light_pv+1)^(0+128),w
 18182  06FF  0020               	movlb	0	; select bank0
 18183  0700  00CC               	movwf	___fldiv@f1+1
 18184  0701  0021               	movlb	1	; select bank1
 18185  0702  085D               	movf	_light_pv^(0+128),w
 18186  0703  0008               	return
 18187  0704                     __end_ofPL78:	
 18188  0704                     PL84:	
 18189  0704  0021               	movlb	1	; select bank1
 18190  0705  0851               	movf	(_pv_voltage_value+1)^(0+128),w
 18191  0706  0020               	movlb	0	; select bank0
 18192  0707  00B1               	movwf	___lwtofl@c+1
 18193  0708  0021               	movlb	1	; select bank1
 18194  0709  0850               	movf	_pv_voltage_value^(0+128),w
 18195  070A  0020               	movlb	0	; select bank0
 18196  070B  00B0               	movwf	___lwtofl@c
 18197  070C  0008               	return
 18198  070D                     __end_ofPL84:	
 18199  070D                     PL102:	
 18200  070D  086B               	movf	_today_index,w
 18201  070E  3E08               	addlw	8
 18202  070F  3907               	andlw	7
 18203  0710  0709               	addwf	9,w
 18204  0711  0709               	addwf	9,w
 18205  0712  0008               	return
 18206  0713                     __end_ofPL102:	
 18207  0713                     PL114:	
 18208  0713  0022               	movlb	2	; select bank2
 18209  0714  0866               	movf	(_step_04_load_percent+3)^(0+256),w
 18210  0715  0020               	movlb	0	; select bank0
 18211  0716  00DD               	movwf	___fltol@f1+3
 18212  0717  0022               	movlb	2	; select bank2
 18213  0718  0865               	movf	(_step_04_load_percent+2)^(0+256),w
 18214  0719  0020               	movlb	0	; select bank0
 18215  071A  00DC               	movwf	___fltol@f1+2
 18216  071B  0022               	movlb	2	; select bank2
 18217  071C  0864               	movf	(_step_04_load_percent+1)^(0+256),w
 18218  071D  0020               	movlb	0	; select bank0
 18219  071E  00DB               	movwf	___fltol@f1+1
 18220  071F  0022               	movlb	2	; select bank2
 18221  0720  0863               	movf	_step_04_load_percent^(0+256),w
 18222  0721  0020               	movlb	0	; select bank0
 18223  0722  00DA               	movwf	___fltol@f1
 18224  0723  0008               	return
 18225  0724                     __end_ofPL114:	
 18226  0724                     PL116:	
 18227  0724  0022               	movlb	2	; select bank2
 18228  0725  086A               	movf	(_step_05_load_percent+3)^(0+256),w
 18229  0726  0020               	movlb	0	; select bank0
 18230  0727  00DD               	movwf	___fltol@f1+3
 18231  0728  0022               	movlb	2	; select bank2
 18232  0729  0869               	movf	(_step_05_load_percent+2)^(0+256),w
 18233  072A  0020               	movlb	0	; select bank0
 18234  072B  00DC               	movwf	___fltol@f1+2
 18235  072C  0022               	movlb	2	; select bank2
 18236  072D  0868               	movf	(_step_05_load_percent+1)^(0+256),w
 18237  072E  0020               	movlb	0	; select bank0
 18238  072F  00DB               	movwf	___fltol@f1+1
 18239  0730  0022               	movlb	2	; select bank2
 18240  0731  0867               	movf	_step_05_load_percent^(0+256),w
 18241  0732  0020               	movlb	0	; select bank0
 18242  0733  00DA               	movwf	___fltol@f1
 18243  0734  0008               	return
 18244  0735                     __end_ofPL116:	
 18245  0735                     PL120:	
 18246  0735  0022               	movlb	2	; select bank2
 18247  0736  085A               	movf	(_step_01_load_percent+3)^(0+256),w
 18248  0737  0020               	movlb	0	; select bank0
 18249  0738  00DD               	movwf	___fltol@f1+3
 18250  0739  0022               	movlb	2	; select bank2
 18251  073A  0859               	movf	(_step_01_load_percent+2)^(0+256),w
 18252  073B  0020               	movlb	0	; select bank0
 18253  073C  00DC               	movwf	___fltol@f1+2
 18254  073D  0022               	movlb	2	; select bank2
 18255  073E  0858               	movf	(_step_01_load_percent+1)^(0+256),w
 18256  073F  0020               	movlb	0	; select bank0
 18257  0740  00DB               	movwf	___fltol@f1+1
 18258  0741  0022               	movlb	2	; select bank2
 18259  0742  0857               	movf	_step_01_load_percent^(0+256),w
 18260  0743  0020               	movlb	0	; select bank0
 18261  0744  00DA               	movwf	___fltol@f1
 18262  0745  0008               	return
 18263  0746                     __end_ofPL120:	
 18264  0746                     PL122:	
 18265  0746  0022               	movlb	2	; select bank2
 18266  0747  0862               	movf	(_step_03_load_percent+3)^(0+256),w
 18267  0748  0020               	movlb	0	; select bank0
 18268  0749  00DD               	movwf	___fltol@f1+3
 18269  074A  0022               	movlb	2	; select bank2
 18270  074B  0861               	movf	(_step_03_load_percent+2)^(0+256),w
 18271  074C  0020               	movlb	0	; select bank0
 18272  074D  00DC               	movwf	___fltol@f1+2
 18273  074E  0022               	movlb	2	; select bank2
 18274  074F  0860               	movf	(_step_03_load_percent+1)^(0+256),w
 18275  0750  0020               	movlb	0	; select bank0
 18276  0751  00DB               	movwf	___fltol@f1+1
 18277  0752  0022               	movlb	2	; select bank2
 18278  0753  085F               	movf	_step_03_load_percent^(0+256),w
 18279  0754  0020               	movlb	0	; select bank0
 18280  0755  00DA               	movwf	___fltol@f1
 18281  0756  0008               	return
 18282  0757                     __end_ofPL122:	
 18283  0757                     PL124:	
 18284  0757  0022               	movlb	2	; select bank2
 18285  0758  085E               	movf	(_step_02_load_percent+3)^(0+256),w
 18286  0759  0020               	movlb	0	; select bank0
 18287  075A  00DD               	movwf	___fltol@f1+3
 18288  075B  0022               	movlb	2	; select bank2
 18289  075C  085D               	movf	(_step_02_load_percent+2)^(0+256),w
 18290  075D  0020               	movlb	0	; select bank0
 18291  075E  00DC               	movwf	___fltol@f1+2
 18292  075F  0022               	movlb	2	; select bank2
 18293  0760  085C               	movf	(_step_02_load_percent+1)^(0+256),w
 18294  0761  0020               	movlb	0	; select bank0
 18295  0762  00DB               	movwf	___fltol@f1+1
 18296  0763  0022               	movlb	2	; select bank2
 18297  0764  085B               	movf	_step_02_load_percent^(0+256),w
 18298  0765  0020               	movlb	0	; select bank0
 18299  0766  00DA               	movwf	___fltol@f1
 18300  0767  0008               	return
 18301  0768                     __end_ofPL124:	
 18302  0768                     PL126:	
 18303  0768  0021               	movlb	1	; select bank1
 18304  0769  0864               	movf	(_load_cc_I+3)^(0+128),w
 18305  076A  0020               	movlb	0	; select bank0
 18306  076B  00DD               	movwf	___fltol@f1+3
 18307  076C  0021               	movlb	1	; select bank1
 18308  076D  0863               	movf	(_load_cc_I+2)^(0+128),w
 18309  076E  0020               	movlb	0	; select bank0
 18310  076F  00DC               	movwf	___fltol@f1+2
 18311  0770  0021               	movlb	1	; select bank1
 18312  0771  0862               	movf	(_load_cc_I+1)^(0+128),w
 18313  0772  0020               	movlb	0	; select bank0
 18314  0773  00DB               	movwf	___fltol@f1+1
 18315  0774  0021               	movlb	1	; select bank1
 18316  0775  0861               	movf	_load_cc_I^(0+128),w
 18317  0776  0020               	movlb	0	; select bank0
 18318  0777  00DA               	movwf	___fltol@f1
 18319  0778  0008               	return
 18320  0779                     __end_ofPL126:	
 18321  0779                     PL128:	
 18322  0779  0021               	movlb	1	; select bank1
 18323  077A  0860               	movf	(_light_pv+3)^(0+128),w
 18324  077B  0020               	movlb	0	; select bank0
 18325  077C  00DD               	movwf	___fltol@f1+3
 18326  077D  0021               	movlb	1	; select bank1
 18327  077E  085F               	movf	(_light_pv+2)^(0+128),w
 18328  077F  0020               	movlb	0	; select bank0
 18329  0780  00DC               	movwf	___fltol@f1+2
 18330  0781  0021               	movlb	1	; select bank1
 18331  0782  085E               	movf	(_light_pv+1)^(0+128),w
 18332  0783  0020               	movlb	0	; select bank0
 18333  0784  00DB               	movwf	___fltol@f1+1
 18334  0785  0021               	movlb	1	; select bank1
 18335  0786  085D               	movf	_light_pv^(0+128),w
 18336  0787  0020               	movlb	0	; select bank0
 18337  0788  00DA               	movwf	___fltol@f1
 18338  0789  0008               	return
 18339  078A                     __end_ofPL128:	
 18340  078A                     PL144:	
 18341  078A  086B               	movf	_today_index,w
 18342  078B  3E03               	addlw	3
 18343  078C  3907               	andlw	7
 18344  078D  0709               	addwf	9,w
 18345  078E  0709               	addwf	9,w
 18346  078F  0008               	return
 18347  0790                     __end_ofPL144:	
 18348  0790                     PL146:	
 18349  0790  086B               	movf	_today_index,w
 18350  0791  3E02               	addlw	2
 18351  0792  3907               	andlw	7
 18352  0793  0709               	addwf	9,w
 18353  0794  0709               	addwf	9,w
 18354  0795  0008               	return
 18355  0796                     __end_ofPL146:	
 18356  0796                     PL150:	
 18357  0796  086B               	movf	_today_index,w
 18358  0797  3E01               	addlw	1
 18359  0798  3907               	andlw	7
 18360  0799  0709               	addwf	9,w
 18361  079A  0709               	addwf	9,w
 18362  079B  0008               	return
 18363  079C                     __end_ofPL150:	
 18364  079C                     PL152:	
 18365  079C  086B               	movf	_today_index,w
 18366  079D  3E04               	addlw	4
 18367  079E  3907               	andlw	7
 18368  079F  0709               	addwf	9,w
 18369  07A0  0709               	addwf	9,w
 18370  07A1  0008               	return
 18371  07A2                     __end_ofPL152:	
 18372  07A2                     PL154:	
 18373  07A2  086B               	movf	_today_index,w
 18374  07A3  3E05               	addlw	5
 18375  07A4  3907               	andlw	7
 18376  07A5  0709               	addwf	9,w
 18377  07A6  0709               	addwf	9,w
 18378  07A7  0008               	return
 18379  07A8                     __end_ofPL154:	
 18380  07A8                     PL156:	
 18381  07A8  086B               	movf	_today_index,w
 18382  07A9  3E07               	addlw	7
 18383  07AA  3907               	andlw	7
 18384  07AB  0709               	addwf	9,w
 18385  07AC  0709               	addwf	9,w
 18386  07AD  0008               	return
 18387  07AE                     __end_ofPL156:	
 18388  07AE                     PL158:	
 18389  07AE  086B               	movf	_today_index,w
 18390  07AF  3E06               	addlw	6
 18391  07B0  3907               	andlw	7
 18392  07B1  0709               	addwf	9,w
 18393  07B2  0709               	addwf	9,w
 18394  07B3  0008               	return
 18395  07B4                     __end_ofPL158:	
 18396  07B4                     PL162:	
 18397  07B4  00DD               	movwf	___flge@ff1+3
 18398  07B5  30C8               	movlw	200
 18399  07B6  00DC               	movwf	___flge@ff1+2
 18400  07B7  01DB               	clrf	___flge@ff1+1
 18401  07B8  01DA               	clrf	___flge@ff1
 18402  07B9  0022               	movlb	2	; select bank2
 18403  07BA  0008               	return
 18404  07BB                     __end_ofPL162:	
 18405  07BB                     PL164:	
 18406  07BB  0020               	movlb	0	; select bank0
 18407  07BC  00B7               	movwf	___flmul@f1+3
 18408  07BD  3074               	movlw	116
 18409  07BE  00B6               	movwf	___flmul@f1+2
 18410  07BF  3041               	movlw	65
 18411  07C0  01B5               	clrf	___flmul@f1+1
 18412  07C1  01B4               	clrf	___flmul@f1
 18413  07C2  00CA               	movwf	___fldiv@f2+3
 18414  07C3  3020               	movlw	32
 18415  07C4  00C9               	movwf	___fldiv@f2+2
 18416  07C5  01C8               	clrf	___fldiv@f2+1
 18417  07C6  01C7               	clrf	___fldiv@f2
 18418  07C7  0008               	return
 18419  07C8                     __end_ofPL164:	
 18420  07C8                     PL172:	
 18421  07C8  0824               	movf	?_crc16+1,w
 18422  07C9  00FD               	movwf	_crc_data+1
 18423  07CA  0823               	movf	?_crc16,w
 18424  07CB  00FC               	movwf	_crc_data
 18425  07CC  087D               	movf	_crc_data+1,w
 18426  07CD  0027               	movlb	7	; select bank7
 18427  07CE  0008               	return
 18428  07CF                     __end_ofPL172:	
 18429  07CF                     PL176:	
 18430  07CF  0823               	movf	?_crc16,w
 18431  07D0  00E6               	movwf	handle_uart_rx_buf@crc_in
 18432  07D1  0867               	movf	handle_uart_rx_buf@crc_in+1,w
 18433  07D2  0028               	movlb	8	; select bank8
 18434  07D3  0622               	xorwf	(_uart1_rx_buf^(0+1024)+2),w
 18435  07D4  1D03               	skipz
 18436  07D5  0008               	return
 18437  07D6  0020               	movlb	0	; select bank0
 18438  07D7  0866               	movf	handle_uart_rx_buf@crc_in,w
 18439  07D8  0028               	movlb	8	; select bank8
 18440  07D9  0623               	xorwf	(_uart1_rx_buf^(0+1024)+3),w
 18441  07DA  0008               	return
 18442  07DB                     __end_ofPL176:	
 18443  07DB                     PL194:	
 18444  07DB  0020               	movlb	0	; select bank0
 18445  07DC  00B1               	movwf	___lwtofl@c+1
 18446  07DD  0021               	movlb	1	; select bank1
 18447  07DE  0848               	movf	_charge_current_value^(0+128),w
 18448  07DF  0020               	movlb	0	; select bank0
 18449  07E0  00B0               	movwf	___lwtofl@c
 18450  07E1  0008               	return
 18451  07E2                     __end_ofPL194:	
 18452  07E2                     PL200:	
 18453  07E2  0025               	movlb	5	; select bank5
 18454  07E3  3055               	movlw	85
 18455  07E4  01A8               	clrf	_pv_time_count^(0+640)
 18456  07E5  01A9               	clrf	(_pv_time_count+1)^(0+640)
 18457  07E6  01AA               	clrf	(_pv_time_count+2)^(0+640)
 18458  07E7  01AB               	clrf	(_pv_time_count+3)^(0+640)
 18459  07E8  0027               	movlb	7	; select bank7
 18460  07E9  00A0               	movwf	_uart1_tx_buf^(0+896)
 18461  07EA  0008               	return
 18462  07EB                     __end_ofPL200:	
 18463  07EB                     PL224:	
 18464  07EB  30A1               	movlw	low (_uart1_tx_buf+1)
 18465  07EC  0020               	movlb	0	; select bank0
 18466  07ED  00A3               	movwf	crc16@puchMsg
 18467  07EE  3003               	movlw	high (_uart1_tx_buf+1)
 18468  07EF  00A4               	movwf	crc16@puchMsg+1
 18469  07F0  0008               	return
 18470  07F1                     __end_ofPL224:	
 18471  07F1                     PL234:	
 18472  07F1  0020               	movlb	0	; select bank0
 18473  07F2  00A3               	movwf	crc16@puchMsg
 18474  07F3  3004               	movlw	high (_uart1_rx_buf+1)
 18475  07F4  00A4               	movwf	crc16@puchMsg+1
 18476  07F5  01A5               	clrf	crc16@usDataLen
 18477  07F6  0AA5               	incf	crc16@usDataLen,f
 18478  07F7  0008               	return
 18479  07F8                     __end_ofPL234:	
 18480  07F8                     PL248:	
 18481  07F8  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 18482  07F9  087C               	movf	_crc_data,w
 18483  07FA  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 18484  07FB  30AA               	movlw	170
 18485  07FC  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 18486  07FD  0008               	return
 18487  07FE                     L70:	
 18488  07FE                     __end_ofPL248:	
 18489  07FE  31AC  2CB2         	ljmp	l18314
 18490                           
 18491                           	psect	text11_split_2
 18492  3397                     PL4:	
 18493  3397  00B7               	movwf	___flmul@f1+3
 18494  3398  3020               	movlw	32
 18495  3399  00B6               	movwf	___flmul@f1+2
 18496  339A  3042               	movlw	66
 18497  339B  01B5               	clrf	___flmul@f1+1
 18498  339C  01B4               	clrf	___flmul@f1
 18499  339D  00CA               	movwf	___fldiv@f2+3
 18500  339E  30C8               	movlw	200
 18501  339F  00C9               	movwf	___fldiv@f2+2
 18502  33A0  01C8               	clrf	___fldiv@f2+1
 18503  33A1  01C7               	clrf	___fldiv@f2
 18504  33A2  0021               	movlb	1	; select bank1
 18505  33A3  0864               	movf	(_load_cc_I+3)^(0+128),w
 18506  33A4  0020               	movlb	0	; select bank0
 18507  33A5  00CE               	movwf	___fldiv@f1+3
 18508  33A6  0021               	movlb	1	; select bank1
 18509  33A7  0863               	movf	(_load_cc_I+2)^(0+128),w
 18510  33A8  0020               	movlb	0	; select bank0
 18511  33A9  00CD               	movwf	___fldiv@f1+2
 18512  33AA  0021               	movlb	1	; select bank1
 18513  33AB  0862               	movf	(_load_cc_I+1)^(0+128),w
 18514  33AC  0020               	movlb	0	; select bank0
 18515  33AD  00CC               	movwf	___fldiv@f1+1
 18516  33AE  0021               	movlb	1	; select bank1
 18517  33AF  0861               	movf	_load_cc_I^(0+128),w
 18518  33B0  0020               	movlb	0	; select bank0
 18519  33B1  00CB               	movwf	___fldiv@f1
 18520  33B2  0008               	return
 18521  33B3                     __end_ofPL4:	
 18522  33B3                     PL18:	
 18523  33B3  0833               	movf	?___lwtofl+3,w
 18524  33B4  00DD               	movwf	___flge@ff1+3
 18525  33B5  0832               	movf	?___lwtofl+2,w
 18526  33B6  00DC               	movwf	___flge@ff1+2
 18527  33B7  0831               	movf	?___lwtofl+1,w
 18528  33B8  00DB               	movwf	___flge@ff1+1
 18529  33B9  0830               	movf	?___lwtofl,w
 18530  33BA  00DA               	movwf	___flge@ff1
 18531  33BB  0008               	return
 18532  33BC                     __end_ofPL18:	
 18533  33BC                     PL20:	
 18534  33BC  0833               	movf	?___lwtofl+3,w
 18535  33BD  00E1               	movwf	___flge@ff2+3
 18536  33BE  0832               	movf	?___lwtofl+2,w
 18537  33BF  00E0               	movwf	___flge@ff2+2
 18538  33C0  0831               	movf	?___lwtofl+1,w
 18539  33C1  00DF               	movwf	___flge@ff2+1
 18540  33C2  0830               	movf	?___lwtofl,w
 18541  33C3  00DE               	movwf	___flge@ff2
 18542  33C4  0008               	return
 18543  33C5                     __end_ofPL20:	
 18544  33C5                     PL26:	
 18545  33C5  0020               	movlb	0	; select bank0
 18546  33C6  00E6               	movwf	??_handle_ad_loop
 18547  33C7  01E7               	clrf	??_handle_ad_loop+1
 18548  33C8  0867               	movf	??_handle_ad_loop+1,w
 18549  33C9  0021               	movlb	1	; select bank1
 18550  33CA  024D               	subwf	(_ho_cnt+1)^(0+128),w
 18551  33CB  1D03               	skipz
 18552  33CC  0008               	return
 18553  33CD  0020               	movlb	0	; select bank0
 18554  33CE  0866               	movf	??_handle_ad_loop,w
 18555  33CF  0021               	movlb	1	; select bank1
 18556  33D0  024C               	subwf	_ho_cnt^(0+128),w
 18557  33D1  0008               	return
 18558  33D2                     __end_ofPL26:	
 18559  33D2                     PL54:	
 18560  33D2  00C4               	movwf	_bost_pwm_value^(0+128)
 18561  33D3  01C5               	clrf	(_bost_pwm_value+1)^(0+128)
 18562  33D4  0845               	movf	(_bost_pwm_value+1)^(0+128),w
 18563  33D5  0020               	movlb	0	; select bank0
 18564  33D6  00A4               	movwf	Set_Bost_Pwm_Duty@dduty+1
 18565  33D7  0021               	movlb	1	; select bank1
 18566  33D8  0844               	movf	_bost_pwm_value^(0+128),w
 18567  33D9  0020               	movlb	0	; select bank0
 18568  33DA  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
 18569  33DB  0008               	return
 18570  33DC                     __end_ofPL54:	
 18571  33DC                     PL58:	
 18572  33DC  0833               	movf	?___lwtofl+3,w
 18573  33DD  00CA               	movwf	___fldiv@f2+3
 18574  33DE  0832               	movf	?___lwtofl+2,w
 18575  33DF  00C9               	movwf	___fldiv@f2+2
 18576  33E0  0831               	movf	?___lwtofl+1,w
 18577  33E1  00C8               	movwf	___fldiv@f2+1
 18578  33E2  0830               	movf	?___lwtofl,w
 18579  33E3  00C7               	movwf	___fldiv@f2
 18580  33E4  3043               	movlw	67
 18581  33E5  00B7               	movwf	___flmul@f1+3
 18582  33E6  3020               	movlw	32
 18583  33E7  00B6               	movwf	___flmul@f1+2
 18584  33E8  01B5               	clrf	___flmul@f1+1
 18585  33E9  01B4               	clrf	___flmul@f1
 18586  33EA  0025               	movlb	5	; select bank5
 18587  33EB  084B               	movf	(_Load_Pmax+3)^(0+640),w
 18588  33EC  0020               	movlb	0	; select bank0
 18589  33ED  00BB               	movwf	___flmul@f2+3
 18590  33EE  0025               	movlb	5	; select bank5
 18591  33EF  084A               	movf	(_Load_Pmax+2)^(0+640),w
 18592  33F0  0020               	movlb	0	; select bank0
 18593  33F1  00BA               	movwf	___flmul@f2+2
 18594  33F2  0025               	movlb	5	; select bank5
 18595  33F3  0849               	movf	(_Load_Pmax+1)^(0+640),w
 18596  33F4  0020               	movlb	0	; select bank0
 18597  33F5  00B9               	movwf	___flmul@f2+1
 18598  33F6  0025               	movlb	5	; select bank5
 18599  33F7  0848               	movf	_Load_Pmax^(0+640),w
 18600  33F8  0020               	movlb	0	; select bank0
 18601  33F9  00B8               	movwf	___flmul@f2
 18602  33FA  0008               	return
 18603  33FB                     __end_ofPL58:	
 18604  33FB                     PL60:	
 18605  33FB  0020               	movlb	0	; select bank0
 18606  33FC  00DA               	movwf	___flge@ff1
 18607  33FD  0869               	movf	_battery_voltage_value+1,w
 18608  33FE  00B1               	movwf	___lwtofl@c+1
 18609  33FF  0868               	movf	_battery_voltage_value,w
 18610  3400  00B0               	movwf	___lwtofl@c
 18611  3401  0008               	return
 18612  3402                     __end_ofPL60:	
 18613  3402                     PL66:	
 18614  3402  0845               	movf	(_bost_pwm_value+1)^(0+128),w
 18615  3403  0020               	movlb	0	; select bank0
 18616  3404  00A4               	movwf	Set_Bost_Pwm_Duty@dduty+1
 18617  3405  0021               	movlb	1	; select bank1
 18618  3406  0844               	movf	_bost_pwm_value^(0+128),w
 18619  3407  0020               	movlb	0	; select bank0
 18620  3408  00A3               	movwf	Set_Bost_Pwm_Duty@dduty
 18621  3409  0008               	return
 18622  340A                     __end_ofPL66:	
 18623  340A                     PL72:	
 18624  340A  0830               	movf	?___awtofl+3,w
 18625  340B  00CE               	movwf	___fladd@f2+3
 18626  340C  082F               	movf	?___awtofl+2,w
 18627  340D  00CD               	movwf	___fladd@f2+2
 18628  340E  082E               	movf	?___awtofl+1,w
 18629  340F  00CC               	movwf	___fladd@f2+1
 18630  3410  082D               	movf	?___awtofl,w
 18631  3411  00CB               	movwf	___fladd@f2
 18632  3412  0022               	movlb	2	; select bank2
 18633  3413  0856               	movf	(_dianchi_guoya_baohu+3)^(0+256),w
 18634  3414  0020               	movlb	0	; select bank0
 18635  3415  00CA               	movwf	___fladd@f1+3
 18636  3416  0022               	movlb	2	; select bank2
 18637  3417  0855               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
 18638  3418  0020               	movlb	0	; select bank0
 18639  3419  00C9               	movwf	___fladd@f1+2
 18640  341A  0022               	movlb	2	; select bank2
 18641  341B  0854               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
 18642  341C  0020               	movlb	0	; select bank0
 18643  341D  00C8               	movwf	___fladd@f1+1
 18644  341E  0022               	movlb	2	; select bank2
 18645  341F  0853               	movf	_dianchi_guoya_baohu^(0+256),w
 18646  3420  0020               	movlb	0	; select bank0
 18647  3421  00C7               	movwf	___fladd@f1
 18648  3422  0008               	return
 18649  3423                     __end_ofPL72:	
 18650  3423                     PL74:	
 18651  3423  085B               	movf	(_discharge_i_limit+3)^(0+640),w
 18652  3424  0020               	movlb	0	; select bank0
 18653  3425  00DD               	movwf	___flge@ff1+3
 18654  3426  0025               	movlb	5	; select bank5
 18655  3427  085A               	movf	(_discharge_i_limit+2)^(0+640),w
 18656  3428  0020               	movlb	0	; select bank0
 18657  3429  00DC               	movwf	___flge@ff1+2
 18658  342A  0025               	movlb	5	; select bank5
 18659  342B  0859               	movf	(_discharge_i_limit+1)^(0+640),w
 18660  342C  0020               	movlb	0	; select bank0
 18661  342D  00DB               	movwf	___flge@ff1+1
 18662  342E  0025               	movlb	5	; select bank5
 18663  342F  0858               	movf	_discharge_i_limit^(0+640),w
 18664  3430  0020               	movlb	0	; select bank0
 18665  3431  00DA               	movwf	___flge@ff1
 18666  3432  0021               	movlb	1	; select bank1
 18667  3433  084B               	movf	(_discharge_current_value+1)^(0+128),w
 18668  3434  0020               	movlb	0	; select bank0
 18669  3435  00B1               	movwf	___lwtofl@c+1
 18670  3436  0021               	movlb	1	; select bank1
 18671  3437  084A               	movf	_discharge_current_value^(0+128),w
 18672  3438  0020               	movlb	0	; select bank0
 18673  3439  00B0               	movwf	___lwtofl@c
 18674  343A  0008               	return
 18675  343B                     __end_ofPL74:	
 18676  343B                     PL76:	
 18677  343B  0863               	movf	(_light_on_pv_level+3)^(0+640),w
 18678  343C  0020               	movlb	0	; select bank0
 18679  343D  00DD               	movwf	___flge@ff1+3
 18680  343E  0025               	movlb	5	; select bank5
 18681  343F  0862               	movf	(_light_on_pv_level+2)^(0+640),w
 18682  3440  0020               	movlb	0	; select bank0
 18683  3441  00DC               	movwf	___flge@ff1+2
 18684  3442  0025               	movlb	5	; select bank5
 18685  3443  0861               	movf	(_light_on_pv_level+1)^(0+640),w
 18686  3444  0020               	movlb	0	; select bank0
 18687  3445  00DB               	movwf	___flge@ff1+1
 18688  3446  0025               	movlb	5	; select bank5
 18689  3447  0860               	movf	_light_on_pv_level^(0+640),w
 18690  3448  0020               	movlb	0	; select bank0
 18691  3449  00DA               	movwf	___flge@ff1
 18692  344A  0021               	movlb	1	; select bank1
 18693  344B  0851               	movf	(_pv_voltage_value+1)^(0+128),w
 18694  344C  0020               	movlb	0	; select bank0
 18695  344D  00B1               	movwf	___lwtofl@c+1
 18696  344E  0021               	movlb	1	; select bank1
 18697  344F  0850               	movf	_pv_voltage_value^(0+128),w
 18698  3450  0020               	movlb	0	; select bank0
 18699  3451  00B0               	movwf	___lwtofl@c
 18700  3452  0008               	return
 18701  3453                     __end_ofPL76:	
 18702  3453                     PL82:	
 18703  3453  0837               	movf	?___flmul+3,w
 18704  3454  00CE               	movwf	___fldiv@f1+3
 18705  3455  0836               	movf	?___flmul+2,w
 18706  3456  00CD               	movwf	___fldiv@f1+2
 18707  3457  0835               	movf	?___flmul+1,w
 18708  3458  00CC               	movwf	___fldiv@f1+1
 18709  3459  0834               	movf	?___flmul,w
 18710  345A  00CB               	movwf	___fldiv@f1
 18711  345B  0008               	return
 18712  345C                     __end_ofPL82:	
 18713  345C                     PL86:	
 18714  345C  01DA               	clrf	___flge@ff1
 18715  345D  01DB               	clrf	___flge@ff1+1
 18716  345E  01DC               	clrf	___flge@ff1+2
 18717  345F  01DD               	clrf	___flge@ff1+3
 18718  3460  0023               	movlb	3	; select bank3
 18719  3461  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 18720  3462  0020               	movlb	0	; select bank0
 18721  3463  00E1               	movwf	___flge@ff2+3
 18722  3464  0023               	movlb	3	; select bank3
 18723  3465  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 18724  3466  0020               	movlb	0	; select bank0
 18725  3467  00E0               	movwf	___flge@ff2+2
 18726  3468  0023               	movlb	3	; select bank3
 18727  3469  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 18728  346A  0020               	movlb	0	; select bank0
 18729  346B  00DF               	movwf	___flge@ff2+1
 18730  346C  0023               	movlb	3	; select bank3
 18731  346D  0847               	movf	_PID_CC_discharge^(0+384),w
 18732  346E  0020               	movlb	0	; select bank0
 18733  346F  00DE               	movwf	___flge@ff2
 18734  3470  0008               	return
 18735  3471                     __end_ofPL86:	
 18736  3471                     PL90:	
 18737  3471  0025               	movlb	5	; select bank5
 18738  3472  0853               	movf	(_dianchi_qianya_huifu+3)^(0+640),w
 18739  3473  0020               	movlb	0	; select bank0
 18740  3474  00DD               	movwf	___flge@ff1+3
 18741  3475  0025               	movlb	5	; select bank5
 18742  3476  0852               	movf	(_dianchi_qianya_huifu+2)^(0+640),w
 18743  3477  0020               	movlb	0	; select bank0
 18744  3478  00DC               	movwf	___flge@ff1+2
 18745  3479  0025               	movlb	5	; select bank5
 18746  347A  0851               	movf	(_dianchi_qianya_huifu+1)^(0+640),w
 18747  347B  0020               	movlb	0	; select bank0
 18748  347C  00DB               	movwf	___flge@ff1+1
 18749  347D  0025               	movlb	5	; select bank5
 18750  347E  0850               	movf	_dianchi_qianya_huifu^(0+640),w
 18751  347F  0008               	return
 18752  3480                     __end_ofPL90:	
 18753  3480                     PL92:	
 18754  3480  0020               	movlb	0	; select bank0
 18755  3481  0869               	movf	_battery_voltage_value+1,w
 18756  3482  00B1               	movwf	___lwtofl@c+1
 18757  3483  0868               	movf	_battery_voltage_value,w
 18758  3484  00B0               	movwf	___lwtofl@c
 18759  3485  0008               	return
 18760  3486                     __end_ofPL92:	
 18761  3486                     PL94:	
 18762  3486  0867               	movf	(_bt_volt_80+3)^(0+512),w
 18763  3487  0020               	movlb	0	; select bank0
 18764  3488  00DD               	movwf	___flge@ff1+3
 18765  3489  0024               	movlb	4	; select bank4
 18766  348A  0866               	movf	(_bt_volt_80+2)^(0+512),w
 18767  348B  0020               	movlb	0	; select bank0
 18768  348C  00DC               	movwf	___flge@ff1+2
 18769  348D  0024               	movlb	4	; select bank4
 18770  348E  0865               	movf	(_bt_volt_80+1)^(0+512),w
 18771  348F  0020               	movlb	0	; select bank0
 18772  3490  00DB               	movwf	___flge@ff1+1
 18773  3491  0024               	movlb	4	; select bank4
 18774  3492  0864               	movf	_bt_volt_80^(0+512),w
 18775  3493  0008               	return
 18776  3494                     __end_ofPL94:	
 18777  3494                     PL96:	
 18778  3494  085F               	movf	(_bt_volt_40+3)^(0+512),w
 18779  3495  0020               	movlb	0	; select bank0
 18780  3496  00DD               	movwf	___flge@ff1+3
 18781  3497  0024               	movlb	4	; select bank4
 18782  3498  085E               	movf	(_bt_volt_40+2)^(0+512),w
 18783  3499  0020               	movlb	0	; select bank0
 18784  349A  00DC               	movwf	___flge@ff1+2
 18785  349B  0024               	movlb	4	; select bank4
 18786  349C  085D               	movf	(_bt_volt_40+1)^(0+512),w
 18787  349D  0020               	movlb	0	; select bank0
 18788  349E  00DB               	movwf	___flge@ff1+1
 18789  349F  0024               	movlb	4	; select bank4
 18790  34A0  085C               	movf	_bt_volt_40^(0+512),w
 18791  34A1  0008               	return
 18792  34A2                     __end_ofPL96:	
 18793  34A2                     PL98:	
 18794  34A2  0863               	movf	(_bt_volt_60+3)^(0+512),w
 18795  34A3  0020               	movlb	0	; select bank0
 18796  34A4  00DD               	movwf	___flge@ff1+3
 18797  34A5  0024               	movlb	4	; select bank4
 18798  34A6  0862               	movf	(_bt_volt_60+2)^(0+512),w
 18799  34A7  0020               	movlb	0	; select bank0
 18800  34A8  00DC               	movwf	___flge@ff1+2
 18801  34A9  0024               	movlb	4	; select bank4
 18802  34AA  0861               	movf	(_bt_volt_60+1)^(0+512),w
 18803  34AB  0020               	movlb	0	; select bank0
 18804  34AC  00DB               	movwf	___flge@ff1+1
 18805  34AD  0024               	movlb	4	; select bank4
 18806  34AE  0860               	movf	_bt_volt_60^(0+512),w
 18807  34AF  0008               	return
 18808  34B0                     __end_ofPL98:	
 18809  34B0                     PL100:	
 18810  34B0  085B               	movf	(_bt_volt_20+3)^(0+512),w
 18811  34B1  0020               	movlb	0	; select bank0
 18812  34B2  00DD               	movwf	___flge@ff1+3
 18813  34B3  0024               	movlb	4	; select bank4
 18814  34B4  085A               	movf	(_bt_volt_20+2)^(0+512),w
 18815  34B5  0020               	movlb	0	; select bank0
 18816  34B6  00DC               	movwf	___flge@ff1+2
 18817  34B7  0024               	movlb	4	; select bank4
 18818  34B8  0859               	movf	(_bt_volt_20+1)^(0+512),w
 18819  34B9  0020               	movlb	0	; select bank0
 18820  34BA  00DB               	movwf	___flge@ff1+1
 18821  34BB  0024               	movlb	4	; select bank4
 18822  34BC  0858               	movf	_bt_volt_20^(0+512),w
 18823  34BD  0008               	return
 18824  34BE                     __end_ofPL100:	
 18825  34BE                     PL106:	
 18826  34BE  084F               	movf	(_load_voltage_value+1)^(0+128),w
 18827  34BF  0020               	movlb	0	; select bank0
 18828  34C0  00B1               	movwf	___lwtofl@c+1
 18829  34C1  0021               	movlb	1	; select bank1
 18830  34C2  084E               	movf	_load_voltage_value^(0+128),w
 18831  34C3  0020               	movlb	0	; select bank0
 18832  34C4  00B0               	movwf	___lwtofl@c
 18833  34C5  0008               	return
 18834  34C6                     __end_ofPL106:	
 18835  34C6                     PL108:	
 18836  34C6  0020               	movlb	0	; select bank0
 18837  34C7  00CA               	movwf	___fldiv@f2+3
 18838  34C8  30C8               	movlw	200
 18839  34C9  00C9               	movwf	___fldiv@f2+2
 18840  34CA  01C8               	clrf	___fldiv@f2+1
 18841  34CB  01C7               	clrf	___fldiv@f2
 18842  34CC  0022               	movlb	2	; select bank2
 18843  34CD  0008               	return
 18844  34CE                     __end_ofPL108:	
 18845  34CE                     PL118:	
 18846  34CE  0025               	movlb	5	; select bank5
 18847  34CF  084F               	movf	(_charge_i_limit+3)^(0+640),w
 18848  34D0  0020               	movlb	0	; select bank0
 18849  34D1  00E1               	movwf	___flge@ff2+3
 18850  34D2  0025               	movlb	5	; select bank5
 18851  34D3  084E               	movf	(_charge_i_limit+2)^(0+640),w
 18852  34D4  0020               	movlb	0	; select bank0
 18853  34D5  00E0               	movwf	___flge@ff2+2
 18854  34D6  0025               	movlb	5	; select bank5
 18855  34D7  084D               	movf	(_charge_i_limit+1)^(0+640),w
 18856  34D8  0020               	movlb	0	; select bank0
 18857  34D9  00DF               	movwf	___flge@ff2+1
 18858  34DA  0025               	movlb	5	; select bank5
 18859  34DB  084C               	movf	_charge_i_limit^(0+640),w
 18860  34DC  0020               	movlb	0	; select bank0
 18861  34DD  00DE               	movwf	___flge@ff2
 18862  34DE  0008               	return
 18863  34DF                     __end_ofPL118:	
 18864  34DF                     PL130:	
 18865  34DF  0024               	movlb	4	; select bank4
 18866  34E0  086B               	movf	(_dianchi_qianya_baohu+3)^(0+512),w
 18867  34E1  0020               	movlb	0	; select bank0
 18868  34E2  00E1               	movwf	___flge@ff2+3
 18869  34E3  0024               	movlb	4	; select bank4
 18870  34E4  086A               	movf	(_dianchi_qianya_baohu+2)^(0+512),w
 18871  34E5  0020               	movlb	0	; select bank0
 18872  34E6  00E0               	movwf	___flge@ff2+2
 18873  34E7  0024               	movlb	4	; select bank4
 18874  34E8  0869               	movf	(_dianchi_qianya_baohu+1)^(0+512),w
 18875  34E9  0020               	movlb	0	; select bank0
 18876  34EA  00DF               	movwf	___flge@ff2+1
 18877  34EB  0024               	movlb	4	; select bank4
 18878  34EC  0868               	movf	_dianchi_qianya_baohu^(0+512),w
 18879  34ED  0020               	movlb	0	; select bank0
 18880  34EE  00DE               	movwf	___flge@ff2
 18881  34EF  0008               	return
 18882  34F0                     __end_ofPL130:	
 18883  34F0                     PL132:	
 18884  34F0  0023               	movlb	3	; select bank3
 18885  34F1  086E               	movf	(_shuchu_shortout_voltage+3)^(0+384),w
 18886  34F2  0020               	movlb	0	; select bank0
 18887  34F3  00E1               	movwf	___flge@ff2+3
 18888  34F4  0023               	movlb	3	; select bank3
 18889  34F5  086D               	movf	(_shuchu_shortout_voltage+2)^(0+384),w
 18890  34F6  0020               	movlb	0	; select bank0
 18891  34F7  00E0               	movwf	___flge@ff2+2
 18892  34F8  0023               	movlb	3	; select bank3
 18893  34F9  086C               	movf	(_shuchu_shortout_voltage+1)^(0+384),w
 18894  34FA  0020               	movlb	0	; select bank0
 18895  34FB  00DF               	movwf	___flge@ff2+1
 18896  34FC  0023               	movlb	3	; select bank3
 18897  34FD  086B               	movf	_shuchu_shortout_voltage^(0+384),w
 18898  34FE  0020               	movlb	0	; select bank0
 18899  34FF  00DE               	movwf	___flge@ff2
 18900  3500  0008               	return
 18901  3501                     __end_ofPL132:	
 18902  3501                     PL134:	
 18903  3501  00B4               	movwf	___flmul@f1
 18904  3502  0025               	movlb	5	; select bank5
 18905  3503  086B               	movf	(handle_ad_loop@data_cc_var+3)^(0+640),w
 18906  3504  0020               	movlb	0	; select bank0
 18907  3505  00BB               	movwf	___flmul@f2+3
 18908  3506  0025               	movlb	5	; select bank5
 18909  3507  086A               	movf	(handle_ad_loop@data_cc_var+2)^(0+640),w
 18910  3508  0020               	movlb	0	; select bank0
 18911  3509  00BA               	movwf	___flmul@f2+2
 18912  350A  0025               	movlb	5	; select bank5
 18913  350B  0869               	movf	(handle_ad_loop@data_cc_var+1)^(0+640),w
 18914  350C  0020               	movlb	0	; select bank0
 18915  350D  00B9               	movwf	___flmul@f2+1
 18916  350E  0025               	movlb	5	; select bank5
 18917  350F  0868               	movf	handle_ad_loop@data_cc_var^(0+640),w
 18918  3510  0008               	return
 18919  3511                     __end_ofPL134:	
 18920  3511                     PL136:	
 18921  3511  084A               	movf	?___fldiv+3,w
 18922  3512  0023               	movlb	3	; select bank3
 18923  3513  00CA               	movwf	(_PID_CC_discharge+3)^(0+384)
 18924  3514  0020               	movlb	0	; select bank0
 18925  3515  0849               	movf	?___fldiv+2,w
 18926  3516  0023               	movlb	3	; select bank3
 18927  3517  00C9               	movwf	(_PID_CC_discharge+2)^(0+384)
 18928  3518  0020               	movlb	0	; select bank0
 18929  3519  0848               	movf	?___fldiv+1,w
 18930  351A  0023               	movlb	3	; select bank3
 18931  351B  00C8               	movwf	(_PID_CC_discharge+1)^(0+384)
 18932  351C  0020               	movlb	0	; select bank0
 18933  351D  0847               	movf	?___fldiv,w
 18934  351E  0023               	movlb	3	; select bank3
 18935  351F  00C7               	movwf	_PID_CC_discharge^(0+384)
 18936  3520  0008               	return
 18937  3521                     __end_ofPL136:	
 18938  3521                     PL142:	
 18939  3521  0023               	movlb	3	; select bank3
 18940  3522  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 18941  3523  0020               	movlb	0	; select bank0
 18942  3524  00BB               	movwf	___flmul@f2+3
 18943  3525  0023               	movlb	3	; select bank3
 18944  3526  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 18945  3527  0020               	movlb	0	; select bank0
 18946  3528  00BA               	movwf	___flmul@f2+2
 18947  3529  0023               	movlb	3	; select bank3
 18948  352A  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 18949  352B  0020               	movlb	0	; select bank0
 18950  352C  00B9               	movwf	___flmul@f2+1
 18951  352D  0023               	movlb	3	; select bank3
 18952  352E  0847               	movf	_PID_CC_discharge^(0+384),w
 18953  352F  0008               	return
 18954  3530                     __end_ofPL142:	
 18955  3530                     PL168:	
 18956  3530  01C2               	clrf	_index_02_count^(0+512)
 18957  3531  01C3               	clrf	(_index_02_count+1)^(0+512)
 18958  3532  01C4               	clrf	_index_03_count^(0+512)
 18959  3533  01C5               	clrf	(_index_03_count+1)^(0+512)
 18960  3534  01C6               	clrf	_index_04_count^(0+512)
 18961  3535  01C7               	clrf	(_index_04_count+1)^(0+512)
 18962  3536  01C8               	clrf	_index_05_count^(0+512)
 18963  3537  01C9               	clrf	(_index_05_count+1)^(0+512)
 18964  3538  0008               	return
 18965  3539                     __end_ofPL168:	
 18966  3539                     PL180:	
 18967  3539  00A5               	movwf	___wmul@multiplicand
 18968  353A  01A6               	clrf	___wmul@multiplicand+1
 18969  353B  0021               	movlb	1	; select bank1
 18970  353C  084F               	movf	(_load_voltage_value+1)^(0+128),w
 18971  353D  0020               	movlb	0	; select bank0
 18972  353E  00A4               	movwf	___wmul@multiplier+1
 18973  353F  0021               	movlb	1	; select bank1
 18974  3540  084E               	movf	_load_voltage_value^(0+128),w
 18975  3541  0020               	movlb	0	; select bank0
 18976  3542  00A3               	movwf	___wmul@multiplier
 18977  3543  0008               	return
 18978  3544                     __end_ofPL180:	
 18979  3544                     PL192:	
 18980  3544  01C6               	clrf	_index_04_count^(0+512)
 18981  3545  01C7               	clrf	(_index_04_count+1)^(0+512)
 18982  3546  01C8               	clrf	_index_05_count^(0+512)
 18983  3547  01C9               	clrf	(_index_05_count+1)^(0+512)
 18984  3548  01CA               	clrf	_index_06_count^(0+512)
 18985  3549  01CB               	clrf	(_index_06_count+1)^(0+512)
 18986  354A  0008               	return
 18987  354B                     __end_ofPL192:	
 18988  354B                     PL208:	
 18989  354B  084A               	movf	?___fladd+3,w
 18990  354C  00E1               	movwf	___flge@ff2+3
 18991  354D  0849               	movf	?___fladd+2,w
 18992  354E  00E0               	movwf	___flge@ff2+2
 18993  354F  0848               	movf	?___fladd+1,w
 18994  3550  00DF               	movwf	___flge@ff2+1
 18995  3551  0847               	movf	?___fladd,w
 18996  3552  00DE               	movwf	___flge@ff2
 18997  3553  0008               	return
 18998  3554                     __end_ofPL208:	
 18999  3554                     PL210:	
 19000  3554  0824               	movf	?___wmul+1,w
 19001  3555  00AC               	movwf	___lwdiv@dividend+1
 19002  3556  0823               	movf	?___wmul,w
 19003  3557  00AB               	movwf	___lwdiv@dividend
 19004  3558  30E8               	movlw	232
 19005  3559  00A9               	movwf	___lwdiv@divisor
 19006  355A  3003               	movlw	3
 19007  355B  00AA               	movwf	___lwdiv@divisor+1
 19008  355C  0008               	return
 19009  355D                     __end_ofPL210:	
 19010  355D                     PL212:	
 19011  355D  0837               	movf	?___flmul+3,w
 19012  355E  00E1               	movwf	___flge@ff2+3
 19013  355F  0836               	movf	?___flmul+2,w
 19014  3560  00E0               	movwf	___flge@ff2+2
 19015  3561  0835               	movf	?___flmul+1,w
 19016  3562  00DF               	movwf	___flge@ff2+1
 19017  3563  0834               	movf	?___flmul,w
 19018  3564  00DE               	movwf	___flge@ff2
 19019  3565  0008               	return
 19020  3566                     __end_ofPL212:	
 19021  3566                     PL214:	
 19022  3566  3005               	movlw	5
 19023  3567  00A5               	movwf	___wmul@multiplicand
 19024  3568  01A6               	clrf	___wmul@multiplicand+1
 19025  3569  0021               	movlb	1	; select bank1
 19026  356A  086D               	movf	_volt_id^(0+128),w
 19027  356B  0020               	movlb	0	; select bank0
 19028  356C  00A3               	movwf	___wmul@multiplier
 19029  356D  01A4               	clrf	___wmul@multiplier+1
 19030  356E  0008               	return
 19031  356F                     __end_ofPL214:	
 19032  356F                     PL216:	
 19033  356F  0020               	movlb	0	; select bank0
 19034  3570  00B7               	movwf	___flmul@f1+3
 19035  3571  304C               	movlw	76
 19036  3572  00B6               	movwf	___flmul@f1+2
 19037  3573  30CC               	movlw	204
 19038  3574  00B5               	movwf	___flmul@f1+1
 19039  3575  34CD               	retlw	205
 19040  3576                     __end_ofPL216:	
 19041  3576                     PL218:	
 19042  3576  3002               	movlw	2
 19043  3577  01B4               	clrf	_night_time_count^(0+512)
 19044  3578  01B5               	clrf	(_night_time_count+1)^(0+512)
 19045  3579  01B6               	clrf	(_night_time_count+2)^(0+512)
 19046  357A  01B7               	clrf	(_night_time_count+3)^(0+512)
 19047  357B  0022               	movlb	2	; select bank2
 19048  357C  00C2               	movwf	_pv_voltage_status^(0+256)
 19049  357D  0008               	return
 19050  357E                     __end_ofPL218:	
 19051  357E                     PL226:	
 19052  357E  0021               	movlb	1	; select bank1
 19053  357F  0865               	movf	_step_01_time_limit^(0+128),w
 19054  3580  0767               	addwf	_step_02_time_limit^(0+128),w
 19055  3581  0769               	addwf	_step_03_time_limit^(0+128),w
 19056  3582  0022               	movlb	2	; select bank2
 19057  3583  0008               	return
 19058  3584                     __end_ofPL226:	
 19059  3584                     PL238:	
 19060  3584  01A8               	clrf	_pv_time_count^(0+640)
 19061  3585  01A9               	clrf	(_pv_time_count+1)^(0+640)
 19062  3586  01AA               	clrf	(_pv_time_count+2)^(0+640)
 19063  3587  01AB               	clrf	(_pv_time_count+3)^(0+640)
 19064  3588  0022               	movlb	2	; select bank2
 19065  3589  01C2               	clrf	_pv_voltage_status^(0+256)
 19066  358A  0008               	return
 19067  358B                     __end_ofPL238:	
 19068  358B                     PL242:	
 19069  358B  0AB4               	incf	_load_short_time_count^(0+384),f
 19070  358C  1903               	skipnz
 19071  358D  0AB5               	incf	(_load_short_time_count+1)^(0+384),f
 19072  358E  3000               	movlw	0
 19073  358F  0235               	subwf	(_load_short_time_count+1)^(0+384),w
 19074  3590  3465               	retlw	101
 19075  3591                     __end_ofPL242:	
 19076  3591                     PL252:	
 19077  3591  0020               	movlb	0	; select bank0
 19078  3592  01A3               	clrf	delay_ms@count
 19079  3593  0AA3               	incf	delay_ms@count,f
 19080  3594  01A4               	clrf	delay_ms@count+1
 19081  3595  0008               	return
 19082  3596                     __end_ofPL252:	
 19083  3596                     PL262:	
 19084  3596  0824               	movf	?___wmul+1,w
 19085  3597  00AE               	movwf	___awtofl@c+1
 19086  3598  0823               	movf	?___wmul,w
 19087  3599  00AD               	movwf	___awtofl@c
 19088  359A  0008               	return
 19089  359B                     __end_ofPL262:	
 19090  359B                     PL268:	
 19091  359B  082A               	movf	?___lwdiv+1,w
 19092  359C  00B1               	movwf	___lwtofl@c+1
 19093  359D  0829               	movf	?___lwdiv,w
 19094  359E  00B0               	movwf	___lwtofl@c
 19095  359F  0008               	return
 19096  35A0                     __end_ofPL268:	
 19097  35A0                     PL274:	
 19098  35A0  01C7               	clrf	_PID_CC_discharge^(0+384)
 19099  35A1  01C8               	clrf	(_PID_CC_discharge+1)^(0+384)
 19100  35A2  01C9               	clrf	(_PID_CC_discharge+2)^(0+384)
 19101  35A3  01CA               	clrf	(_PID_CC_discharge+3)^(0+384)
 19102  35A4  0008               	return
 19103  35A5                     __end_ofPL274:	
 19104                           
 19105                           	psect	text11_split_3
 19106  1176                     l17482:	
 19107                           
 19108                           ;task.c: 492: handle_an3_process_flag=0x00;
 19109  1176  0022               	movlb	2	; select bank2
 19110  1177  01AC               	clrf	_handle_an3_process_flag^(0+256)
 19111  1178                     l17484:	
 19112                           
 19113                           ;task.c: 494: }
 19114                           ;task.c: 498: if(handle_an4_process_flag==0x01)
 19115  1178  0B2D               	decfsz	_handle_an4_process_flag^(0+256),w
 19116  1179  2A84               	goto	l17566
 19117                           
 19118                           ;task.c: 499: {
 19119                           ;task.c: 500: load_voltage_value=0x00;
 19120  117A  0021               	movlb	1	; select bank1
 19121  117B  01CE               	clrf	_load_voltage_value^(0+128)
 19122  117C  01CF               	clrf	(_load_voltage_value+1)^(0+128)
 19123                           
 19124                           ;task.c: 502: if(system_status == 0x02)
 19125  117D  0858               	movf	_system_status^(0+128),w
 19126  117E  3A02               	xorlw	2
 19127  117F  1D03               	skipz
 19128  1180  2A82               	goto	l1341
 19129                           
 19130                           ;task.c: 503: {
 19131                           ;task.c: 504: load_voltage_value=start_ad_convert(0b00100);
 19132  1181  3004               	movlw	4
 19133  1182  31B5  25A5  3191   	fcall	_start_ad_convert
 19134  1185  0831               	movf	?_start_ad_convert+1,w
 19135  1186  0021               	movlb	1	; select bank1
 19136  1187  00CF               	movwf	(_load_voltage_value+1)^(0+128)
 19137  1188  0020               	movlb	0	; select bank0
 19138  1189  0830               	movf	?_start_ad_convert,w
 19139  118A  0021               	movlb	1	; select bank1
 19140  118B  00CE               	movwf	_load_voltage_value^(0+128)
 19141                           
 19142                           ;task.c: 507: if((load_voltage_value<shuchu_shortout_voltage)&&(discharge_index==0x02)&&
      +                          (PID_CC_discharge.SetPoint>0))
 19143  118C  31B4  24BE  3191   	fcall	PL106	;call to abstracted procedure
 19144  118F  319B  231C  3191   	fcall	___lwtofl
 19145  1192  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 19146  1195  31B4  24F0  3191   	fcall	PL132	;call to abstracted procedure
 19147  1198  319D  25DA  3191   	fcall	___flge
 19148  119B  1803               	btfsc	3,0
 19149  119C  29C9               	goto	l17514
 19150  119D  0021               	movlb	1	; select bank1
 19151  119E  0854               	movf	_discharge_index^(0+128),w
 19152  119F  3A02               	xorlw	2
 19153  11A0  1D03               	skipz
 19154  11A1  29C9               	goto	l17514
 19155  11A2  0020               	movlb	0	; select bank0
 19156  11A3  31B4  245C  3191   	fcall	PL86	;call to abstracted procedure
 19157  11A6  319D  25DA  3191   	fcall	___flge
 19158  11A9  1803               	btfsc	3,0
 19159  11AA  29C9               	goto	l17514
 19160                           
 19161                           ;task.c: 508: {
 19162                           ;task.c: 509: load_short_time_count++;
 19163  11AB  0023               	movlb	3	; select bank3
 19164                           
 19165                           ;task.c: 511: if(load_short_time_count>100)
 19166  11AC  31B5  258B  3191   	fcall	PL242	;call to abstracted procedure
 19167  11AF  1903               	skipnz
 19168  11B0  0234               	subwf	_load_short_time_count^(0+384),w
 19169  11B1  1C03               	skipc
 19170  11B2  2A36               	goto	l17542
 19171  11B3  3002               	movlw	2
 19172                           
 19173                           ;task.c: 512: {
 19174                           ;task.c: 513: load_short_time_count=0x00;
 19175  11B4  01B4               	clrf	_load_short_time_count^(0+384)
 19176  11B5  01B5               	clrf	(_load_short_time_count+1)^(0+384)
 19177                           
 19178                           ;task.c: 515: bost_pwm_value=2;
 19179  11B6  0021               	movlb	1	; select bank1
 19180                           
 19181                           ;task.c: 519: discharge_led_status=0x00;
 19182  11B7  31B3  23D2  3191   	fcall	PL54	;call to abstracted procedure
 19183  11BA  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 19184                           
 19185                           ;task.c: 521: delay_ms(1);
 19186  11BD  31B5  2591  3191   	fcall	PL252	;call to abstracted procedure
 19187  11C0  318B  233D  3191   	fcall	_delay_ms
 19188                           
 19189                           ;task.c: 523: Disable_Bost_Pwm();
 19190  11C3  318B  2362  3191   	fcall	_Disable_Bost_Pwm
 19191                           
 19192                           ;task.c: 525: (LATCbits.LATC3 = 0x00);
 19193  11C6  0022               	movlb	2	; select bank2
 19194  11C7  118E               	bcf	14,3	;volatile
 19195  11C8                     l1344:	
 19196                           ;task.c: 527: while(1);
 19197                           
 19198  11C8  29C8               	goto	l1344
 19199  11C9                     l17514:	
 19200                           
 19201                           ;task.c: 531: else if((load_voltage_value>=shuchu_shortout_voltage)&&(load_voltage_value
      +                          <(shuchu_shortout_voltage*2))&&(discharge_index==0x02)&&(PID_CC_discharge.SetPoint>0))
 19202  11C9  0021               	movlb	1	; select bank1
 19203  11CA  31B4  24BE  3191   	fcall	PL106	;call to abstracted procedure
 19204  11CD  319B  231C  3191   	fcall	___lwtofl
 19205  11D0  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 19206  11D3  31B4  24F0  3191   	fcall	PL132	;call to abstracted procedure
 19207  11D6  319D  25DA  3191   	fcall	___flge
 19208  11D9  1C03               	btfss	3,0
 19209  11DA  2A33               	goto	l17540
 19210  11DB  0021               	movlb	1	; select bank1
 19211  11DC  31B4  24BE  3191   	fcall	PL106	;call to abstracted procedure
 19212  11DF  319B  231C  3191   	fcall	___lwtofl
 19213  11E2  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 19214  11E5  0023               	movlb	3	; select bank3
 19215  11E6  086E               	movf	(_shuchu_shortout_voltage+3)^(0+384),w
 19216  11E7  0020               	movlb	0	; select bank0
 19217  11E8  00BB               	movwf	___flmul@f2+3
 19218  11E9  0023               	movlb	3	; select bank3
 19219  11EA  086D               	movf	(_shuchu_shortout_voltage+2)^(0+384),w
 19220  11EB  0020               	movlb	0	; select bank0
 19221  11EC  00BA               	movwf	___flmul@f2+2
 19222  11ED  0023               	movlb	3	; select bank3
 19223  11EE  086C               	movf	(_shuchu_shortout_voltage+1)^(0+384),w
 19224  11EF  0020               	movlb	0	; select bank0
 19225  11F0  00B9               	movwf	___flmul@f2+1
 19226  11F1  0023               	movlb	3	; select bank3
 19227  11F2  086B               	movf	_shuchu_shortout_voltage^(0+384),w
 19228  11F3  0020               	movlb	0	; select bank0
 19229  11F4  00B8               	movwf	___flmul@f2
 19230  11F5  3040               	movlw	64
 19231  11F6  00B7               	movwf	___flmul@f1+3
 19232  11F7  01B6               	clrf	___flmul@f1+2
 19233  11F8  01B5               	clrf	___flmul@f1+1
 19234  11F9  01B4               	clrf	___flmul@f1
 19235  11FA  31A2  22FC  3191   	fcall	___flmul
 19236  11FD  31B5  255D  3191   	fcall	PL212	;call to abstracted procedure
 19237  1200  319D  25DA  3191   	fcall	___flge
 19238  1203  1803               	btfsc	3,0
 19239  1204  2A33               	goto	l17540
 19240  1205  0021               	movlb	1	; select bank1
 19241  1206  0854               	movf	_discharge_index^(0+128),w
 19242  1207  3A02               	xorlw	2
 19243  1208  1D03               	skipz
 19244  1209  2A33               	goto	l17540
 19245  120A  0020               	movlb	0	; select bank0
 19246  120B  31B4  245C  3191   	fcall	PL86	;call to abstracted procedure
 19247  120E  319D  25DA  3191   	fcall	___flge
 19248  1211  1803               	btfsc	3,0
 19249  1212  2A33               	goto	l17540
 19250                           
 19251                           ;task.c: 532: {
 19252                           ;task.c: 533: load_short_time_count++;
 19253  1213  0023               	movlb	3	; select bank3
 19254                           
 19255                           ;task.c: 535: if(load_short_time_count>100)
 19256  1214  31B5  258B  3191   	fcall	PL242	;call to abstracted procedure
 19257  1217  1903               	skipnz
 19258  1218  0234               	subwf	_load_short_time_count^(0+384),w
 19259  1219  1C03               	skipc
 19260  121A  2A36               	goto	l17542
 19261  121B  3003               	movlw	3
 19262                           
 19263                           ;task.c: 536: {
 19264                           ;task.c: 537: load_short_time_count=0x00;
 19265  121C  01B4               	clrf	_load_short_time_count^(0+384)
 19266  121D  01B5               	clrf	(_load_short_time_count+1)^(0+384)
 19267                           
 19268                           ;task.c: 539: discharge_index=0x03;
 19269  121E  0021               	movlb	1	; select bank1
 19270  121F  00D4               	movwf	_discharge_index^(0+128)
 19271                           
 19272                           ;task.c: 541: bost_pwm_value=2;
 19273  1220  3002               	movlw	2
 19274                           
 19275                           ;task.c: 545: discharge_led_status=0x00;
 19276  1221  31B3  23D2  3191   	fcall	PL54	;call to abstracted procedure
 19277  1224  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 19278                           
 19279                           ;task.c: 547: delay_ms(1);
 19280  1227  31B5  2591  3191   	fcall	PL252	;call to abstracted procedure
 19281  122A  318B  233D  3191   	fcall	_delay_ms
 19282                           
 19283                           ;task.c: 549: Disable_Bost_Pwm();
 19284  122D  318B  2362  3191   	fcall	_Disable_Bost_Pwm
 19285                           
 19286                           ;task.c: 551: (LATCbits.LATC3 = 0x00);
 19287  1230  0022               	movlb	2	; select bank2
 19288  1231  118E               	bcf	14,3	;volatile
 19289  1232                     l1350:	
 19290                           ;task.c: 553: while(1);
 19291                           
 19292  1232  2A32               	goto	l1350
 19293  1233                     l17540:	
 19294                           
 19295                           ;task.c: 557: else
 19296                           ;task.c: 558: {
 19297                           ;task.c: 559: load_short_time_count=0x00;
 19298  1233  0023               	movlb	3	; select bank3
 19299  1234  01B4               	clrf	_load_short_time_count^(0+384)
 19300  1235  01B5               	clrf	(_load_short_time_count+1)^(0+384)
 19301  1236                     l17542:	
 19302                           
 19303                           ;task.c: 560: }
 19304                           ;task.c: 563: if((load_voltage_value>shuchu_open_voltage)&&(discharge_index==0x02))
 19305  1236  0025               	movlb	5	; select bank5
 19306  1237  0867               	movf	(_shuchu_open_voltage+3)^(0+640),w
 19307  1238  0020               	movlb	0	; select bank0
 19308  1239  00DD               	movwf	___flge@ff1+3
 19309  123A  0025               	movlb	5	; select bank5
 19310  123B  0866               	movf	(_shuchu_open_voltage+2)^(0+640),w
 19311  123C  0020               	movlb	0	; select bank0
 19312  123D  00DC               	movwf	___flge@ff1+2
 19313  123E  0025               	movlb	5	; select bank5
 19314  123F  0865               	movf	(_shuchu_open_voltage+1)^(0+640),w
 19315  1240  0020               	movlb	0	; select bank0
 19316  1241  00DB               	movwf	___flge@ff1+1
 19317  1242  0025               	movlb	5	; select bank5
 19318  1243  0864               	movf	_shuchu_open_voltage^(0+640),w
 19319  1244  0020               	movlb	0	; select bank0
 19320  1245  00DA               	movwf	___flge@ff1
 19321  1246  0021               	movlb	1	; select bank1
 19322  1247  31B4  24BE  3191   	fcall	PL106	;call to abstracted procedure
 19323  124A  319B  231C  3191   	fcall	___lwtofl
 19324  124D  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19325  1250  319D  25DA  3191   	fcall	___flge
 19326  1253  1803               	btfsc	3,0
 19327  1254  2A7F               	goto	l17564
 19328  1255  0021               	movlb	1	; select bank1
 19329  1256  0854               	movf	_discharge_index^(0+128),w
 19330  1257  3A02               	xorlw	2
 19331  1258  1D03               	skipz
 19332  1259  2A7F               	goto	l17564
 19333                           
 19334                           ;task.c: 564: {
 19335                           ;task.c: 565: load_open_time_count++;
 19336  125A  0024               	movlb	4	; select bank4
 19337  125B  0ACE               	incf	_load_open_time_count^(0+512),f
 19338  125C  1903               	skipnz
 19339  125D  0ACF               	incf	(_load_open_time_count+1)^(0+512),f
 19340                           
 19341                           ;task.c: 567: if(load_open_time_count>100)
 19342  125E  3000               	movlw	0
 19343  125F  024F               	subwf	(_load_open_time_count+1)^(0+512),w
 19344  1260  3065               	movlw	101
 19345  1261  1903               	skipnz
 19346  1262  024E               	subwf	_load_open_time_count^(0+512),w
 19347  1263  1C03               	skipc
 19348  1264  2A82               	goto	l1341
 19349                           
 19350                           ;task.c: 568: {
 19351                           ;task.c: 569: discharge_index=0x03;
 19352  1265  3003               	movlw	3
 19353  1266  0021               	movlb	1	; select bank1
 19354  1267  00D4               	movwf	_discharge_index^(0+128)
 19355                           
 19356                           ;task.c: 571: load_open_time_count=0x00;
 19357  1268  0024               	movlb	4	; select bank4
 19358  1269  3005               	movlw	5
 19359  126A  01CE               	clrf	_load_open_time_count^(0+512)
 19360  126B  01CF               	clrf	(_load_open_time_count+1)^(0+512)
 19361                           
 19362                           ;task.c: 573: bost_pwm_value=5;
 19363  126C  0021               	movlb	1	; select bank1
 19364                           
 19365                           ;task.c: 577: discharge_led_status=0x00;
 19366  126D  31B3  23D2  3191   	fcall	PL54	;call to abstracted procedure
 19367  1270  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 19368                           
 19369                           ;task.c: 579: delay_ms(1);
 19370  1273  31B5  2591  3191   	fcall	PL252	;call to abstracted procedure
 19371  1276  318B  233D  3191   	fcall	_delay_ms
 19372                           
 19373                           ;task.c: 581: Disable_Bost_Pwm();
 19374  1279  318B  2362  3191   	fcall	_Disable_Bost_Pwm
 19375                           
 19376                           ;task.c: 583: (LATCbits.LATC3 = 0x00);
 19377  127C  0022               	movlb	2	; select bank2
 19378  127D  118E               	bcf	14,3	;volatile
 19379  127E                     l1356:	
 19380                           ;task.c: 585: while(1);
 19381                           
 19382  127E  2A7E               	goto	l1356
 19383  127F                     l17564:	
 19384                           
 19385                           ;task.c: 589: else
 19386                           ;task.c: 590: {
 19387                           ;task.c: 591: load_open_time_count=0x00;
 19388  127F  0024               	movlb	4	; select bank4
 19389  1280  01CE               	clrf	_load_open_time_count^(0+512)
 19390  1281  01CF               	clrf	(_load_open_time_count+1)^(0+512)
 19391  1282                     l1341:	
 19392                           
 19393                           ;task.c: 592: }
 19394                           ;task.c: 595: }
 19395                           ;task.c: 597: handle_an4_process_flag=0x00;
 19396  1282  0022               	movlb	2	; select bank2
 19397  1283  01AD               	clrf	_handle_an4_process_flag^(0+256)
 19398  1284                     l17566:	
 19399                           
 19400                           ;task.c: 599: }
 19401                           ;task.c: 603: if(handle_an10_process_flag==0x01)
 19402  1284  0B29               	decfsz	_handle_an10_process_flag^(0+256),w
 19403  1285  0008               	return
 19404                           
 19405                           ;task.c: 604: {
 19406                           ;task.c: 605: discharge_current_value=0x00;
 19407  1286  0021               	movlb	1	; select bank1
 19408  1287  01CA               	clrf	_discharge_current_value^(0+128)
 19409  1288  01CB               	clrf	(_discharge_current_value+1)^(0+128)
 19410                           
 19411                           ;task.c: 607: if(system_status == 0x02)
 19412  1289  0858               	movf	_system_status^(0+128),w
 19413  128A  3A02               	xorlw	2
 19414  128B  1D03               	skipz
 19415  128C  2FFD               	goto	l1361
 19416                           
 19417                           ;task.c: 608: {
 19418                           ;task.c: 609: discharge_current_value=start_ad_convert(0b01010);
 19419  128D  300A               	movlw	10
 19420  128E  31B5  25A5  3191   	fcall	_start_ad_convert
 19421  1291  0831               	movf	?_start_ad_convert+1,w
 19422  1292  0021               	movlb	1	; select bank1
 19423  1293  00CB               	movwf	(_discharge_current_value+1)^(0+128)
 19424  1294  0020               	movlb	0	; select bank0
 19425  1295  0830               	movf	?_start_ad_convert,w
 19426  1296  0021               	movlb	1	; select bank1
 19427  1297  00CA               	movwf	_discharge_current_value^(0+128)
 19428                           
 19429                           ;task.c: 611: if((discharge_current_value>discharge_i_baohu)&&(discharge_index==0x02))
 19430  1298  0025               	movlb	5	; select bank5
 19431  1299  0857               	movf	(_discharge_i_baohu+3)^(0+640),w
 19432  129A  0020               	movlb	0	; select bank0
 19433  129B  00DD               	movwf	___flge@ff1+3
 19434  129C  0025               	movlb	5	; select bank5
 19435  129D  0856               	movf	(_discharge_i_baohu+2)^(0+640),w
 19436  129E  0020               	movlb	0	; select bank0
 19437  129F  00DC               	movwf	___flge@ff1+2
 19438  12A0  0025               	movlb	5	; select bank5
 19439  12A1  0855               	movf	(_discharge_i_baohu+1)^(0+640),w
 19440  12A2  0020               	movlb	0	; select bank0
 19441  12A3  00DB               	movwf	___flge@ff1+1
 19442  12A4  0025               	movlb	5	; select bank5
 19443  12A5  0854               	movf	_discharge_i_baohu^(0+640),w
 19444  12A6  0020               	movlb	0	; select bank0
 19445  12A7  00DA               	movwf	___flge@ff1
 19446  12A8  0021               	movlb	1	; select bank1
 19447  12A9  084B               	movf	(_discharge_current_value+1)^(0+128),w
 19448  12AA  0020               	movlb	0	; select bank0
 19449  12AB  00B1               	movwf	___lwtofl@c+1
 19450  12AC  0021               	movlb	1	; select bank1
 19451  12AD  084A               	movf	_discharge_current_value^(0+128),w
 19452  12AE  0020               	movlb	0	; select bank0
 19453  12AF  00B0               	movwf	___lwtofl@c
 19454  12B0  319B  231C  3191   	fcall	___lwtofl
 19455  12B3  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19456  12B6  319D  25DA  3191   	fcall	___flge
 19457  12B9  1803               	btfsc	3,0
 19458  12BA  2AE4               	goto	l17594
 19459  12BB  0021               	movlb	1	; select bank1
 19460  12BC  0854               	movf	_discharge_index^(0+128),w
 19461  12BD  3A02               	xorlw	2
 19462  12BE  1D03               	skipz
 19463  12BF  2AE4               	goto	l17594
 19464                           
 19465                           ;task.c: 612: {
 19466                           ;task.c: 613: over_load_time_count++;
 19467  12C0  0024               	movlb	4	; select bank4
 19468  12C1  0AD2               	incf	_over_load_time_count^(0+512),f
 19469  12C2  1903               	skipnz
 19470  12C3  0AD3               	incf	(_over_load_time_count+1)^(0+512),f
 19471                           
 19472                           ;task.c: 615: if(over_load_time_count>1000)
 19473  12C4  3003               	movlw	3
 19474  12C5  0253               	subwf	(_over_load_time_count+1)^(0+512),w
 19475  12C6  30E9               	movlw	233
 19476  12C7  1903               	skipnz
 19477  12C8  0252               	subwf	_over_load_time_count^(0+512),w
 19478  12C9  1C03               	skipc
 19479  12CA  2AE7               	goto	l17596
 19480                           
 19481                           ;task.c: 616: {
 19482                           ;task.c: 617: discharge_index=0x03;
 19483  12CB  3003               	movlw	3
 19484  12CC  0021               	movlb	1	; select bank1
 19485  12CD  00D4               	movwf	_discharge_index^(0+128)
 19486                           
 19487                           ;task.c: 619: bost_pwm_value=2;
 19488  12CE  3002               	movlw	2
 19489                           
 19490                           ;task.c: 621: Set_Bost_Pwm_Duty(bost_pwm_value);
 19491  12CF  31B3  23D2  3191   	fcall	PL54	;call to abstracted procedure
 19492  12D2  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 19493                           
 19494                           ;task.c: 623: delay_ms(1);
 19495  12D5  31B5  2591  3191   	fcall	PL252	;call to abstracted procedure
 19496  12D8  318B  233D  3191   	fcall	_delay_ms
 19497                           
 19498                           ;task.c: 625: Disable_Bost_Pwm();
 19499  12DB  318B  2362  3191   	fcall	_Disable_Bost_Pwm
 19500                           
 19501                           ;task.c: 627: (LATCbits.LATC3 = 0x00);
 19502  12DE  0022               	movlb	2	; select bank2
 19503  12DF  118E               	bcf	14,3	;volatile
 19504                           
 19505                           ;task.c: 631: discharge_led_status=0x00;
 19506  12E0  0024               	movlb	4	; select bank4
 19507  12E1  01D2               	clrf	_over_load_time_count^(0+512)
 19508  12E2  01D3               	clrf	(_over_load_time_count+1)^(0+512)
 19509  12E3                     l1364:	
 19510                           ;task.c: 633: while(1);
 19511                           
 19512  12E3  2AE3               	goto	l1364
 19513  12E4                     l17594:	
 19514                           
 19515                           ;task.c: 637: else
 19516                           ;task.c: 638: {
 19517                           ;task.c: 639: over_load_time_count=0x00;
 19518  12E4  0024               	movlb	4	; select bank4
 19519  12E5  01D2               	clrf	_over_load_time_count^(0+512)
 19520  12E6  01D3               	clrf	(_over_load_time_count+1)^(0+512)
 19521  12E7                     l17596:	
 19522                           
 19523                           ;task.c: 640: }
 19524                           ;task.c: 642: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge_index==0x01))
 19525  12E7  31B4  2471  3191   	fcall	PL90	;call to abstracted procedure
 19526  12EA  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19527  12ED  319B  231C  3191   	fcall	___lwtofl
 19528  12F0  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19529  12F3  319D  25DA  3191   	fcall	___flge
 19530  12F6  1803               	btfsc	3,0
 19531  12F7  2AFD               	goto	l17608
 19532  12F8  0021               	movlb	1	; select bank1
 19533  12F9  0B54               	decfsz	_discharge_index^(0+128),w
 19534  12FA  2AFD               	goto	l17608
 19535                           
 19536                           ;task.c: 646: discharge_led_status=0x01;
 19537  12FB  3002               	movlw	2
 19538  12FC  2B26               	goto	L27
 19539  12FD                     l17608:	
 19540                           ;task.c: 654: }
 19541                           
 19542                           
 19543                           ;task.c: 655: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge_index==0
      +                          x01))
 19544  12FD  31B4  2471  3191   	fcall	PL90	;call to abstracted procedure
 19545  1300  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19546  1303  319B  231C  3191   	fcall	___lwtofl
 19547  1306  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19548  1309  319D  25DA  3191   	fcall	___flge
 19549  130C  1C03               	btfss	3,0
 19550  130D  2B2E               	goto	l1369
 19551  130E  0021               	movlb	1	; select bank1
 19552  130F  0B54               	decfsz	_discharge_index^(0+128),w
 19553  1310  2B2E               	goto	l1369
 19554                           
 19555                           ;task.c: 656: {
 19556                           ;task.c: 658: sys_power_ch=0x01;
 19557  1311  0022               	movlb	2	; select bank2
 19558  1312  01C7               	clrf	_sys_power_ch^(0+256)
 19559  1313  0AC7               	incf	_sys_power_ch^(0+256),f
 19560                           
 19561                           ;task.c: 660: (LATAbits.LATA6 = 0x01);
 19562  1314  170C               	bsf	12,6	;volatile
 19563                           
 19564                           ;task.c: 662: delay_ms(2000);
 19565  1315  30D0               	movlw	208
 19566  1316  0020               	movlb	0	; select bank0
 19567  1317  00A3               	movwf	delay_ms@count
 19568  1318  3007               	movlw	7
 19569  1319  00A4               	movwf	delay_ms@count+1
 19570  131A  318B  233D  3191   	fcall	_delay_ms
 19571                           
 19572                           ;task.c: 664: (LATCbits.LATC0 = 0x00);
 19573  131D  0022               	movlb	2	; select bank2
 19574  131E  100E               	bcf	14,0	;volatile
 19575                           
 19576                           ;task.c: 665: delay_1us();
 19577  131F  318D  25D7  3191   	fcall	_delay_1us
 19578                           
 19579                           ;task.c: 666: (LATAbits.LATA7 = 0x01);
 19580  1322  0022               	movlb	2	; select bank2
 19581  1323  178C               	bsf	12,7	;volatile
 19582                           
 19583                           ;task.c: 671: discharge_led_status=0x01;
 19584  1324  3002               	movlw	2
 19585  1325  0021               	movlb	1	; select bank1
 19586  1326                     L27:	
 19587  1326  00D4               	movwf	_discharge_index^(0+128)
 19588                           
 19589                           ;task.c: 648: open_discharge_time=0x01;
 19590  1327  0022               	movlb	2	; select bank2
 19591  1328  01BE               	clrf	_open_discharge_time^(0+256)
 19592  1329  0ABE               	incf	_open_discharge_time^(0+256),f
 19593                           
 19594                           ;task.c: 650: (LATCbits.LATC3 = 0x01);
 19595  132A  158E               	bsf	14,3	;volatile
 19596                           
 19597                           ;task.c: 652: Enable_Bost_Pwm();
 19598  132B  318D  25D2  3191   	fcall	_Enable_Bost_Pwm
 19599  132E                     l1369:	
 19600                           
 19601                           ;task.c: 678: }
 19602                           ;task.c: 681: if(((battery_voltage_value>=dianchi_qianya_baohu)||(sys_power_ch==0x01))&&
      +                          (discharge_index==0x02))
 19603  132E  31B4  2480  3191   	fcall	PL92	;call to abstracted procedure
 19604  1331  319B  231C  3191   	fcall	___lwtofl
 19605  1334  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 19606  1337  31B4  24DF  3191   	fcall	PL130	;call to abstracted procedure
 19607  133A  319D  25DA  3191   	fcall	___flge
 19608  133D  1803               	btfsc	3,0
 19609  133E  2B42               	goto	l17630
 19610  133F  0022               	movlb	2	; select bank2
 19611  1340  0B47               	decfsz	_sys_power_ch^(0+256),w
 19612  1341  2FCE               	goto	l17988
 19613  1342                     l17630:	
 19614  1342  0021               	movlb	1	; select bank1
 19615  1343  0854               	movf	_discharge_index^(0+128),w
 19616  1344  3A02               	xorlw	2
 19617  1345  1D03               	skipz
 19618  1346  2FCE               	goto	l17988
 19619                           
 19620                           ;task.c: 682: {
 19621                           ;task.c: 684: if((discharge_current_value<=discharge_i_limit)&&(discharge_index==0x02))
 19622  1347  0025               	movlb	5	; select bank5
 19623  1348  31B4  2423  3191   	fcall	PL74	;call to abstracted procedure
 19624  134B  319B  231C  3191   	fcall	___lwtofl
 19625  134E  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19626  1351  319D  25DA  3191   	fcall	___flge
 19627  1354  1C03               	btfss	3,0
 19628  1355  2FA6               	goto	l17976
 19629  1356  0021               	movlb	1	; select bank1
 19630  1357  0854               	movf	_discharge_index^(0+128),w
 19631  1358  3A02               	xorlw	2
 19632  1359  1D03               	skipz
 19633  135A  2FA6               	goto	l17976
 19634                           
 19635                           ;task.c: 685: {
 19636                           ;task.c: 688: t1=step_01_time_limit;
 19637  135B  0865               	movf	_step_01_time_limit^(0+128),w
 19638  135C  0022               	movlb	2	; select bank2
 19639  135D  00C9               	movwf	_t1^(0+256)
 19640                           
 19641                           ;task.c: 689: t2=step_01_time_limit+step_02_time_limit;
 19642  135E  0021               	movlb	1	; select bank1
 19643  135F  0865               	movf	_step_01_time_limit^(0+128),w
 19644  1360  0767               	addwf	_step_02_time_limit^(0+128),w
 19645  1361  0022               	movlb	2	; select bank2
 19646  1362  00CA               	movwf	_t2^(0+256)
 19647                           
 19648                           ;task.c: 690: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
 19649  1363  31B5  257E  3191   	fcall	PL226	;call to abstracted procedure
 19650  1366  00CB               	movwf	_t3^(0+256)
 19651                           
 19652                           ;task.c: 691: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit;
 19653  1367  31B5  257E  3191   	fcall	PL226	;call to abstracted procedure
 19654  136A  076B               	addwf	_step_04_time_limit^(0+256),w
 19655  136B  00CC               	movwf	_t4^(0+256)
 19656                           
 19657                           ;task.c: 692: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit+step_05_time_limit;
 19658  136C  31B5  257E  3191   	fcall	PL226	;call to abstracted procedure
 19659  136F  076B               	addwf	_step_04_time_limit^(0+256),w
 19660  1370  076D               	addwf	_step_05_time_limit^(0+256),w
 19661  1371  0023               	movlb	3	; select bank3
 19662  1372  00C5               	movwf	_t5^(0+384)
 19663                           
 19664                           ;task.c: 694: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
 19665  1373  0022               	movlb	2	; select bank2
 19666  1374  0849               	movf	_t1^(0+256),w
 19667  1375  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19668  1378  1803               	skipnc
 19669  1379  2B81               	goto	l17650
 19670  137A  3002               	movlw	2
 19671  137B  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 19672  137C  1803               	skipnc
 19673  137D  2B81               	goto	l17650
 19674                           
 19675                           ;task.c: 695: {
 19676                           ;task.c: 696: Adjust_Pout_Flag=0x01;
 19677  137E  01D2               	clrf	_Adjust_Pout_Flag^(0+128)
 19678  137F  0AD2               	incf	_Adjust_Pout_Flag^(0+128),f
 19679                           
 19680                           ;task.c: 697: }
 19681  1380  2BD3               	goto	l17684
 19682  1381                     l17650:	
 19683                           
 19684                           ;task.c: 698: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
 19685  1381  0022               	movlb	2	; select bank2
 19686  1382  0849               	movf	_t1^(0+256),w
 19687  1383  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19688  1386  1C03               	skipc
 19689  1387  2B95               	goto	l17658
 19690  1388  0022               	movlb	2	; select bank2
 19691  1389  084A               	movf	_t2^(0+256),w
 19692  138A  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19693  138D  1803               	skipnc
 19694  138E  2B95               	goto	l17658
 19695  138F  3003               	movlw	3
 19696  1390  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 19697  1391  1803               	skipnc
 19698  1392  2B95               	goto	l17658
 19699                           
 19700                           ;task.c: 699: {
 19701                           ;task.c: 700: Adjust_Pout_Flag=0x02;
 19702  1393  3002               	movlw	2
 19703  1394  2BD0               	goto	L9
 19704  1395                     l17658:	
 19705                           ;task.c: 701: }
 19706                           
 19707                           
 19708                           ;task.c: 702: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
 19709  1395  0022               	movlb	2	; select bank2
 19710  1396  084A               	movf	_t2^(0+256),w
 19711  1397  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19712  139A  1C03               	skipc
 19713  139B  2BA9               	goto	l17666
 19714  139C  0022               	movlb	2	; select bank2
 19715  139D  084B               	movf	_t3^(0+256),w
 19716  139E  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19717  13A1  1803               	skipnc
 19718  13A2  2BA9               	goto	l17666
 19719  13A3  3004               	movlw	4
 19720  13A4  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 19721  13A5  1803               	skipnc
 19722  13A6  2BA9               	goto	l17666
 19723                           
 19724                           ;task.c: 703: {
 19725                           ;task.c: 704: Adjust_Pout_Flag=0x03;
 19726  13A7  3003               	movlw	3
 19727  13A8  2BD0               	goto	L9
 19728  13A9                     l17666:	
 19729                           ;task.c: 705: }
 19730                           
 19731                           
 19732                           ;task.c: 706: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
 19733  13A9  0022               	movlb	2	; select bank2
 19734  13AA  084B               	movf	_t3^(0+256),w
 19735  13AB  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19736  13AE  1C03               	skipc
 19737  13AF  2BBD               	goto	l17674
 19738  13B0  0022               	movlb	2	; select bank2
 19739  13B1  084C               	movf	_t4^(0+256),w
 19740  13B2  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19741  13B5  1803               	skipnc
 19742  13B6  2BBD               	goto	l17674
 19743  13B7  3005               	movlw	5
 19744  13B8  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 19745  13B9  1803               	skipnc
 19746  13BA  2BBD               	goto	l17674
 19747                           
 19748                           ;task.c: 707: {
 19749                           ;task.c: 708: Adjust_Pout_Flag=0x04;
 19750  13BB  3004               	movlw	4
 19751  13BC  2BD0               	goto	L9
 19752  13BD                     l17674:	
 19753                           ;task.c: 709: }
 19754                           
 19755                           
 19756                           ;task.c: 710: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
 19757  13BD  0022               	movlb	2	; select bank2
 19758  13BE  084C               	movf	_t4^(0+256),w
 19759  13BF  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19760  13C2  1C03               	skipc
 19761  13C3  2BD2               	goto	l17682
 19762  13C4  0023               	movlb	3	; select bank3
 19763  13C5  0845               	movf	_t5^(0+384),w
 19764  13C6  31B3  23C5  3191   	fcall	PL26	;call to abstracted procedure
 19765  13C9  1803               	skipnc
 19766  13CA  2BD2               	goto	l17682
 19767  13CB  3006               	movlw	6
 19768  13CC  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 19769  13CD  1803               	skipnc
 19770  13CE  2BD2               	goto	l17682
 19771                           
 19772                           ;task.c: 711: {
 19773                           ;task.c: 712: Adjust_Pout_Flag=0x05;
 19774  13CF  3005               	movlw	5
 19775  13D0                     L9:	
 19776  13D0  00D2               	movwf	_Adjust_Pout_Flag^(0+128)
 19777                           
 19778                           ;task.c: 713: }
 19779  13D1  2BD3               	goto	l17684
 19780  13D2                     l17682:	
 19781                           
 19782                           ;task.c: 714: else
 19783                           ;task.c: 715: {
 19784                           ;task.c: 716: Adjust_Pout_Flag=0x00;
 19785  13D2  01D2               	clrf	_Adjust_Pout_Flag^(0+128)
 19786  13D3                     l17684:	
 19787                           
 19788                           ;task.c: 717: }
 19789                           ;task.c: 719: if(battery_voltage_value>bt_volt_80 && voltage_adjust_index<=0x01)
 19790  13D3  0024               	movlb	4	; select bank4
 19791  13D4  31B4  2486  3191   	fcall	PL94	;call to abstracted procedure
 19792  13D7  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19793  13DA  319B  231C  3191   	fcall	___lwtofl
 19794  13DD  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19795  13E0  319D  25DA  3191   	fcall	___flge
 19796  13E3  1803               	btfsc	3,0
 19797  13E4  2C01               	goto	l17706
 19798  13E5  3002               	movlw	2
 19799  13E6  0021               	movlb	1	; select bank1
 19800  13E7  026E               	subwf	_voltage_adjust_index^(0+128),w
 19801  13E8  1803               	skipnc
 19802  13E9  2C01               	goto	l17706
 19803                           
 19804                           ;task.c: 720: {
 19805                           ;task.c: 721: index_01_count++;
 19806  13EA  0024               	movlb	4	; select bank4
 19807  13EB  0AC0               	incf	_index_01_count^(0+512),f
 19808  13EC  1903               	skipnz
 19809  13ED  0AC1               	incf	(_index_01_count+1)^(0+512),f
 19810  13EE  3005               	movlw	5
 19811                           
 19812                           ;task.c: 722: index_02_count=0x00;
 19813                           
 19814                           ;task.c: 723: index_03_count=0x00;
 19815                           
 19816                           ;task.c: 724: index_04_count=0x00;
 19817                           
 19818                           ;task.c: 725: index_05_count=0x00;
 19819  13EF  31B5  2530  3191   	fcall	PL168	;call to abstracted procedure
 19820                           
 19821                           ;task.c: 726: index_06_count=0x00;
 19822  13F2  01CA               	clrf	_index_06_count^(0+512)
 19823  13F3  01CB               	clrf	(_index_06_count+1)^(0+512)
 19824                           
 19825                           ;task.c: 727: if(index_01_count>1500)
 19826  13F4  0241               	subwf	(_index_01_count+1)^(0+512),w
 19827  13F5  30DD               	movlw	221
 19828  13F6  1903               	skipnz
 19829  13F7  0240               	subwf	_index_01_count^(0+512),w
 19830  13F8  1C03               	skipc
 19831  13F9  2D59               	goto	l17826
 19832                           
 19833                           ;task.c: 728: {
 19834                           ;task.c: 729: voltage_adjust_index=0x01;
 19835  13FA  0021               	movlb	1	; select bank1
 19836  13FB  01EE               	clrf	_voltage_adjust_index^(0+128)
 19837  13FC  0AEE               	incf	_voltage_adjust_index^(0+128),f
 19838                           
 19839                           ;task.c: 730: index_01_count=0x00;
 19840  13FD  0024               	movlb	4	; select bank4
 19841  13FE  01C0               	clrf	_index_01_count^(0+512)
 19842  13FF  01C1               	clrf	(_index_01_count+1)^(0+512)
 19843  1400  2D59               	goto	l17826
 19844  1401                     l17706:	
 19845                           
 19846                           ;task.c: 734: else if(battery_voltage_value>bt_volt_60 && battery_voltage_value<=bt_volt
      +                          _80 && voltage_adjust_index<=0x02)
 19847  1401  0024               	movlb	4	; select bank4
 19848  1402  31B4  24A2  3191   	fcall	PL98	;call to abstracted procedure
 19849  1405  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19850  1408  319B  231C  3191   	fcall	___lwtofl
 19851  140B  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19852  140E  319D  25DA  3191   	fcall	___flge
 19853  1411  1803               	btfsc	3,0
 19854  1412  2C43               	goto	l17730
 19855  1413  0024               	movlb	4	; select bank4
 19856  1414  31B4  2486  3191   	fcall	PL94	;call to abstracted procedure
 19857  1417  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19858  141A  319B  231C  3191   	fcall	___lwtofl
 19859  141D  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19860  1420  319D  25DA  3191   	fcall	___flge
 19861  1423  1C03               	btfss	3,0
 19862  1424  2C43               	goto	l17730
 19863  1425  3003               	movlw	3
 19864  1426  0021               	movlb	1	; select bank1
 19865  1427  026E               	subwf	_voltage_adjust_index^(0+128),w
 19866  1428  1803               	skipnc
 19867  1429  2C43               	goto	l17730
 19868                           
 19869                           ;task.c: 735: {
 19870                           ;task.c: 736: index_02_count++;
 19871  142A  0024               	movlb	4	; select bank4
 19872  142B  0AC2               	incf	_index_02_count^(0+512),f
 19873  142C  1903               	skipnz
 19874  142D  0AC3               	incf	(_index_02_count+1)^(0+512),f
 19875  142E  3005               	movlw	5
 19876                           
 19877                           ;task.c: 737: index_01_count=0x00;
 19878  142F  01C0               	clrf	_index_01_count^(0+512)
 19879  1430  01C1               	clrf	(_index_01_count+1)^(0+512)
 19880                           
 19881                           ;task.c: 738: index_03_count=0x00;
 19882  1431  01C4               	clrf	_index_03_count^(0+512)
 19883  1432  01C5               	clrf	(_index_03_count+1)^(0+512)
 19884                           
 19885                           ;task.c: 739: index_04_count=0x00;
 19886                           
 19887                           ;task.c: 740: index_05_count=0x00;
 19888                           
 19889                           ;task.c: 741: index_06_count=0x00;
 19890  1433  31B5  2544  3191   	fcall	PL192	;call to abstracted procedure
 19891                           
 19892                           ;task.c: 742: if(index_02_count>1500)
 19893  1436  0243               	subwf	(_index_02_count+1)^(0+512),w
 19894  1437  30DD               	movlw	221
 19895  1438  1903               	skipnz
 19896  1439  0242               	subwf	_index_02_count^(0+512),w
 19897  143A  1C03               	skipc
 19898  143B  2D59               	goto	l17826
 19899                           
 19900                           ;task.c: 743: {
 19901                           ;task.c: 744: voltage_adjust_index=0x02;
 19902  143C  3002               	movlw	2
 19903  143D  0021               	movlb	1	; select bank1
 19904  143E  00EE               	movwf	_voltage_adjust_index^(0+128)
 19905                           
 19906                           ;task.c: 745: index_02_count=0x00;
 19907  143F  0024               	movlb	4	; select bank4
 19908  1440  01C2               	clrf	_index_02_count^(0+512)
 19909  1441  01C3               	clrf	(_index_02_count+1)^(0+512)
 19910  1442  2D59               	goto	l17826
 19911  1443                     l17730:	
 19912                           
 19913                           ;task.c: 748: else if(battery_voltage_value>bt_volt_40 && battery_voltage_value<=bt_volt
      +                          _60 && voltage_adjust_index<=0x03)
 19914  1443  0024               	movlb	4	; select bank4
 19915  1444  31B4  2494  3191   	fcall	PL96	;call to abstracted procedure
 19916  1447  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19917  144A  319B  231C  3191   	fcall	___lwtofl
 19918  144D  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19919  1450  319D  25DA  3191   	fcall	___flge
 19920  1453  1803               	btfsc	3,0
 19921  1454  2C85               	goto	l17754
 19922  1455  0024               	movlb	4	; select bank4
 19923  1456  31B4  24A2  3191   	fcall	PL98	;call to abstracted procedure
 19924  1459  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19925  145C  319B  231C  3191   	fcall	___lwtofl
 19926  145F  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19927  1462  319D  25DA  3191   	fcall	___flge
 19928  1465  1C03               	btfss	3,0
 19929  1466  2C85               	goto	l17754
 19930  1467  3004               	movlw	4
 19931  1468  0021               	movlb	1	; select bank1
 19932  1469  026E               	subwf	_voltage_adjust_index^(0+128),w
 19933  146A  1803               	skipnc
 19934  146B  2C85               	goto	l17754
 19935                           
 19936                           ;task.c: 749: {
 19937                           ;task.c: 750: index_03_count++;
 19938  146C  0024               	movlb	4	; select bank4
 19939  146D  0AC4               	incf	_index_03_count^(0+512),f
 19940  146E  1903               	skipnz
 19941  146F  0AC5               	incf	(_index_03_count+1)^(0+512),f
 19942  1470  3005               	movlw	5
 19943                           
 19944                           ;task.c: 751: index_02_count=0x00;
 19945  1471  01C2               	clrf	_index_02_count^(0+512)
 19946  1472  01C3               	clrf	(_index_02_count+1)^(0+512)
 19947                           
 19948                           ;task.c: 752: index_01_count=0x00;
 19949  1473  01C0               	clrf	_index_01_count^(0+512)
 19950  1474  01C1               	clrf	(_index_01_count+1)^(0+512)
 19951                           
 19952                           ;task.c: 753: index_04_count=0x00;
 19953                           
 19954                           ;task.c: 754: index_05_count=0x00;
 19955                           
 19956                           ;task.c: 755: index_06_count=0x00;
 19957  1475  31B5  2544  3191   	fcall	PL192	;call to abstracted procedure
 19958                           
 19959                           ;task.c: 756: if(index_03_count>1500)
 19960  1478  0245               	subwf	(_index_03_count+1)^(0+512),w
 19961  1479  30DD               	movlw	221
 19962  147A  1903               	skipnz
 19963  147B  0244               	subwf	_index_03_count^(0+512),w
 19964  147C  1C03               	skipc
 19965  147D  2D59               	goto	l17826
 19966                           
 19967                           ;task.c: 757: {
 19968                           ;task.c: 758: voltage_adjust_index=0x03;
 19969  147E  3003               	movlw	3
 19970  147F  0021               	movlb	1	; select bank1
 19971  1480  00EE               	movwf	_voltage_adjust_index^(0+128)
 19972                           
 19973                           ;task.c: 759: index_03_count=0x00;
 19974  1481  0024               	movlb	4	; select bank4
 19975  1482  01C4               	clrf	_index_03_count^(0+512)
 19976  1483  01C5               	clrf	(_index_03_count+1)^(0+512)
 19977  1484  2D59               	goto	l17826
 19978  1485                     l17754:	
 19979                           
 19980                           ;task.c: 762: else if(battery_voltage_value>bt_volt_20 && battery_voltage_value<=bt_volt
      +                          _40 && voltage_adjust_index<=0x04)
 19981  1485  0024               	movlb	4	; select bank4
 19982  1486  31B4  24B0  3191   	fcall	PL100	;call to abstracted procedure
 19983  1489  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19984  148C  319B  231C  3191   	fcall	___lwtofl
 19985  148F  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19986  1492  319D  25DA  3191   	fcall	___flge
 19987  1495  1803               	btfsc	3,0
 19988  1496  2CCA               	goto	l17778
 19989  1497  0024               	movlb	4	; select bank4
 19990  1498  31B4  2494  3191   	fcall	PL96	;call to abstracted procedure
 19991  149B  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 19992  149E  319B  231C  3191   	fcall	___lwtofl
 19993  14A1  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 19994  14A4  319D  25DA  3191   	fcall	___flge
 19995  14A7  1C03               	btfss	3,0
 19996  14A8  2CCA               	goto	l17778
 19997  14A9  3005               	movlw	5
 19998  14AA  0021               	movlb	1	; select bank1
 19999  14AB  026E               	subwf	_voltage_adjust_index^(0+128),w
 20000  14AC  1803               	skipnc
 20001  14AD  2CCA               	goto	l17778
 20002                           
 20003                           ;task.c: 763: {
 20004                           ;task.c: 764: index_04_count++;
 20005  14AE  0024               	movlb	4	; select bank4
 20006  14AF  0AC6               	incf	_index_04_count^(0+512),f
 20007  14B0  1903               	skipnz
 20008  14B1  0AC7               	incf	(_index_04_count+1)^(0+512),f
 20009  14B2  3005               	movlw	5
 20010                           
 20011                           ;task.c: 765: index_02_count=0x00;
 20012  14B3  01C2               	clrf	_index_02_count^(0+512)
 20013  14B4  01C3               	clrf	(_index_02_count+1)^(0+512)
 20014                           
 20015                           ;task.c: 766: index_03_count=0x00;
 20016  14B5  01C4               	clrf	_index_03_count^(0+512)
 20017  14B6  01C5               	clrf	(_index_03_count+1)^(0+512)
 20018                           
 20019                           ;task.c: 767: index_01_count=0x00;
 20020  14B7  01C0               	clrf	_index_01_count^(0+512)
 20021  14B8  01C1               	clrf	(_index_01_count+1)^(0+512)
 20022                           
 20023                           ;task.c: 768: index_05_count=0x00;
 20024  14B9  01C8               	clrf	_index_05_count^(0+512)
 20025  14BA  01C9               	clrf	(_index_05_count+1)^(0+512)
 20026                           
 20027                           ;task.c: 769: index_06_count=0x00;
 20028  14BB  01CA               	clrf	_index_06_count^(0+512)
 20029  14BC  01CB               	clrf	(_index_06_count+1)^(0+512)
 20030                           
 20031                           ;task.c: 770: if(index_04_count>1500)
 20032  14BD  0247               	subwf	(_index_04_count+1)^(0+512),w
 20033  14BE  30DD               	movlw	221
 20034  14BF  1903               	skipnz
 20035  14C0  0246               	subwf	_index_04_count^(0+512),w
 20036  14C1  1C03               	skipc
 20037  14C2  2D59               	goto	l17826
 20038                           
 20039                           ;task.c: 771: {
 20040                           ;task.c: 772: voltage_adjust_index=0x04;
 20041  14C3  3004               	movlw	4
 20042  14C4  0021               	movlb	1	; select bank1
 20043  14C5  00EE               	movwf	_voltage_adjust_index^(0+128)
 20044                           
 20045                           ;task.c: 773: index_04_count=0x00;
 20046  14C6  0024               	movlb	4	; select bank4
 20047  14C7  01C6               	clrf	_index_04_count^(0+512)
 20048  14C8  01C7               	clrf	(_index_04_count+1)^(0+512)
 20049  14C9  2D59               	goto	l17826
 20050  14CA                     l17778:	
 20051                           
 20052                           ;task.c: 776: else if(battery_voltage_value>bt_volt_00 && battery_voltage_value<=bt_volt
      +                          _20 && voltage_adjust_index<=0x05)
 20053  14CA  0024               	movlb	4	; select bank4
 20054  14CB  0857               	movf	(_bt_volt_00+3)^(0+512),w
 20055  14CC  0020               	movlb	0	; select bank0
 20056  14CD  00DD               	movwf	___flge@ff1+3
 20057  14CE  0024               	movlb	4	; select bank4
 20058  14CF  0856               	movf	(_bt_volt_00+2)^(0+512),w
 20059  14D0  0020               	movlb	0	; select bank0
 20060  14D1  00DC               	movwf	___flge@ff1+2
 20061  14D2  0024               	movlb	4	; select bank4
 20062  14D3  0855               	movf	(_bt_volt_00+1)^(0+512),w
 20063  14D4  0020               	movlb	0	; select bank0
 20064  14D5  00DB               	movwf	___flge@ff1+1
 20065  14D6  0024               	movlb	4	; select bank4
 20066  14D7  0854               	movf	_bt_volt_00^(0+512),w
 20067  14D8  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 20068  14DB  319B  231C  3191   	fcall	___lwtofl
 20069  14DE  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 20070  14E1  319D  25DA  3191   	fcall	___flge
 20071  14E4  1803               	btfsc	3,0
 20072  14E5  2D19               	goto	l17802
 20073  14E6  0024               	movlb	4	; select bank4
 20074  14E7  31B4  24B0  3191   	fcall	PL100	;call to abstracted procedure
 20075  14EA  31B3  23FB  3191   	fcall	PL60	;call to abstracted procedure
 20076  14ED  319B  231C  3191   	fcall	___lwtofl
 20077  14F0  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 20078  14F3  319D  25DA  3191   	fcall	___flge
 20079  14F6  1C03               	btfss	3,0
 20080  14F7  2D19               	goto	l17802
 20081  14F8  3006               	movlw	6
 20082  14F9  0021               	movlb	1	; select bank1
 20083  14FA  026E               	subwf	_voltage_adjust_index^(0+128),w
 20084  14FB  1803               	skipnc
 20085  14FC  2D19               	goto	l17802
 20086                           
 20087                           ;task.c: 777: {
 20088                           ;task.c: 778: index_05_count++;
 20089  14FD  0024               	movlb	4	; select bank4
 20090  14FE  0AC8               	incf	_index_05_count^(0+512),f
 20091  14FF  1903               	skipnz
 20092  1500  0AC9               	incf	(_index_05_count+1)^(0+512),f
 20093  1501  3005               	movlw	5
 20094                           
 20095                           ;task.c: 779: index_02_count=0x00;
 20096  1502  01C2               	clrf	_index_02_count^(0+512)
 20097  1503  01C3               	clrf	(_index_02_count+1)^(0+512)
 20098                           
 20099                           ;task.c: 780: index_03_count=0x00;
 20100  1504  01C4               	clrf	_index_03_count^(0+512)
 20101  1505  01C5               	clrf	(_index_03_count+1)^(0+512)
 20102                           
 20103                           ;task.c: 781: index_04_count=0x00;
 20104  1506  01C6               	clrf	_index_04_count^(0+512)
 20105  1507  01C7               	clrf	(_index_04_count+1)^(0+512)
 20106                           
 20107                           ;task.c: 782: index_01_count=0x00;
 20108  1508  01C0               	clrf	_index_01_count^(0+512)
 20109  1509  01C1               	clrf	(_index_01_count+1)^(0+512)
 20110                           
 20111                           ;task.c: 783: index_06_count=0x00;
 20112  150A  01CA               	clrf	_index_06_count^(0+512)
 20113  150B  01CB               	clrf	(_index_06_count+1)^(0+512)
 20114                           
 20115                           ;task.c: 784: if(index_05_count>1500)
 20116  150C  0249               	subwf	(_index_05_count+1)^(0+512),w
 20117  150D  30DD               	movlw	221
 20118  150E  1903               	skipnz
 20119  150F  0248               	subwf	_index_05_count^(0+512),w
 20120  1510  1C03               	skipc
 20121  1511  2D59               	goto	l17826
 20122                           
 20123                           ;task.c: 785: {
 20124                           ;task.c: 786: voltage_adjust_index=0x05;
 20125  1512  3005               	movlw	5
 20126  1513  0021               	movlb	1	; select bank1
 20127  1514  00EE               	movwf	_voltage_adjust_index^(0+128)
 20128                           
 20129                           ;task.c: 787: index_05_count=0x00;
 20130  1515  0024               	movlb	4	; select bank4
 20131  1516  01C8               	clrf	_index_05_count^(0+512)
 20132  1517  01C9               	clrf	(_index_05_count+1)^(0+512)
 20133  1518  2D59               	goto	l17826
 20134  1519                     l17802:	
 20135                           
 20136                           ;task.c: 790: else if(battery_voltage_value<bt_volt_00 && voltage_adjust_index<=0x06)
 20137  1519  31B4  2480  3191   	fcall	PL92	;call to abstracted procedure
 20138  151C  319B  231C  3191   	fcall	___lwtofl
 20139  151F  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 20140  1522  0024               	movlb	4	; select bank4
 20141  1523  0857               	movf	(_bt_volt_00+3)^(0+512),w
 20142  1524  0020               	movlb	0	; select bank0
 20143  1525  00E1               	movwf	___flge@ff2+3
 20144  1526  0024               	movlb	4	; select bank4
 20145  1527  0856               	movf	(_bt_volt_00+2)^(0+512),w
 20146  1528  0020               	movlb	0	; select bank0
 20147  1529  00E0               	movwf	___flge@ff2+2
 20148  152A  0024               	movlb	4	; select bank4
 20149  152B  0855               	movf	(_bt_volt_00+1)^(0+512),w
 20150  152C  0020               	movlb	0	; select bank0
 20151  152D  00DF               	movwf	___flge@ff2+1
 20152  152E  0024               	movlb	4	; select bank4
 20153  152F  0854               	movf	_bt_volt_00^(0+512),w
 20154  1530  0020               	movlb	0	; select bank0
 20155  1531  00DE               	movwf	___flge@ff2
 20156  1532  319D  25DA  3191   	fcall	___flge
 20157  1535  1803               	btfsc	3,0
 20158  1536  2D51               	goto	l17824
 20159  1537  3007               	movlw	7
 20160  1538  0021               	movlb	1	; select bank1
 20161  1539  026E               	subwf	_voltage_adjust_index^(0+128),w
 20162  153A  1803               	skipnc
 20163  153B  2D51               	goto	l17824
 20164                           
 20165                           ;task.c: 791: {
 20166                           ;task.c: 792: index_06_count++;
 20167  153C  0024               	movlb	4	; select bank4
 20168  153D  0ACA               	incf	_index_06_count^(0+512),f
 20169  153E  1903               	skipnz
 20170  153F  0ACB               	incf	(_index_06_count+1)^(0+512),f
 20171  1540  3005               	movlw	5
 20172                           
 20173                           ;task.c: 793: index_02_count=0x00;
 20174                           
 20175                           ;task.c: 794: index_03_count=0x00;
 20176                           
 20177                           ;task.c: 795: index_04_count=0x00;
 20178                           
 20179                           ;task.c: 796: index_05_count=0x00;
 20180  1541  31B5  2530  3191   	fcall	PL168	;call to abstracted procedure
 20181                           
 20182                           ;task.c: 797: index_01_count=0x00;
 20183  1544  01C0               	clrf	_index_01_count^(0+512)
 20184  1545  01C1               	clrf	(_index_01_count+1)^(0+512)
 20185                           
 20186                           ;task.c: 798: if(index_06_count>1500)
 20187  1546  024B               	subwf	(_index_06_count+1)^(0+512),w
 20188  1547  30DD               	movlw	221
 20189  1548  1903               	skipnz
 20190  1549  024A               	subwf	_index_06_count^(0+512),w
 20191  154A  1C03               	skipc
 20192  154B  2D59               	goto	l17826
 20193                           
 20194                           ;task.c: 799: {
 20195                           ;task.c: 800: voltage_adjust_index=0x06;
 20196  154C  3006               	movlw	6
 20197  154D  0021               	movlb	1	; select bank1
 20198  154E  00EE               	movwf	_voltage_adjust_index^(0+128)
 20199                           
 20200                           ;task.c: 801: index_06_count=0x00;
 20201  154F  0024               	movlb	4	; select bank4
 20202  1550  2D57               	goto	L10
 20203  1551                     l17824:	
 20204                           
 20205                           ;task.c: 804: else
 20206                           ;task.c: 805: {
 20207                           ;task.c: 806: index_01_count=0x00;
 20208  1551  0024               	movlb	4	; select bank4
 20209  1552  01C0               	clrf	_index_01_count^(0+512)
 20210  1553  01C1               	clrf	(_index_01_count+1)^(0+512)
 20211                           
 20212                           ;task.c: 807: index_02_count=0x00;
 20213                           
 20214                           ;task.c: 808: index_03_count=0x00;
 20215                           
 20216                           ;task.c: 809: index_04_count=0x00;
 20217                           
 20218                           ;task.c: 810: index_05_count=0x00;
 20219  1554  31B5  2530  3191   	fcall	PL168	;call to abstracted procedure
 20220  1557                     L10:	
 20221                           
 20222                           ;task.c: 811: index_06_count=0x00;
 20223  1557  01CA               	clrf	_index_06_count^(0+512)
 20224  1558  01CB               	clrf	(_index_06_count+1)^(0+512)
 20225  1559                     l17826:	
 20226                           
 20227                           ;task.c: 812: }
 20228                           ;task.c: 814: if( ((load_cc_I/100)*160) > (Load_Pmax*160/(load_voltage_value*61/1000)) )
 20229  1559  303D               	movlw	61
 20230  155A  0020               	movlb	0	; select bank0
 20231  155B  31B5  2539  3191   	fcall	PL180	;call to abstracted procedure
 20232  155E  3191  2108  3191   	fcall	___wmul
 20233  1561  31B5  2554  3191   	fcall	PL210	;call to abstracted procedure
 20234  1564  31B7  271D  3191   	fcall	___lwdiv
 20235  1567  31B5  259B  3191   	fcall	PL268	;call to abstracted procedure
 20236  156A  319B  231C  3191   	fcall	___lwtofl
 20237  156D  31B3  23DC  3191   	fcall	PL58	;call to abstracted procedure
 20238  1570  31A2  22FC  3191   	fcall	___flmul
 20239  1573  31B4  2453  3191   	fcall	PL82	;call to abstracted procedure
 20240  1576  31A2  2291  3191   	fcall	___fldiv
 20241  1579  084A               	movf	?___fldiv+3,w
 20242  157A  00DD               	movwf	___flge@ff1+3
 20243  157B  0849               	movf	?___fldiv+2,w
 20244  157C  00DC               	movwf	___flge@ff1+2
 20245  157D  0848               	movf	?___fldiv+1,w
 20246  157E  00DB               	movwf	___flge@ff1+1
 20247  157F  0847               	movf	?___fldiv,w
 20248  1580  00DA               	movwf	___flge@ff1
 20249  1581  3043               	movlw	67
 20250  1582  31B3  2397  3191   	fcall	PL4	;call to abstracted procedure
 20251  1585  31A2  2291  3191   	fcall	___fldiv
 20252  1588  3186  26D8  3191   	fcall	PL36	;call to abstracted procedure
 20253  158B  31A2  22FC  3191   	fcall	___flmul
 20254  158E  31B5  255D  3191   	fcall	PL212	;call to abstracted procedure
 20255  1591  319D  25DA  3191   	fcall	___flge
 20256  1594  1803               	btfsc	3,0
 20257  1595  2DBB               	goto	l17858
 20258                           
 20259                           ;task.c: 815: {
 20260                           ;task.c: 816: PID_CC_discharge.SetPoint=(Load_Pmax*160)/(load_voltage_value*61/1000);
 20261  1596  303D               	movlw	61
 20262  1597  31B5  2539  3191   	fcall	PL180	;call to abstracted procedure
 20263  159A  3191  2108  3191   	fcall	___wmul
 20264  159D  31B5  2554  3191   	fcall	PL210	;call to abstracted procedure
 20265  15A0  31B7  271D  3191   	fcall	___lwdiv
 20266  15A3  31B5  259B  3191   	fcall	PL268	;call to abstracted procedure
 20267  15A6  319B  231C  3191   	fcall	___lwtofl
 20268  15A9  31B3  23DC  3191   	fcall	PL58	;call to abstracted procedure
 20269  15AC  31A2  22FC  3191   	fcall	___flmul
 20270  15AF  31B4  2453  3191   	fcall	PL82	;call to abstracted procedure
 20271  15B2  31A2  2291  3191   	fcall	___fldiv
 20272  15B5  31B5  2511  3191   	fcall	PL136	;call to abstracted procedure
 20273                           
 20274                           ;task.c: 818: limit_power_pid_flag=0x01;
 20275  15B8  01C2               	clrf	_limit_power_pid_flag^(0+384)
 20276  15B9  0AC2               	incf	_limit_power_pid_flag^(0+384),f
 20277  15BA  2DCB               	goto	L42
 20278  15BB                     l17858:	
 20279                           ;task.c: 843: {
 20280                           ;task.c: 844: PID_CC_discharge.SetPoint =0;
 20281                           
 20282                           ;task.c: 842: else if(Adjust_Pout_Flag==0x00)
 20283                           
 20284                           ;task.c: 841: }
 20285                           
 20286                           ;task.c: 839: {
 20287                           ;task.c: 840: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 20288                           
 20289                           ;task.c: 838: else if(Adjust_Pout_Flag==0x05)
 20290                           
 20291                           ;task.c: 837: }
 20292                           
 20293                           ;task.c: 835: {
 20294                           ;task.c: 836: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 20295                           
 20296                           ;task.c: 834: else if(Adjust_Pout_Flag==0x04)
 20297                           
 20298                           ;task.c: 833: }
 20299                           
 20300                           ;task.c: 831: {
 20301                           ;task.c: 832: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 20302                           
 20303                           ;task.c: 830: else if(Adjust_Pout_Flag==0x03)
 20304                           
 20305                           ;task.c: 829: }
 20306                           
 20307                           ;task.c: 827: {
 20308                           ;task.c: 828: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 20309                           
 20310                           ;task.c: 826: else if(Adjust_Pout_Flag==0x02)
 20311                           
 20312                           ;task.c: 825: }
 20313                           
 20314                           ;task.c: 823: {
 20315                           ;task.c: 824: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 20316                           
 20317                           ;task.c: 822: if(Adjust_Pout_Flag==0x01)
 20318                           
 20319                           ;task.c: 820: data_cc_var = PID_CC_discharge.SetPoint;
 20320                           
 20321                           
 20322                           ;task.c: 848: else
 20323                           ;task.c: 849: {
 20324                           ;task.c: 850: PID_CC_discharge.SetPoint=(load_cc_I/100)*160;
 20325  15BB  3043               	movlw	67
 20326  15BC  31B3  2397  3191   	fcall	PL4	;call to abstracted procedure
 20327  15BF  31A2  2291  3191   	fcall	___fldiv
 20328  15C2  3186  26D8  3191   	fcall	PL36	;call to abstracted procedure
 20329  15C5  31A2  22FC  3191   	fcall	___flmul
 20330  15C8  318E  2600  3191   	fcall	PL24	;call to abstracted procedure
 20331  15CB                     L42:	
 20332                           
 20333                           ;task.c: 852: data_cc_var = PID_CC_discharge.SetPoint;
 20334  15CB  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 20335  15CC  0025               	movlb	5	; select bank5
 20336  15CD  00EB               	movwf	(handle_ad_loop@data_cc_var+3)^(0+640)
 20337  15CE  0023               	movlb	3	; select bank3
 20338  15CF  0849               	movf	(_PID_CC_discharge+2)^(0+384),w
 20339  15D0  0025               	movlb	5	; select bank5
 20340  15D1  00EA               	movwf	(handle_ad_loop@data_cc_var+2)^(0+640)
 20341  15D2  0023               	movlb	3	; select bank3
 20342  15D3  0848               	movf	(_PID_CC_discharge+1)^(0+384),w
 20343  15D4  0025               	movlb	5	; select bank5
 20344  15D5  00E9               	movwf	(handle_ad_loop@data_cc_var+1)^(0+640)
 20345  15D6  0023               	movlb	3	; select bank3
 20346  15D7  0847               	movf	_PID_CC_discharge^(0+384),w
 20347  15D8  0025               	movlb	5	; select bank5
 20348  15D9  00E8               	movwf	handle_ad_loop@data_cc_var^(0+640)
 20349                           
 20350                           ;task.c: 854: if(Adjust_Pout_Flag==0x01)
 20351  15DA  0021               	movlb	1	; select bank1
 20352  15DB  0B52               	decfsz	_Adjust_Pout_Flag^(0+128),w
 20353  15DC  2DEF               	goto	l17866
 20354                           
 20355                           ;task.c: 855: {
 20356                           ;task.c: 856: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 20357  15DD  3042               	movlw	66
 20358  15DE  31B4  24C6  3191   	fcall	PL108	;call to abstracted procedure
 20359  15E1  085A               	movf	(_step_01_load_percent+3)^(0+256),w
 20360  15E2  0020               	movlb	0	; select bank0
 20361  15E3  00B7               	movwf	___flmul@f1+3
 20362  15E4  0022               	movlb	2	; select bank2
 20363  15E5  0859               	movf	(_step_01_load_percent+2)^(0+256),w
 20364  15E6  0020               	movlb	0	; select bank0
 20365  15E7  00B6               	movwf	___flmul@f1+2
 20366  15E8  0022               	movlb	2	; select bank2
 20367  15E9  0858               	movf	(_step_01_load_percent+1)^(0+256),w
 20368  15EA  0020               	movlb	0	; select bank0
 20369  15EB  00B5               	movwf	___flmul@f1+1
 20370  15EC  0022               	movlb	2	; select bank2
 20371  15ED  0857               	movf	_step_01_load_percent^(0+256),w
 20372  15EE  2E46               	goto	L31
 20373  15EF                     l17866:	
 20374                           ;task.c: 857: }
 20375                           
 20376                           
 20377                           ;task.c: 858: else if(Adjust_Pout_Flag==0x02)
 20378  15EF  0852               	movf	_Adjust_Pout_Flag^(0+128),w
 20379  15F0  3A02               	xorlw	2
 20380  15F1  1D03               	skipz
 20381  15F2  2E05               	goto	l17870
 20382                           
 20383                           ;task.c: 859: {
 20384                           ;task.c: 860: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 20385  15F3  3042               	movlw	66
 20386  15F4  31B4  24C6  3191   	fcall	PL108	;call to abstracted procedure
 20387  15F7  085E               	movf	(_step_02_load_percent+3)^(0+256),w
 20388  15F8  0020               	movlb	0	; select bank0
 20389  15F9  00B7               	movwf	___flmul@f1+3
 20390  15FA  0022               	movlb	2	; select bank2
 20391  15FB  085D               	movf	(_step_02_load_percent+2)^(0+256),w
 20392  15FC  0020               	movlb	0	; select bank0
 20393  15FD  00B6               	movwf	___flmul@f1+2
 20394  15FE  0022               	movlb	2	; select bank2
 20395  15FF  085C               	movf	(_step_02_load_percent+1)^(0+256),w
 20396  1600  0020               	movlb	0	; select bank0
 20397  1601  00B5               	movwf	___flmul@f1+1
 20398  1602  0022               	movlb	2	; select bank2
 20399  1603  085B               	movf	_step_02_load_percent^(0+256),w
 20400  1604  2E46               	goto	L31
 20401  1605                     l17870:	
 20402                           ;task.c: 861: }
 20403                           
 20404                           
 20405                           ;task.c: 862: else if(Adjust_Pout_Flag==0x03)
 20406  1605  0852               	movf	_Adjust_Pout_Flag^(0+128),w
 20407  1606  3A03               	xorlw	3
 20408  1607  1D03               	skipz
 20409  1608  2E1B               	goto	l17874
 20410                           
 20411                           ;task.c: 863: {
 20412                           ;task.c: 864: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 20413  1609  3042               	movlw	66
 20414  160A  31B4  24C6  3191   	fcall	PL108	;call to abstracted procedure
 20415  160D  0862               	movf	(_step_03_load_percent+3)^(0+256),w
 20416  160E  0020               	movlb	0	; select bank0
 20417  160F  00B7               	movwf	___flmul@f1+3
 20418  1610  0022               	movlb	2	; select bank2
 20419  1611  0861               	movf	(_step_03_load_percent+2)^(0+256),w
 20420  1612  0020               	movlb	0	; select bank0
 20421  1613  00B6               	movwf	___flmul@f1+2
 20422  1614  0022               	movlb	2	; select bank2
 20423  1615  0860               	movf	(_step_03_load_percent+1)^(0+256),w
 20424  1616  0020               	movlb	0	; select bank0
 20425  1617  00B5               	movwf	___flmul@f1+1
 20426  1618  0022               	movlb	2	; select bank2
 20427  1619  085F               	movf	_step_03_load_percent^(0+256),w
 20428  161A  2E46               	goto	L31
 20429  161B                     l17874:	
 20430                           ;task.c: 865: }
 20431                           
 20432                           
 20433                           ;task.c: 866: else if(Adjust_Pout_Flag==0x04)
 20434  161B  0852               	movf	_Adjust_Pout_Flag^(0+128),w
 20435  161C  3A04               	xorlw	4
 20436  161D  1D03               	skipz
 20437  161E  2E31               	goto	l17878
 20438                           
 20439                           ;task.c: 867: {
 20440                           ;task.c: 868: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 20441  161F  3042               	movlw	66
 20442  1620  31B4  24C6  3191   	fcall	PL108	;call to abstracted procedure
 20443  1623  0866               	movf	(_step_04_load_percent+3)^(0+256),w
 20444  1624  0020               	movlb	0	; select bank0
 20445  1625  00B7               	movwf	___flmul@f1+3
 20446  1626  0022               	movlb	2	; select bank2
 20447  1627  0865               	movf	(_step_04_load_percent+2)^(0+256),w
 20448  1628  0020               	movlb	0	; select bank0
 20449  1629  00B6               	movwf	___flmul@f1+2
 20450  162A  0022               	movlb	2	; select bank2
 20451  162B  0864               	movf	(_step_04_load_percent+1)^(0+256),w
 20452  162C  0020               	movlb	0	; select bank0
 20453  162D  00B5               	movwf	___flmul@f1+1
 20454  162E  0022               	movlb	2	; select bank2
 20455  162F  0863               	movf	_step_04_load_percent^(0+256),w
 20456  1630  2E46               	goto	L31
 20457  1631                     l17878:	
 20458                           ;task.c: 869: }
 20459                           
 20460                           
 20461                           ;task.c: 870: else if(Adjust_Pout_Flag==0x05)
 20462  1631  0852               	movf	_Adjust_Pout_Flag^(0+128),w
 20463  1632  3A05               	xorlw	5
 20464  1633  1D03               	skipz
 20465  1634  2E59               	goto	l17882
 20466                           
 20467                           ;task.c: 871: {
 20468                           ;task.c: 872: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 20469  1635  3042               	movlw	66
 20470  1636  31B4  24C6  3191   	fcall	PL108	;call to abstracted procedure
 20471  1639  086A               	movf	(_step_05_load_percent+3)^(0+256),w
 20472  163A  0020               	movlb	0	; select bank0
 20473  163B  00B7               	movwf	___flmul@f1+3
 20474  163C  0022               	movlb	2	; select bank2
 20475  163D  0869               	movf	(_step_05_load_percent+2)^(0+256),w
 20476  163E  0020               	movlb	0	; select bank0
 20477  163F  00B6               	movwf	___flmul@f1+2
 20478  1640  0022               	movlb	2	; select bank2
 20479  1641  0868               	movf	(_step_05_load_percent+1)^(0+256),w
 20480  1642  0020               	movlb	0	; select bank0
 20481  1643  00B5               	movwf	___flmul@f1+1
 20482  1644  0022               	movlb	2	; select bank2
 20483  1645  0867               	movf	_step_05_load_percent^(0+256),w
 20484  1646                     L31:	
 20485  1646  0020               	movlb	0	; select bank0
 20486  1647  31B5  2501  3191   	fcall	PL134	;call to abstracted procedure
 20487  164A  0020               	movlb	0	; select bank0
 20488  164B  00B8               	movwf	___flmul@f2
 20489  164C  31A2  22FC  3191   	fcall	___flmul
 20490  164F  31B4  2453  3191   	fcall	PL82	;call to abstracted procedure
 20491  1652  31A2  2291  3191   	fcall	___fldiv
 20492  1655  31B5  2511  3191   	fcall	PL136	;call to abstracted procedure
 20493                           
 20494                           ;task.c: 873: }
 20495  1658  2E60               	goto	l17886
 20496  1659                     l17882:	
 20497                           
 20498                           ;task.c: 874: else if(Adjust_Pout_Flag==0x00)
 20499  1659  08D2               	movf	_Adjust_Pout_Flag^(0+128),f
 20500  165A  1D03               	skipz
 20501  165B  2E60               	goto	l17886
 20502                           
 20503                           ;task.c: 875: {
 20504                           ;task.c: 876: PID_CC_discharge.SetPoint =0;
 20505  165C  0023               	movlb	3	; select bank3
 20506  165D  31B5  25A0  3191   	fcall	PL274	;call to abstracted procedure
 20507  1660                     l17886:	
 20508                           
 20509                           ;task.c: 877: }
 20510                           ;task.c: 879: }
 20511                           ;task.c: 881: if(voltage_adjust_index==0x01)
 20512  1660  0021               	movlb	1	; select bank1
 20513  1661  0B6E               	decfsz	_voltage_adjust_index^(0+128),w
 20514  1662  2E65               	goto	l17890
 20515                           
 20516                           ;task.c: 882: {
 20517                           ;task.c: 883: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*1.0;
 20518  1663  303F               	movlw	63
 20519  1664  2E80               	goto	L36
 20520  1665                     l17890:	
 20521                           ;task.c: 884: }
 20522                           
 20523                           
 20524                           ;task.c: 885: else if(voltage_adjust_index==0x02)
 20525  1665  086E               	movf	_voltage_adjust_index^(0+128),w
 20526  1666  3A02               	xorlw	2
 20527  1667  1D03               	skipz
 20528  1668  2E6F               	goto	l17894
 20529                           
 20530                           ;task.c: 886: {
 20531                           ;task.c: 887: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.70;
 20532  1669  303F               	movlw	63
 20533  166A  0020               	movlb	0	; select bank0
 20534  166B  00B7               	movwf	___flmul@f1+3
 20535  166C  3033               	movlw	51
 20536  166D  00B6               	movwf	___flmul@f1+2
 20537  166E  2E79               	goto	L37
 20538  166F                     l17894:	
 20539                           ;task.c: 888: }
 20540                           
 20541                           
 20542                           ;task.c: 889: else if(voltage_adjust_index==0x03)
 20543  166F  086E               	movf	_voltage_adjust_index^(0+128),w
 20544  1670  3A03               	xorlw	3
 20545  1671  1D03               	skipz
 20546  1672  2E7B               	goto	l17898
 20547                           
 20548                           ;task.c: 890: {
 20549                           ;task.c: 891: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.45;
 20550  1673  303E               	movlw	62
 20551  1674  0020               	movlb	0	; select bank0
 20552  1675  00B7               	movwf	___flmul@f1+3
 20553  1676  30E6               	movlw	230
 20554  1677  00B6               	movwf	___flmul@f1+2
 20555  1678  3066               	movlw	102
 20556  1679                     L37:	
 20557  1679  00B5               	movwf	___flmul@f1+1
 20558  167A  2E9C               	goto	L32
 20559  167B                     l17898:	
 20560                           ;task.c: 892: }
 20561                           
 20562                           
 20563                           ;task.c: 893: else if(voltage_adjust_index==0x04)
 20564  167B  086E               	movf	_voltage_adjust_index^(0+128),w
 20565  167C  3A04               	xorlw	4
 20566  167D  1D03               	skipz
 20567  167E  2E87               	goto	l17902
 20568                           
 20569                           ;task.c: 894: {
 20570                           ;task.c: 895: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.25;
 20571  167F  303E               	movlw	62
 20572  1680                     L36:	
 20573  1680  0020               	movlb	0	; select bank0
 20574  1681  00B7               	movwf	___flmul@f1+3
 20575  1682  3080               	movlw	128
 20576  1683  00B6               	movwf	___flmul@f1+2
 20577  1684  01B5               	clrf	___flmul@f1+1
 20578  1685  01B4               	clrf	___flmul@f1
 20579  1686  2E9D               	goto	L29
 20580  1687                     l17902:	
 20581                           ;task.c: 896: }
 20582                           
 20583                           
 20584                           ;task.c: 897: else if(voltage_adjust_index==0x05)
 20585  1687  086E               	movf	_voltage_adjust_index^(0+128),w
 20586  1688  3A05               	xorlw	5
 20587  1689  1D03               	skipz
 20588  168A  2E94               	goto	l17906
 20589                           
 20590                           ;task.c: 898: {
 20591                           ;task.c: 899: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.15;
 20592  168B  303E               	movlw	62
 20593  168C  0020               	movlb	0	; select bank0
 20594  168D  00B7               	movwf	___flmul@f1+3
 20595  168E  3019               	movlw	25
 20596  168F  00B6               	movwf	___flmul@f1+2
 20597  1690  3099               	movlw	153
 20598  1691  00B5               	movwf	___flmul@f1+1
 20599  1692  309A               	movlw	154
 20600  1693  2E9C               	goto	L32
 20601  1694                     l17906:	
 20602                           ;task.c: 900: }
 20603                           
 20604                           
 20605                           ;task.c: 901: else if(voltage_adjust_index==0x06)
 20606  1694  086E               	movf	_voltage_adjust_index^(0+128),w
 20607  1695  3A06               	xorlw	6
 20608  1696  1D03               	skipz
 20609  1697  2EA8               	goto	l17916
 20610                           
 20611                           ;task.c: 902: {
 20612                           ;task.c: 903: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.05;
 20613  1698  303D               	movlw	61
 20614  1699  31B5  256F  3191   	fcall	PL216	;call to abstracted procedure
 20615  169C                     L32:	
 20616  169C  00B4               	movwf	___flmul@f1
 20617  169D                     L29:	
 20618  169D  31B5  2521  3191   	fcall	PL142	;call to abstracted procedure
 20619  16A0  0020               	movlb	0	; select bank0
 20620  16A1  00B8               	movwf	___flmul@f2
 20621  16A2  31A2  22FC  3191   	fcall	___flmul
 20622  16A5  318E  2600  3191   	fcall	PL24	;call to abstracted procedure
 20623  16A8                     l17916:	
 20624                           
 20625                           ;task.c: 917: }
 20626                           ;task.c: 920: if(light_mode==0x00 && work_mode==0x00)
 20627  16A8  0021               	movlb	1	; select bank1
 20628  16A9  08D7               	movf	_light_mode^(0+128),f
 20629  16AA  1903               	btfsc	3,2
 20630  16AB  08DA               	movf	_work_mode^(0+128),f
 20631  16AC  1903               	btfsc	3,2
 20632  16AD  2EC0               	goto	L28
 20633                           
 20634                           ;task.c: 924: else if(light_mode==0x01 && work_mode==0x00)
 20635                           
 20636                           ;task.c: 923: }
 20637                           
 20638                           ;task.c: 921: {
 20639                           ;task.c: 922: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20640  16AE  0B57               	decfsz	_light_mode^(0+128),w
 20641  16AF  2EB7               	goto	l17932
 20642  16B0  08DA               	movf	_work_mode^(0+128),f
 20643  16B1  1D03               	skipz
 20644  16B2  2EB7               	goto	l17932
 20645  16B3                     L30:	
 20646                           
 20647                           ;task.c: 925: {
 20648                           ;task.c: 926: if(have_person1_flag==0x01)
 20649  16B3  0B55               	decfsz	_have_person1_flag^(0+128),w
 20650  16B4  2ECF               	goto	l17946
 20651                           
 20652                           ;task.c: 927: {
 20653                           ;task.c: 928: __nop();
 20654  16B5  0000               	nop
 20655                           
 20656                           ;task.c: 929: }
 20657  16B6  2EDE               	goto	l17948
 20658  16B7                     l17932:	
 20659                           ;task.c: 930: else
 20660                           ;task.c: 931: {
 20661                           ;task.c: 932: PID_CC_discharge.SetPoint = data_cc_var*0.05;
 20662                           
 20663                           
 20664                           ;task.c: 935: else if(light_mode==0x02 && work_mode==0x00)
 20665  16B7  0857               	movf	_light_mode^(0+128),w
 20666  16B8  3A02               	xorlw	2
 20667  16B9  1D03               	skipz
 20668  16BA  2EDE               	goto	l17948
 20669  16BB  08DA               	movf	_work_mode^(0+128),f
 20670  16BC  1D03               	skipz
 20671  16BD  2EDE               	goto	l17948
 20672                           
 20673                           ;task.c: 936: {
 20674                           ;task.c: 937: if(Adjust_Pout_Flag==0x01)
 20675  16BE  0B52               	decfsz	_Adjust_Pout_Flag^(0+128),w
 20676  16BF  2ECA               	goto	l17940
 20677  16C0                     L28:	
 20678                           
 20679                           ;task.c: 938: {
 20680                           ;task.c: 939: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 20681  16C0  303F               	movlw	63
 20682  16C1  0020               	movlb	0	; select bank0
 20683  16C2  00B7               	movwf	___flmul@f1+3
 20684  16C3  01B6               	clrf	___flmul@f1+2
 20685  16C4  01B5               	clrf	___flmul@f1+1
 20686  16C5  01B4               	clrf	___flmul@f1
 20687  16C6  31B5  2521  3191   	fcall	PL142	;call to abstracted procedure
 20688  16C9  2ED6               	goto	L25
 20689  16CA                     l17940:	
 20690                           ;task.c: 940: }
 20691                           
 20692                           
 20693                           ;task.c: 941: else if(Adjust_Pout_Flag>=0x02)
 20694  16CA  3002               	movlw	2
 20695  16CB  0252               	subwf	_Adjust_Pout_Flag^(0+128),w
 20696  16CC  1C03               	skipc
 20697  16CD  2EDE               	goto	l17948
 20698  16CE  2EB3               	goto	L30
 20699  16CF                     l17946:	
 20700                           ;task.c: 942: {
 20701                           ;task.c: 943: if(have_person1_flag==0x01)
 20702                           
 20703                           
 20704                           ;task.c: 947: else
 20705                           ;task.c: 948: {
 20706                           ;task.c: 949: PID_CC_discharge.SetPoint = data_cc_var*0.05;
 20707  16CF  303D               	movlw	61
 20708  16D0  31B5  256F  3191   	fcall	PL216	;call to abstracted procedure
 20709  16D3  31B5  2501  3191   	fcall	PL134	;call to abstracted procedure
 20710  16D6                     L25:	
 20711  16D6  0020               	movlb	0	; select bank0
 20712  16D7  00B8               	movwf	___flmul@f2
 20713  16D8  31A2  22FC  3191   	fcall	___flmul
 20714  16DB  318E  2600  3191   	fcall	PL24	;call to abstracted procedure
 20715  16DE                     l17948:	
 20716                           
 20717                           ;task.c: 950: }
 20718                           ;task.c: 951: }
 20719                           ;task.c: 952: }
 20720                           ;task.c: 954: if(led_out_ctrl==0x01 && work_mode==0x00)
 20721  16DE  0021               	movlb	1	; select bank1
 20722  16DF  0B56               	decfsz	_led_out_ctrl^(0+128),w
 20723  16E0  2EE8               	goto	l1455
 20724  16E1  08DA               	movf	_work_mode^(0+128),f
 20725  16E2  1D03               	skipz
 20726  16E3  2EE8               	goto	l1455
 20727                           
 20728                           ;task.c: 955: {
 20729                           ;task.c: 956: PID_CC_discharge.SetPoint = 0;
 20730  16E4  0023               	movlb	3	; select bank3
 20731  16E5  31B5  25A0  3191   	fcall	PL274	;call to abstracted procedure
 20732  16E8                     l1455:	
 20733                           
 20734                           ;task.c: 957: }
 20735                           ;task.c: 959: pid_index = 0x01;
 20736  16E8  0022               	movlb	2	; select bank2
 20737  16E9  30C7               	movlw	low _PID_CC_discharge
 20738  16EA  01C0               	clrf	_pid_index^(0+256)
 20739  16EB  0AC0               	incf	_pid_index^(0+256),f
 20740                           
 20741                           ;task.c: 961: PWM_I=pid_calc(&PID_CC_discharge,discharge_current_value);
 20742  16EC  0021               	movlb	1	; select bank1
 20743  16ED  00A0               	movwf	pid_calc@pp^(0+128)
 20744  16EE  3001               	movlw	high _PID_CC_discharge
 20745  16EF  00A1               	movwf	(pid_calc@pp+1)^(0+128)
 20746  16F0  084B               	movf	(_discharge_current_value+1)^(0+128),w
 20747  16F1  00A3               	movwf	(pid_calc@NowPoint+1)^(0+128)
 20748  16F2  084A               	movf	_discharge_current_value^(0+128),w
 20749  16F3  00A2               	movwf	pid_calc@NowPoint^(0+128)
 20750  16F4  319B  2330  3191   	fcall	_pid_calc
 20751  16F7  0823               	movf	(?_pid_calc+3)^(0+128),w
 20752  16F8  0025               	movlb	5	; select bank5
 20753  16F9  00A3               	movwf	(_PWM_I+3)^(0+640)
 20754  16FA  0021               	movlb	1	; select bank1
 20755  16FB  0822               	movf	(?_pid_calc+2)^(0+128),w
 20756  16FC  0025               	movlb	5	; select bank5
 20757  16FD  00A2               	movwf	(_PWM_I+2)^(0+640)
 20758  16FE  0021               	movlb	1	; select bank1
 20759  16FF  0821               	movf	(?_pid_calc+1)^(0+128),w
 20760  1700  0025               	movlb	5	; select bank5
 20761  1701  00A1               	movwf	(_PWM_I+1)^(0+640)
 20762  1702  0021               	movlb	1	; select bank1
 20763  1703  0820               	movf	?_pid_calc^(0+128),w
 20764  1704  0025               	movlb	5	; select bank5
 20765  1705  00A0               	movwf	_PWM_I^(0+640)
 20766                           
 20767                           ;task.c: 963: PWM = PWM+PWM_I;
 20768  1706  0823               	movf	(_PWM_I+3)^(0+640),w
 20769  1707  0020               	movlb	0	; select bank0
 20770  1708  00CA               	movwf	___fladd@f1+3
 20771  1709  0025               	movlb	5	; select bank5
 20772  170A  0822               	movf	(_PWM_I+2)^(0+640),w
 20773  170B  0020               	movlb	0	; select bank0
 20774  170C  00C9               	movwf	___fladd@f1+2
 20775  170D  0025               	movlb	5	; select bank5
 20776  170E  0821               	movf	(_PWM_I+1)^(0+640),w
 20777  170F  0020               	movlb	0	; select bank0
 20778  1710  00C8               	movwf	___fladd@f1+1
 20779  1711  0025               	movlb	5	; select bank5
 20780  1712  0820               	movf	_PWM_I^(0+640),w
 20781  1713  0020               	movlb	0	; select bank0
 20782  1714  00C7               	movwf	___fladd@f1
 20783  1715  0021               	movlb	1	; select bank1
 20784  1716  0843               	movf	(_PWM+3)^(0+128),w
 20785  1717  0020               	movlb	0	; select bank0
 20786  1718  00CE               	movwf	___fladd@f2+3
 20787  1719  0021               	movlb	1	; select bank1
 20788  171A  0842               	movf	(_PWM+2)^(0+128),w
 20789  171B  0020               	movlb	0	; select bank0
 20790  171C  00CD               	movwf	___fladd@f2+2
 20791  171D  0021               	movlb	1	; select bank1
 20792  171E  0841               	movf	(_PWM+1)^(0+128),w
 20793  171F  0020               	movlb	0	; select bank0
 20794  1720  00CC               	movwf	___fladd@f2+1
 20795  1721  0021               	movlb	1	; select bank1
 20796  1722  0840               	movf	_PWM^(0+128),w
 20797  1723  0020               	movlb	0	; select bank0
 20798  1724  00CB               	movwf	___fladd@f2
 20799  1725  319E  261A  3191   	fcall	___fladd
 20800  1728  084A               	movf	?___fladd+3,w
 20801  1729  0021               	movlb	1	; select bank1
 20802  172A  00C3               	movwf	(_PWM+3)^(0+128)
 20803  172B  0020               	movlb	0	; select bank0
 20804  172C  0849               	movf	?___fladd+2,w
 20805  172D  0021               	movlb	1	; select bank1
 20806  172E  00C2               	movwf	(_PWM+2)^(0+128)
 20807  172F  0020               	movlb	0	; select bank0
 20808  1730  0848               	movf	?___fladd+1,w
 20809  1731  0021               	movlb	1	; select bank1
 20810  1732  00C1               	movwf	(_PWM+1)^(0+128)
 20811  1733  0020               	movlb	0	; select bank0
 20812  1734  0847               	movf	?___fladd,w
 20813  1735  0021               	movlb	1	; select bank1
 20814  1736  00C0               	movwf	_PWM^(0+128)
 20815                           
 20816                           ;task.c: 965: if( PWM>=488)
 20817  1737  0843               	movf	(_PWM+3)^(0+128),w
 20818  1738  0020               	movlb	0	; select bank0
 20819  1739  00DD               	movwf	___flge@ff1+3
 20820  173A  0021               	movlb	1	; select bank1
 20821  173B  0842               	movf	(_PWM+2)^(0+128),w
 20822  173C  0020               	movlb	0	; select bank0
 20823  173D  00DC               	movwf	___flge@ff1+2
 20824  173E  0021               	movlb	1	; select bank1
 20825  173F  0841               	movf	(_PWM+1)^(0+128),w
 20826  1740  0020               	movlb	0	; select bank0
 20827  1741  00DB               	movwf	___flge@ff1+1
 20828  1742  0021               	movlb	1	; select bank1
 20829  1743  0840               	movf	_PWM^(0+128),w
 20830  1744  0020               	movlb	0	; select bank0
 20831  1745  00DA               	movwf	___flge@ff1
 20832  1746  3043               	movlw	67
 20833  1747  00E1               	movwf	___flge@ff2+3
 20834  1748  30F4               	movlw	244
 20835  1749  00E0               	movwf	___flge@ff2+2
 20836  174A  01DF               	clrf	___flge@ff2+1
 20837  174B  01DE               	clrf	___flge@ff2
 20838  174C  319D  25DA  3191   	fcall	___flge
 20839  174F  1C03               	btfss	3,0
 20840  1750  2F56               	goto	l17962
 20841                           
 20842                           ;task.c: 966: {
 20843                           ;task.c: 967: PWM=488;
 20844  1751  3043               	movlw	67
 20845  1752  0021               	movlb	1	; select bank1
 20846  1753  00C3               	movwf	(_PWM+3)^(0+128)
 20847  1754  30F4               	movlw	244
 20848  1755  2F75               	goto	L26
 20849  1756                     l17962:	
 20850                           ;task.c: 968: }
 20851                           
 20852                           
 20853                           ;task.c: 969: else if(PWM<=5)
 20854  1756  3040               	movlw	64
 20855  1757  00DD               	movwf	___flge@ff1+3
 20856  1758  30A0               	movlw	160
 20857  1759  00DC               	movwf	___flge@ff1+2
 20858  175A  01DB               	clrf	___flge@ff1+1
 20859  175B  01DA               	clrf	___flge@ff1
 20860  175C  0021               	movlb	1	; select bank1
 20861  175D  0843               	movf	(_PWM+3)^(0+128),w
 20862  175E  0020               	movlb	0	; select bank0
 20863  175F  00E1               	movwf	___flge@ff2+3
 20864  1760  0021               	movlb	1	; select bank1
 20865  1761  0842               	movf	(_PWM+2)^(0+128),w
 20866  1762  0020               	movlb	0	; select bank0
 20867  1763  00E0               	movwf	___flge@ff2+2
 20868  1764  0021               	movlb	1	; select bank1
 20869  1765  0841               	movf	(_PWM+1)^(0+128),w
 20870  1766  0020               	movlb	0	; select bank0
 20871  1767  00DF               	movwf	___flge@ff2+1
 20872  1768  0021               	movlb	1	; select bank1
 20873  1769  0840               	movf	_PWM^(0+128),w
 20874  176A  0020               	movlb	0	; select bank0
 20875  176B  00DE               	movwf	___flge@ff2
 20876  176C  319D  25DA  3191   	fcall	___flge
 20877  176F  1C03               	btfss	3,0
 20878  1770  2F78               	goto	l17966
 20879                           
 20880                           ;task.c: 970: {
 20881                           ;task.c: 971: PWM=5;
 20882  1771  3040               	movlw	64
 20883  1772  0021               	movlb	1	; select bank1
 20884  1773  00C3               	movwf	(_PWM+3)^(0+128)
 20885  1774  30A0               	movlw	160
 20886  1775                     L26:	
 20887  1775  00C2               	movwf	(_PWM+2)^(0+128)
 20888  1776  01C1               	clrf	(_PWM+1)^(0+128)
 20889  1777  01C0               	clrf	_PWM^(0+128)
 20890  1778                     l17966:	
 20891                           
 20892                           ;task.c: 972: }
 20893                           ;task.c: 974: bost_pwm_value = (unsigned int)PWM;
 20894  1778  0021               	movlb	1	; select bank1
 20895  1779  0843               	movf	(_PWM+3)^(0+128),w
 20896  177A  0020               	movlb	0	; select bank0
 20897  177B  00DD               	movwf	___fltol@f1+3
 20898  177C  0021               	movlb	1	; select bank1
 20899  177D  0842               	movf	(_PWM+2)^(0+128),w
 20900  177E  0020               	movlb	0	; select bank0
 20901  177F  00DC               	movwf	___fltol@f1+2
 20902  1780  0021               	movlb	1	; select bank1
 20903  1781  0841               	movf	(_PWM+1)^(0+128),w
 20904  1782  0020               	movlb	0	; select bank0
 20905  1783  00DB               	movwf	___fltol@f1+1
 20906  1784  0021               	movlb	1	; select bank1
 20907  1785  0840               	movf	_PWM^(0+128),w
 20908  1786  0020               	movlb	0	; select bank0
 20909  1787  00DA               	movwf	___fltol@f1
 20910  1788  318E  2674  3191   	fcall	___fltol
 20911  178B  085B               	movf	?___fltol+1,w
 20912  178C  0021               	movlb	1	; select bank1
 20913  178D  00C5               	movwf	(_bost_pwm_value+1)^(0+128)
 20914  178E  0020               	movlb	0	; select bank0
 20915  178F  085A               	movf	?___fltol,w
 20916  1790  0021               	movlb	1	; select bank1
 20917  1791  00C4               	movwf	_bost_pwm_value^(0+128)
 20918                           
 20919                           ;task.c: 976: if(PID_CC_discharge.SetPoint==0)
 20920  1792  0023               	movlb	3	; select bank3
 20921  1793  084A               	movf	(_PID_CC_discharge+3)^(0+384),w
 20922  1794  0449               	iorwf	(_PID_CC_discharge+2)^(0+384),w
 20923  1795  0448               	iorwf	(_PID_CC_discharge+1)^(0+384),w
 20924  1796  0447               	iorwf	_PID_CC_discharge^(0+384),w
 20925  1797  1D03               	skipz
 20926  1798  2F9C               	goto	l17972
 20927                           
 20928                           ;task.c: 977: {
 20929                           ;task.c: 978: bost_pwm_value = 0;
 20930  1799  0021               	movlb	1	; select bank1
 20931  179A  01C4               	clrf	_bost_pwm_value^(0+128)
 20932  179B  01C5               	clrf	(_bost_pwm_value+1)^(0+128)
 20933  179C                     l17972:	
 20934                           
 20935                           ;task.c: 979: }
 20936                           ;task.c: 981: Set_Bost_Pwm_Duty(bost_pwm_value);
 20937  179C  0021               	movlb	1	; select bank1
 20938  179D  31B4  2402  3191   	fcall	PL66	;call to abstracted procedure
 20939  17A0  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 20940                           
 20941                           ;task.c: 983: limit_power_pid_flag=0x00;
 20942  17A3  0023               	movlb	3	; select bank3
 20943  17A4  01C2               	clrf	_limit_power_pid_flag^(0+384)
 20944                           
 20945                           ;task.c: 986: }
 20946  17A5  2FCA               	goto	l17986
 20947  17A6                     l17976:	
 20948                           
 20949                           ;task.c: 987: else if((discharge_current_value>discharge_i_limit)&&(discharge_index==0x0
      +                          2))
 20950  17A6  0025               	movlb	5	; select bank5
 20951  17A7  31B4  2423  3191   	fcall	PL74	;call to abstracted procedure
 20952  17AA  319B  231C  3191   	fcall	___lwtofl
 20953  17AD  31B3  23BC  3191   	fcall	PL20	;call to abstracted procedure
 20954  17B0  319D  25DA  3191   	fcall	___flge
 20955  17B3  1803               	btfsc	3,0
 20956  17B4  2FCA               	goto	l17986
 20957  17B5  0021               	movlb	1	; select bank1
 20958  17B6  0854               	movf	_discharge_index^(0+128),w
 20959  17B7  3A02               	xorlw	2
 20960  17B8  1D03               	skipz
 20961  17B9  2FCA               	goto	l17986
 20962                           
 20963                           ;task.c: 988: {
 20964                           ;task.c: 989: if(bost_pwm_value>10)
 20965  17BA  3000               	movlw	0
 20966  17BB  0245               	subwf	(_bost_pwm_value+1)^(0+128),w
 20967  17BC  300B               	movlw	11
 20968  17BD  1903               	skipnz
 20969  17BE  0244               	subwf	_bost_pwm_value^(0+128),w
 20970  17BF  1C03               	skipc
 20971  17C0  2FC4               	goto	l17984
 20972                           
 20973                           ;task.c: 990: {
 20974                           ;task.c: 991: bost_pwm_value = bost_pwm_value-1;
 20975  17C1  30FF               	movlw	255
 20976  17C2  07C4               	addwf	_bost_pwm_value^(0+128),f
 20977  17C3  3DC5               	addwfc	(_bost_pwm_value+1)^(0+128),f
 20978  17C4                     l17984:	
 20979                           
 20980                           ;task.c: 992: }
 20981                           ;task.c: 994: Set_Bost_Pwm_Duty(bost_pwm_value);
 20982  17C4  31B4  2402  3191   	fcall	PL66	;call to abstracted procedure
 20983  17C7  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 20984  17CA                     l17986:	
 20985                           
 20986                           ;task.c: 995: }
 20987                           ;task.c: 997: battery_low_time_count=0;
 20988  17CA  0024               	movlb	4	; select bank4
 20989  17CB  01BC               	clrf	_battery_low_time_count^(0+512)
 20990  17CC  01BD               	clrf	(_battery_low_time_count+1)^(0+512)
 20991                           
 20992                           ;task.c: 999: }
 20993  17CD  2FFD               	goto	l1361
 20994  17CE                     l17988:	
 20995                           
 20996                           ;task.c: 1000: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge_index==0
      +                          x02))
 20997  17CE  31B4  2480  3191   	fcall	PL92	;call to abstracted procedure
 20998  17D1  319B  231C  3191   	fcall	___lwtofl
 20999  17D4  31B3  23B3  3191   	fcall	PL18	;call to abstracted procedure
 21000  17D7  31B4  24DF  3191   	fcall	PL130	;call to abstracted procedure
 21001  17DA  319D  25DA  3191   	fcall	___flge
 21002  17DD  1803               	btfsc	3,0
 21003  17DE  2FCA               	goto	l17986
 21004  17DF  0021               	movlb	1	; select bank1
 21005  17E0  0854               	movf	_discharge_index^(0+128),w
 21006  17E1  3A02               	xorlw	2
 21007  17E2  1D03               	skipz
 21008  17E3  2FCA               	goto	l17986
 21009                           
 21010                           ;task.c: 1001: {
 21011                           ;task.c: 1003: battery_low_time_count++;
 21012  17E4  0024               	movlb	4	; select bank4
 21013  17E5  0ABC               	incf	_battery_low_time_count^(0+512),f
 21014  17E6  1903               	skipnz
 21015  17E7  0ABD               	incf	(_battery_low_time_count+1)^(0+512),f
 21016                           
 21017                           ;task.c: 1005: if(battery_low_time_count>2000)
 21018  17E8  3007               	movlw	7
 21019  17E9  023D               	subwf	(_battery_low_time_count+1)^(0+512),w
 21020  17EA  30D1               	movlw	209
 21021  17EB  1903               	skipnz
 21022  17EC  023C               	subwf	_battery_low_time_count^(0+512),w
 21023  17ED  1C03               	skipc
 21024  17EE  2FFD               	goto	l1361
 21025                           
 21026                           ;task.c: 1006: {
 21027                           ;task.c: 1007: discharge_index=0x03;
 21028  17EF  3003               	movlw	3
 21029  17F0  0021               	movlb	1	; select bank1
 21030  17F1  00D4               	movwf	_discharge_index^(0+128)
 21031                           
 21032                           ;task.c: 1009: bost_pwm_value=2;
 21033  17F2  3002               	movlw	2
 21034                           
 21035                           ;task.c: 1011: Set_Bost_Pwm_Duty(bost_pwm_value);
 21036  17F3  31B3  23D2  3191   	fcall	PL54	;call to abstracted procedure
 21037  17F6  318D  256C  3191   	fcall	_Set_Bost_Pwm_Duty
 21038                           
 21039                           ;task.c: 1015: discharge_led_status=0x00;
 21040  17F9  0024               	movlb	4	; select bank4
 21041  17FA  01BC               	clrf	_battery_low_time_count^(0+512)
 21042  17FB  01BD               	clrf	(_battery_low_time_count+1)^(0+512)
 21043  17FC                     l1466:	
 21044                           ;task.c: 1017: while(1);
 21045                           
 21046  17FC  2FFC               	goto	l1466
 21047  17FD                     l1361:	
 21048                           
 21049                           ;task.c: 1024: }
 21050                           ;task.c: 1026: }
 21051                           ;task.c: 1028: handle_an10_process_flag=0x00;
 21052  17FD  0022               	movlb	2	; select bank2
 21053  17FE  01A9               	clrf	_handle_an10_process_flag^(0+256)
 21054  17FF  0008               	return
 21055  1800                     __end_of_handle_ad_loop:	


Data Sizes:
    Strings     0
    Constant    512
    Data        119
    BSS         433
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      76
    BANK1            80     32      79
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      0      80
    BANK5            80      4      76
    BANK6            80      0      28
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), uart1_rx_buf(BANK8[80]), 

    pid_init@pp	PTR struct PID_VAR size(2) Largest target is 28
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), 

    pid_calc@pp	PTR struct PID_VAR size(2) Largest target is 28
		 -> PID_CC_discharge(BANK3[28]), PID_CV_charge(BANK5[28]), PID_CC_charge(BANK6[28]), 

    crc16@puchMsg	PTR volatile unsigned char  size(2) Largest target is 80
		 -> uart1_tx_buf(BANK7[80]), uart1_rx_buf(BANK8[80]), 

    uart_send_point	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_Bost_Pwm_Duty

Critical Paths under _main in BANK0

    _main->_handle_ad_loop
    _main->_handle_uart_rx_buf
    _main->_scan_key_value
    _scan_key_value->_eeprom_write
    _read_param_eeprom->___fldiv
    _auto_system->___flge
    _auto_system->_eeprom_write
    _handle_uart_rx_buf->___flge
    _handle_uart_rx_buf->_eeprom_write
    ___lbtofl->___flpack
    _handle_task_process->_eeprom_write
    _handle_ad_loop->___flge
    _start_ad_convert->___lwdiv
    ___lwdiv->___wmul
    _Mppt_Charge->___flge
    _pid_calc->___flge
    ___flsub->___fladd
    ___flge->___fldiv
    ___awtofl->___flpack
    ___lwtofl->___lwdiv
    ___fltol->___fldiv
    _application_init->___fldiv
    _pid_init->_memset
    _Key_Menu->_eeprom_write
    _eeprom_write->___fltol
    ___fladd->___flmul
    ___flmul->___lwtofl
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _middle_init->_auto_system
    _auto_system->_start_ad_convert
    _handle_ad_loop->_pid_calc
    _Mppt_Charge->_pid_calc

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_handle_ad_loop

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  421732
                           _Key_Menu
                   _application_init
                        _driver_init
                     _handle_ad_loop
                _handle_task_process
                 _handle_uart_rx_buf
                        _middle_init
                     _scan_key_value
 ---------------------------------------------------------------------------------
 (1) _scan_key_value                                       8     8      0   12606
                                             70 BANK0      2     2      0
                                              0 BANK1      6     6      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _middle_init                                          0     0      0   75341
                        _auto_system
                  _read_param_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_param_eeprom                                    2     2      0   27999
                                             58 BANK0      2     2      0
                           ___awtofl
                            ___fldiv
                            ___flmul
                           ___lbtofl
                             ___lmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              3 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _auto_system                                          4     4      0   47342
                                             10 BANK1      4     4      0
                            ___fldiv
                             ___flge
                            ___flmul
                           ___lwtofl
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (1) _handle_uart_rx_buf                                   5     5      0   65726
                                             70 BANK0      2     2      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___lbtofl
                           ___lwtofl
                             ___wmul
                              _crc16
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                             _memset
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _crc16                                                9     6      3    1132
                                              3 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 (3) ___lbtofl                                             6     1      5    2584
                                             13 BANK0      6     1      5
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _handle_task_process                                  0     0      0   41238
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                          _delay_1us
                           _delay_ms
                       _eeprom_write
                           _pid_init
 ---------------------------------------------------------------------------------
 (1) _handle_ad_loop                                       6     6      0  188805
                                             70 BANK0      2     2      0
                                              0 BANK5      4     4      0
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                    _Enable_Buck_Pwm
                        _Mppt_Charge
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtofl
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lldiv
                            ___lwdiv
                           ___lwtofl
                             ___wmul
                          _delay_1us
                           _delay_ms
                           _pid_calc
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (3) _start_ad_convert                                    63    61      2    1879
                                             16 BANK0     52    50      2
                                              0 BANK1     10    10      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     703
                                              9 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_1us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     906
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     395
                                              3 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _Mppt_Charge                                          0     0      0   77066
                  _Set_Buck_Pwm_Duty
                            ___fladd
                             ___flge
                            ___fltol
                           ___lwtofl
                           _pid_calc
 ---------------------------------------------------------------------------------
 (2) _pid_calc                                            32    28      4   44055
                                              0 BANK1     32    28      4
                           ___awtofl
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    6689
                                             54 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8   14468
                                             58 BANK0     12     4      8
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtofl                                             9     5      4    5015
                                             13 BANK0      5     1      4
                           ___flpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwtofl                                             4     0      4    6930
                                             16 BANK0      4     0      4
                           ___flpack
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    3377
                                             58 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Enable_Buck_Pwm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _driver_init                                          0     0      0       0
                           _Init_Ird
                           _init_adc
                     _init_interrupt
                           _init_key
                           _init_osc
                          _init_port
                           _init_pwm
                        _init_timer1
                         _init_uart1
 ---------------------------------------------------------------------------------
 (2) _init_uart1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Ird                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0   25425
                            ___fladd
                            ___fldiv
                            ___flmul
                           _pid_init
 ---------------------------------------------------------------------------------
 (2) _pid_init                                             2     0      2     778
                                             11 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     414
                                              3 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Key_Menu                                             7     3      4   12591
                                             70 BANK0      1     1      0
                                              0 BANK1      4     0      4
                   _Disable_Bost_Pwm
                   _Disable_Buck_Pwm
                    _Enable_Bost_Pwm
                  _Set_Bost_Pwm_Duty
                  _Set_Buck_Pwm_Duty
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         2     1      1    3450
                                             68 BANK0      2     1      1
                            ___fldiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    2061
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Set_Buck_Pwm_Duty                                    4     2      2    1920
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Set_Bost_Pwm_Duty                                    4     2      2    5005
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Enable_Bost_Pwm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Buck_Pwm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Bost_Pwm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6    2553
                                              3 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             15     7      8    6316
                                             39 BANK0     15     7      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             19    11      8    9509
                                             20 BANK0     19    11      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             19    11      8    8822
                                             39 BANK0     19    11      8
                            ___flmul (ARG)
                           ___flpack
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6    2553
                                              3 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 12    12      0     597
                                              4 COMMON     8     8      0
                                              0 BANK0      3     3      0
                 i1_Disable_Bost_Pwm
                i1_Set_Bost_Pwm_Duty
 ---------------------------------------------------------------------------------
 (8) i1_Set_Bost_Pwm_Duty                                  4     2      2     485
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_Disable_Bost_Pwm                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Key_Menu
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     _delay_ms
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
   _application_init
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _pid_init
       _memset
   _driver_init
     _Init_Ird
     _init_adc
     _init_interrupt
     _init_key
     _init_osc
     _init_port
     _init_pwm
     _init_timer1
     _init_uart1
   _handle_ad_loop
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Enable_Buck_Pwm
     _Mppt_Charge
       _Set_Buck_Pwm_Duty
       ___fladd
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtofl
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _pid_calc
         ___awtofl
           ___flpack
           ___wmul (ARG)
         ___fladd
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flge
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flsub
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___awtofl
       ___flpack
       ___wmul (ARG)
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flge
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lldiv
     ___lwdiv
       ___wmul (ARG)
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _delay_1us
     _delay_ms
     _pid_calc
       ___awtofl
         ___flpack
         ___wmul (ARG)
       ___fladd
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flsub
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _start_ad_convert
       ___lwdiv
         ___wmul (ARG)
   _handle_task_process
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___fladd
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _delay_1us
     _delay_ms
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _pid_init
       _memset
   _handle_uart_rx_buf
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     ___awtofl
       ___flpack
       ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flge
       ___awtofl (ARG)
         ___flpack
         ___wmul (ARG)
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul (ARG)
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___flmul
       ___flpack
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lbtofl
       ___flpack
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _crc16
     _delay_ms
     _eeprom_read
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _memset
   _middle_init
     _auto_system
       ___fldiv
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flge
         ___awtofl (ARG)
           ___flpack
           ___wmul (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtofl
         ___flpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
       _eeprom_read
       _eeprom_write
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
               ___wmul (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___flpack
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
       _start_ad_convert
         ___lwdiv
           ___wmul (ARG)
     _read_param_eeprom
       ___awtofl
         ___flpack
         ___wmul (ARG)
       ___fldiv
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___flmul
         ___flpack
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lbtofl
         ___flpack
       ___lmul
       _eeprom_read
   _scan_key_value
     _Disable_Bost_Pwm
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm
     _Set_Bost_Pwm_Duty
     _Set_Buck_Pwm_Duty
     _delay_ms
     _eeprom_write
       ___fldiv (ARG)
         ___flmul (ARG)
           ___flpack
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
             ___wmul (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___flpack
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)

 _isr (ROOT)
   i1_Disable_Bost_Pwm
   i1_Set_Bost_Pwm_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      4      4C      15       95.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      1C      17       35.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      50      19      100.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     2A0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     2A0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Mar 30 17:23:51 2019

        _step_01_load_percent 0157                  ___fldiv@cntr 0057                  ___fldiv@sign 0059  
                 __CFG_CP$OFF 0000                            PL2 26BC                            PL4 3397  
                          PL6 26FC                            PL8 1EE1              ??_init_interrupt 0023  
                          l43 0B49                            _RD 0CA8                            _WR 0CA9  
                          _t1 0149                            _t2 014A                            _t3 014B  
                          _t4 014C                            _t5 01C5           ___wmul@multiplicand 0025  
                ___flpack@arg 0023                           PL10 3742                           PL20 33BC  
                         PL12 1EF4                           PL30 2789                           PL22 0DE4  
                         PL14 06AF                           PL40 2791                           PL32 06C6  
                         PL24 0E00                           PL16 2775                           PL50 1F15  
                         PL42 37C8                           PL34 06CF                           PL26 33C5  
                         PL18 33B3                           PL60 33FB                           PL52 1F24  
                         PL44 1F04                           PL36 06D8                           PL28 37BA  
                         PL70 27BF                           PL62 1F37                           PL54 33D2  
                         PL46 27A9                           PL38 37C4                   __CFG_LVP$ON 0000  
                         PL80 1F48                           PL72 340A                           PL64 0E25  
                         PL56 06E1                           PL48 0E10                           PL90 3471  
                         PL82 3453                           PL74 3423                           PL66 3402  
                         PL58 33DC                           PL92 3480                           PL84 0704  
                         PL76 343B                           PL68 06EA                           PL94 3486  
                         PL86 345C                           PL78 06F5                           PL96 3494  
                         PL88 0E36                           PL98 34A2                  ___flpack@exp 0027  
                         l512 2267                           l542 0B3C                           l528 0A8E  
                         l641 098B                           l812 0923                           l821 0968  
                         l646 0A15                           l649 09B9                           l817 0955  
                         l885 1DD0                           _GIE 005F                           _RC1 0071  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                         _PR6 041D                           _PSA 04AB                           _PWM 00C0  
                         _b_v 0120                           _p_v 0238                           _isr 0004  
               _rx_frame_kind 0144             _receive_bit_count 0143                  __CFG_BORV$LO 0000  
                         wreg 0009                  ___flmul@cntr 0045                  ___flmul@sign 0046  
                        PL100 34B0                          PL110 1F4D                          PL102 070D  
                        PL200 07E2                          PL120 0735                          PL112 27CF  
                        PL104 0E3F                          PL210 3554                          PL202 0E5B  
                        PL130 34DF                          PL122 0746                          PL114 0713  
                        PL106 34BE                          PL220 27E6                          PL212 355D  
                        PL204 0E61                          PL140 1F63                          PL132 34F0  
                        PL124 0757                          PL116 0724                          PL108 34C6  
                        PL230 1FC1                          PL222 1FB5                          PL214 3566  
                        PL206 0EBB                          PL150 0796                          PL142 3521  
                        PL134 3501                          PL126 0768                          PL118 34CE  
                        PL240 0E66                          PL232 1FC7                          PL224 07EB  
                        PL216 356F                          PL208 354B                          PL160 1F75  
                        PL152 079C                          PL144 078A                          PL136 3511  
                        PL128 0779                          PL250 1FDE                          PL242 358B  
                        PL234 07F1                          PL226 357E                          PL218 3576  
                        PL170 37F3                          PL162 07B4                          PL154 07A2  
                        PL146 0790                          PL138 1F53                          PL260 27F3  
                        PL252 3591                          PL244 1FD2                          PL236 1FCD  
                        PL228 1FBB                          PL180 3539                          PL172 07C8  
                        PL164 07BB                          PL156 07A8                          PL148 1F6D  
                        PL270 0E70                          PL262 3596                          PL254 0FE3  
                        PL246 1FD8                          PL238 3584                          PL190 27E0  
                        PL182 0E50                          PL174 0E4B                          PL166 0E45  
                        PL158 07AE                          PL272 27FC                          PL264 27F8  
                        PL256 27EE                          PL248 07F8                          PL192 3544  
                        PL184 1F85                          PL176 07CF                          PL168 3530  
                        PL274 35A0                          PL266 0E6B                          PL258 0EE7  
                        PL194 07DB                          PL186 1F8F                          PL178 1F7D  
                        PL268 359B                          PL196 1FA3                          PL188 1F99  
                        PL198 1FAC                 ___flpack@sign 0028                  ___fltol@exp1 0063  
                        _C1IE 0495                          _C1IF 0095                          l1303 2A53  
                        l2112 1E9C                          l1312 2B0A                          l1341 1282  
                        l1309 2ACE                          l1350 1232                          l1502 0B8B  
                        l2223 269B                          l1344 11C8                          l2137 1E08  
                        l1361 17FD                          l1337 2CAF                          l2171 0EA3  
                        l1364 12E3                          l1356 127E                          l1525 0D6B  
                        l2078 2373                          l1455 16E8                          l1296 29BC  
                        l1369 132E                          l1490 36E4                          l1466 17FC  
                        l1478 35C6                          l1814 061F                          l1831 2654  
                        l1853 0B68                          ?_isr 0070                          _PEIE 005E  
                        _RCIE 048D                          _RCIF 008D                          u9445 2A01  
                        u9535 2B02                          u9465 2A49                          u8841 2653  
                        u9495 2AB3                          u8795 0B45                          u8975 3764  
                        _TMR0 0015                          _TXIE 048C                          _WREN 0CAA  
                        _TXIF 008C                ??_eeprom_write 0065               _an10_time_count 01A8  
                __CFG_WRT$OFF 0000                          _main 091D                  ?_driver_init 0070  
                        fsr0h 0005                          fsr1h 0007                          fsr0l 0004  
                        indf0 0000                          indf1 0001                          fsr1l 0006  
                        btemp 007E      handle_uart_rx_buf@crc_in 0066                 __CFG_BOREN$ON 0000  
                        ltemp 007E            _uart_send_end_flag 0151                          start 027D  
                        ttemp 007E                          wtemp 007E                 __CFG_IESO$OFF 0000  
                ?_auto_system 0070                 __CFG_MCLRE$ON 0000         _load_short_time_count 01B4  
       _battery_voltage_value 0068     __size_of_application_init 0043                  ?_middle_init 0070  
           start_ad_convert@i 00A9             start_ad_convert@j 00A8           i1_Set_Bost_Pwm_Duty 0EC4  
                       ??_isr 0074                 __CFG_PLLEN$ON 0000             _temper_time_count 01C6  
                       l12396 0F78                         l17002 09F6                         l17100 0A12  
                       l17110 0A26                         l15346 26A5                         l17132 0A3E  
                       l17044 09FD                         l16430 0D94                         l16422 0B3F  
                       l19000 1E93                         l17400 2B4A                         l17312 29B2  
                       l17320 29BE                         l18032 0BB7                         l18024 0BAD  
                       l18016 0B97                         l18008 0B8C                         l16520 2269  
                       l19002 1E98                         l17402 2B4C                         l18026 0BB1  
                       l18018 0BA5                         l14826 0828                         l16530 227F  
                       l16604 36DC                         l17412 2BAD                         l18116 0C10  
                       l18028 0BB4                         l16436 23B5                         l19110 2334  
                       l19014 1EB5                         l16550 35BE                         l17350 2A56  
                       l18038 0BBC                         l18310 0B9A                         l19008 1EAA  
                       l16712 0AC7                         l14952 0FE9                         l19200 0864  
                       l16624 36EF                         l17440 2C0C                         l17432 2BEF  
                       l17424 2BBF                         l17360 2AC1                         l18240 0CB8  
                       l17184 0A7F                         l17280 095D                         l17272 094B  
                       l17256 092B                         l19034 22A2                         l19122 2345  
                       l19114 2339                         l19026 1ECA                         l17514 11C9  
                       l17338 2A08                         l18314 2CB2                         l16474 25D9  
                       l17186 0A81                         l17098 0A04                         l16636 36F0  
                       l16556 35BF                         l17540 1233                         l17380 2B0F  
                       l16484 25ED                         l16476 25DB                         l19062 22E0  
                       l19038 22B3                         l19126 234A                         l16814 0ADF  
                       l16806 0AD3                         l16670 0A90                         l14958 0FED  
                       l19222 3739                         l19214 372A                         l16638 3701  
                       l16590 35E3                         l17630 1342                         l17542 1236  
                       l17446 2C33                         l17366 2AD3                         l17382 2B11  
                       l17294 298B                         l18182 0C6F                         l19056 22C3  
                       l16912 0DA7                         l19160 0E98                         l19144 0E7D  
                       l19240 1110                         l16576 35D1                         l17608 12FD  
                       l17464 2C78                         l17288 0970                         l16754 0ACD  
                       l19170 0EAC                         l19146 0E82                         l19074 1DF1  
                       l19226 373D                         l16586 37B7                         l17802 1519  
                       l17730 1443                         l17706 1401                         l17650 1381  
                       l17466 2C7C                         l17482 1176                         l18434 027F  
                       l19092 231E                         l16852 0AE7                         l16908 0B2B  
                       l19164 0E9F                         l19236 110A                         l16588 35D2  
                       l17564 127F                         l17484 1178                         l18612 0627  
                       l18540 04D6                         l16940 0996                         l16918 0DCF  
                       l16598 36DB                         l17902 1687                         l17566 1284  
                       l17398 2B44                         l18550 05CB                         l16934 0988  
                       l16950 099A                         l19088 230D                         l18712 1B74  
                       l18720 1B89                         l17824 1551                         l18624 062F  
                       l18552 05E2                         l16960 09BD                         l19280 099F  
                       l16944 0998                         l16936 098F                         l16952 09B0  
                       l18802 1D9A                         l17906 1694                         l17754 1485  
                       l17826 1559                         l17682 13D2                         l17674 13BD  
                       l17666 13A9                         l17658 1395                         l17594 12E4  
                       l18482 0307                         l16938 0992                         l18812 1DB5  
                       l19196 085E                         l19188 0841                         l17940 16CA  
                       l17932 16B7                         l17916 16A8                         l17684 13D3  
                       l17596 12E7                         l18750 1BE4                         l18910 1B04  
                       l17870 1605                         l18590 060C                         l18920 2378  
                       l18816 1DC1                         l18808 1DAA                         l18744 1BCC  
                       l18736 1BB0                         l18728 1B9F                         l18752 1BEB  
                       l18930 238E                         l18922 237D                         l18762 1C47  
                       l18746 1BD2                         l18738 1BB5                         l18906 1AE3  
                       l18850 19E5                         l17962 1756                         l17946 16CF  
                       l17890 1665                         l17882 1659                         l17874 161B  
                       l17866 15EF                         l17858 15BB                         l17778 14CA  
                       l18932 2393                         l18924 2382                         l17972 179C  
                       l17948 16DE                         l18934 2398                         l18790 1D69  
                       l18782 1D5D                         l18758 1C2D                         l18838 1A0F  
                       l17966 1778                         l17894 166F                         l17878 1631  
                       l17886 1660                         l18694 068D                 ___fltol@sign1 0062  
                       l18960 1E41                         l17984 17C4                         l17976 17A6  
                       l18696 06A1                         l18970 1E59                         l18938 23A3  
                       l18794 1D7D                         l18778 1D49                         l18874 1A1A  
                       l17986 17CA                         l17898 167B                         l18964 1E4A  
                       l18948 2670                         l18892 1A62                         l18876 1A1E  
                       l17988 17CE      _uart1_receive_byte_count 00D9                         l18990 1E7B  
                       l18982 1E67                         l18798 1D8A                         l18992 1E80  
                       l18994 1E84                         l18988 1E76               __end_of___fladd 1EE1  
                       ?_main 0070               __end_of___fldiv 22FC                         _EEADR 0191  
             __end_of___flmul 236A                         _CARRY 0018                         _ANSA0 0C60  
                       _ANSA1 0C61                         _ANSB0 0C68                         _ANSA2 0C62  
                       _ANSB1 0C69                         _ANSA3 0C63               __end_of___flsub 2000  
                       _ANSB3 0C6B                         _ANSA5 0C65               __end_of___fltol 0EBB  
             __end_of___lldiv 086D                         u11201 04D4                         u12005 22D5  
                       u11045 0323                         u12125 0E85                         u12215 0853  
                       _T1CON 0018                         u12307 36DF                         u11605 19EE  
                       _CRCHi 3801                         u12255 3732                         u11575 19C1  
                       u12297 35C2                         _CRCLo 3901                         _IOCIE 005B  
                       _IOCIF 0058               __end_of___lwdiv 3742                         i1l262 017B  
                       i1l271 01C5                         i1l274 01C4                         i1l258 0176  
                       _RCREG 0199                         _RCSTA 019D                         _TMR1H 0017  
                       _TMR1L 0016                         _PWM_I 02A0                         _TXREG 019A  
                       _TXSTA 019E                  ?_init_timer1 0070           ___lmul@multiplicand 0027  
              __CFG_FCMEN$OFF 0000                 ___awtofl@sign 0031                         _crc16 0803  
                       _bt_id 00EC              _Disable_Buck_Pwm 0DA1  __size_of_handle_task_process 01E8  
        ?i1_Set_Bost_Pwm_Duty 0070                _charge_i_limit 02CC              _Disable_Bost_Pwm 0B62  
                Key_Menu@code 0066                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
                __end_ofPL100 34BE                  __end_ofPL110 1F53                  __end_ofPL102 0713  
                __end_ofPL200 07EB                  __end_ofPL120 0746                  __end_ofPL112 27E0  
                __end_ofPL104 0E45                  __end_ofPL210 355D                  __end_ofPL202 0E61  
                __end_ofPL130 34F0                  __end_ofPL122 0757                  __end_ofPL114 0724  
                __end_ofPL106 34C6                  __end_ofPL220 27EE                  __end_ofPL212 3566  
                __end_ofPL204 0E66                  __end_ofPL140 1F6D                  __end_ofPL132 3501  
                __end_ofPL124 0768                  __end_ofPL116 0735                  __end_ofPL108 34CE  
                __end_ofPL230 1FC7                  __end_ofPL222 1FBB                  __end_ofPL214 356F  
                __end_ofPL206 0EC4                  __end_ofPL150 079C                  __end_ofPL142 3530  
                __end_ofPL134 3511                  __end_ofPL126 0779                  __end_ofPL118 34DF  
                __end_ofPL240 0E6B                  __end_ofPL232 1FCD                  __end_ofPL224 07F1  
                __end_ofPL216 3576                  __end_ofPL208 3554                  __end_ofPL160 1F7D  
                __end_ofPL152 07A2                  __end_ofPL144 0790                  __end_ofPL136 3521  
                __end_ofPL128 078A                  __end_ofPL250 1FE4                  __end_ofPL242 3591  
                __end_ofPL234 07F8                  __end_ofPL226 3584                  __end_ofPL218 357E  
                __end_ofPL170 3800                  __end_ofPL162 07BB                  __end_ofPL154 07A8  
                __end_ofPL146 0796                  __end_ofPL138 1F63                  __end_ofPL260 27F8  
                __end_ofPL252 3596                  __end_ofPL244 1FD8                  __end_ofPL236 1FD2  
                __end_ofPL228 1FC1                  __end_ofPL180 3544                  __end_ofPL172 07CF  
                __end_ofPL164 07C8                  __end_ofPL156 07AE                  __end_ofPL148 1F75  
                __end_ofPL270 0E74                  __end_ofPL262 359B                  __end_ofPL254 0FE9  
                __end_ofPL246 1FDE                  __end_ofPL238 358B                  __end_ofPL190 27E6  
                __end_ofPL182 0E5B                  __end_ofPL174 0E50                  __end_ofPL166 0E4B  
                __end_ofPL158 07B4                  __end_ofPL272 2800                  __end_ofPL264 27FC  
                __end_ofPL256 27F3                  __end_ofPL248 07FE                  __end_ofPL192 354B  
                __end_ofPL184 1F8F                  __end_ofPL176 07DB                  __end_ofPL168 3539  
                __end_ofPL274 35A5                  __end_ofPL266 0E70                  __end_ofPL258 0EEB  
                __end_ofPL194 07E2                  __end_ofPL186 1F99                  __end_ofPL178 1F85  
                __end_ofPL268 35A0                  __end_ofPL196 1FAC                  __end_ofPL188 1FA3  
                __end_ofPL198 1FB5                _bost_pwm_value 00C4               __initialization 086D  
             _mppt_time_count 0250                  __end_of_main 0975             ??_Enable_Buck_Pwm 0023  
            __end_of_Key_Menu 0B3D        _battery_voltage_status 0127          _step_02_load_percent 015B  
            __end_of_Init_Ird 0F11             ??_Enable_Bost_Pwm 0023            start_ad_convert@ch 00A0  
                      ??_main 0068         start_ad_convert@ad_ch 00A7                        ?_crc16 0023  
              _index_01_count 0240                _index_02_count 0242                _index_03_count 0244  
       ??i1_Set_Bost_Pwm_Duty 0072                _index_04_count 0246                _index_05_count 0248  
                      _ADRESH 009C                        _ADRESL 009B                        _EEDATA 0193  
                      _CCPR1L 0291                        _CCPR3L 0311              __end_of___flpack 23B5  
                      _CCPR5L 031C                        _EECON1 0195                        _EECON2 0196  
               ??_Mppt_Charge 0066                _index_06_count 024A              __end_of___awtofl 2684  
                      _ANSELA 018C                        _ANSELB 018D              __end_of___lbtofl 2697  
                      _IOCBF4 1CB4                        _IOCBF7 1CB7              __end_of___lwtofl 1B30  
           _temperature_value 0124                        _OSCCON 0099                        _TMR0IE 005D  
                      _TMR0IF 005A                        _TMR0CS 04AD                        _TMR1IE 0488  
                      _TMR1IF 0088                        _TMR2IF 0089                        _TMR4IF 0099  
                      _TMR6IF 009B                        _TMR1ON 00C0                        _TMR2ON 00E2  
                      _TMR4ON 20BA                        _TMR6ON 20F2             ?_start_ad_convert 0030  
            __end_of_delay_ms 0B62                        _I_prev 01A4                __CFG_PWRTE$OFF 0000  
        __size_of_eeprom_read 0017            ??_start_ad_convert 0032                  _CCPTMRS0bits 029E  
                _CCPTMRS1bits 029F            _handle_uart_rx_buf 2CB0                        ___flge 1DDA  
                 isr@time_cnt 0021                        ___lmul 2697                _open_an10_time 0138  
                   ??___fladd 004F                        ___wmul 1108                     ??___fldiv 004F  
              __CFG_STVREN$ON 0000                     ??___flmul 003C                     ??___flsub 005E  
                   ??___fltol 005E                     ??___lldiv 002B                     ??___lwdiv 002D  
                      _ho_cnt 00CC                        _mi_cnt 01B6                        _load_I 022C  
            __end_of_init_adc 0F30                        _load_v 0230              __end_of_init_key 0F36  
                      _memset 0FE9              __end_of_init_osc 0F3E                        _se_cnt 01BA  
            __end_of_init_pwm 0FE3              __end_of_pid_calc 1DDA                        _ms_cnt 01B8  
            __end_of_pid_init 0DA1          __end_of_eeprom_write 0B84           ?_handle_uart_rx_buf 0070  
                _sys_power_ch 0147              ??_scan_key_value 00A0                    ___fladd@f1 0047  
                  ___fladd@f2 004B                    ___flge@ff1 005A                    ___flge@ff2 005E  
            _sleep_time_count 01BC                  crc16@puchMsg 0023                    ___fldiv@f1 004B  
                  ___fldiv@f2 0047                    ___fldiv@f3 0053          ??_handle_uart_rx_buf 0066  
     __end_of__initialization 091B               eeprom_read@addr 0023              _light_time_level 01A0  
                  ___flmul@f1 0034                    ___flmul@f2 0038                 __end_of_CRCHi 3901  
                  ___flsub@f1 005A                    ___flsub@f2 0056                 __end_of_CRCLo 3A01  
                  ___fltol@f1 005A           __end_of_Mppt_Charge 1B1C                    ___awtofl@c 002D  
                  ___lbtofl@c 0032          __size_of_driver_init 0011         Set_Buck_Pwm_Duty@duty 0023  
              __pcstackCOMMON 0070              _application_init 21D0                  __pidataBANK1 10F6  
                __pidataBANK2 1139                  __pidataBANK3 10EA                  __pidataBANK4 111D  
                __pidataBANK5 1156                    _adc_buffer 2370                 __end_of_crc16 082E  
        __size_of_auto_system 007E          _step_03_load_percent 015F                  _charge_index 00D3  
          __size_of_delay_1us 0009          __size_of_middle_init 0004                    __end_ofPL2 26FC  
                  __end_ofPL4 33B3                    __end_ofPL6 2775                    __end_ofPL8 1EF4  
                  ___lwtofl@c 0030           _shuchu_open_voltage 02E4          _uart_send_byte_count 014F  
          i1_Disable_Bost_Pwm 10CD                _OPTION_REGbits 0095             eeprom_write@value 0064  
                     ??_crc16 0026          __size_of_init_timer1 000D           ?i1_Disable_Bost_Pwm 0070  
                  __pbssBANK0 0068                    __pbssBANK1 00C0                    __pbssBANK2 0120  
                  __pbssBANK3 01A0                    __pbssBANK4 0220                    __pbssBANK5 02A0  
                  __pbssBANK6 0320                    __pbssBANK7 03A0                    __pbssBANK8 0420  
                   ?_Key_Menu 00A0                 _pid_calc$2870 00AC                 _pid_calc$2871 00B0  
                   ?_Init_Ird 0070               __CFG_VCAPEN$OFF 0000            __size_of_init_port 001C  
                  __pmaintext 091D                       ?___flge 005A                       ?___lmul 0023  
            _night_time_count 0234                       ?___wmul 0023      __end_of_Disable_Buck_Pwm 0DA7  
         _handle_task_process 0B84                 _PID_CC_charge 0320          ??i1_Disable_Bost_Pwm 0070  
                  __pintentry 0004      __end_of_Disable_Bost_Pwm 0B67       _handle_an0_process_flag 0128  
                     _BAUDCON 019F                       ?_memset 0023                     ?___flpack 0023  
              ___lmul@product 002B                     ?___awtofl 002D                     ?___lbtofl 002D  
     __size_of_handle_ad_loop EE78                     ?___lwtofl 0030                    _key1_index 01C1  
                     i1l15408 0EE4                       i1l15504 00AB                       i1l15514 00BE  
                     i1l15434 002C                       i1l15450 0044                       i1l15620 0185  
                     i1l15524 00D1                       i1l15606 0166                       i1l15534 00E4  
                     i1l15470 0068                       i1l15632 0195                       i1l15544 00F7  
                     i1l15464 005B                       i1l15730 024A                       i1l15714 0221  
                     i1l15642 01A3                       i1l15626 018D                       i1l15618 0183  
                     i1l15554 010A                       i1l15482 0083                       i1l15458 004D  
                     i1l15708 022C                       i1l15476 0075                       i1l15484 0085  
                     i1l15574 0133                       i1l15566 0122                       i1l15494 0098  
                     i1l15646 01A8                       i1l15576 0136                       i1l15674 01EB  
                     i1l15658 01BC                       i1l15586 0146                       i1l15596 0156  
                     i1l15686 0208                       _SP1BRGH 019C                       _SP1BRGL 019B  
                   ?_delay_ms 0023                    _bt_volt_00 0254                    _bt_volt_20 0258  
                  _bt_volt_40 025C                    _bt_volt_60 0260                    _bt_volt_80 0264  
        ?_handle_task_process 0070                    __stringtab 3800                   _Mppt_Charge 19A2  
                  ??_Key_Menu 0066                 _PID_CV_charge 02AC          _handle_scan_key_flag 012F  
           __end_of_delay_1us 0DE0                    ??_Init_Ird 0023               _Enable_Buck_Pwm 10C9  
      scan_key_value@key_temp 0066                     ?_init_adc 0070               _uart_send_point 0152  
                   ?_init_key 0070                     ?_init_osc 0070                     ?_init_pwm 0070  
                   ?_pid_calc 00A0               _Enable_Bost_Pwm 0DD2                     ?_pid_init 002B  
             _discharge_index 00D4       _have_person1_time_count 0131         __size_of_eeprom_write 001D  
             __size_of___flge 0040                       ___fladd 1E1A                       ___fldiv 2291  
             __size_of___lmul 0025                       ___flmul 22FC                       ___flsub 1FE4  
                     ___fltol 0E74                       ___lldiv 082E               __size_of___wmul 0015  
                  _light_mode 00D7                       ___lwdiv 371D                    _light_time 00DB  
                  _ird_status 0134          _step_04_load_percent 0163                    ??___flpack 0029  
              _day_time_count 02A4                    _init_uart1 0F67                    ??___awtofl 0031  
                  ??___lbtofl 0032               __size_of_memset 0017                _an0_time_count 01A6  
                     __ptext1 0975                       __ptext2 0DE0                       __ptext3 23B5  
                     __ptext4 2697                       __ptext5 2213                       __ptext6 2CB0  
                     __ptext7 2650                       __ptext8 0803                       __ptext9 2684  
                  ??___lwtofl 0034                     _T2CONbits 001C                  __size_of_isr 0279  
           __end_of_init_port 0F5A                     _T4CONbits 0417                     _IOCBFbits 0396  
                  ??_delay_ms 0025         _uart_send_delay_timer 0150                     _IOCBNbits 0395  
                   _T6CONbits 041E       __size_of_init_interrupt 0014         ??_handle_task_process 0066  
                     clrloop0 10DF                       _volt_id 00ED          end_of_initialization 091B  
             _key1_time_count 0135                _an1_time_count 01AA             _light_on_pv_level 02E0  
                     init_ram 10D2                       memset@c 0025                    ??_init_adc 0023  
                     memset@n 0027                       memset@p 0029                  _eeprom_write 0B67  
                  ??_init_key 0023                    ??_init_osc 0023                       initloop 10D3  
                  ??_init_pwm 0023                     _KEY_VALUE 00EB                    ??_pid_calc 00A4  
                   _KEY_STATE 0126                    ??_pid_init 002D      i1Set_Bost_Pwm_Duty@dduty 0070  
             ___lldiv@divisor 0023               ___lldiv@counter 002F                     _RCSTAbits 019D  
                     psplit$0 250055                       psplit$1 2A0056                       psplit$2 2A0057  
                __pstringtext 3800                 crc16@uchCRCHi 002A                 crc16@uchCRCLo 002B  
     _handle_an1_process_flag 012A              pid_calc@NowPoint 00A2                _an2_time_count 01AC  
                   _PORTBbits 000D                     _PORTCbits 000E     __size_of_start_ad_convert 0178  
        _limit_power_pid_flag 01C2   __end_ofi1_Set_Bost_Pwm_Duty 0EE7          _voltage_adjust_index 00EE  
            __CFG_FOSC$INTOSC 0000                     _TRISAbits 008C                     _TRISBbits 008D  
                   _TRISCbits 008E      _handle_an10_process_flag 0129       __end_of_Enable_Buck_Pwm 10CD  
                 ___fldiv@exp 0058             _have_person1_flag 00D5      __end_of_application_init 2213  
     __end_of_Enable_Bost_Pwm 0DD7           _scan_key_time_count 0145                   _CM1CON0bits 0111  
                 _CM1CON1bits 0112                   ___flmul@exp 0040                _an3_time_count 01AE  
                _led_out_ctrl 00D6                   _CCP1CONbits 0293                 ??_eeprom_read 0023  
                   _TXSTAbits 019E                   _CCP3CONbits 0313                   _CCP5CONbits 031E  
              __end_of___flge 1E1A                __end_of___lmul 26BC                __end_of___wmul 111D  
               delay_ms@count 0023                   ?_init_uart1 0070          _step_05_load_percent 0167  
           _read_param_eeprom 23B5                _handle_ad_loop 2988                _an4_time_count 01B0  
              __end_of_memset 1000                 _system_status 00D8            ?_read_param_eeprom 0070  
        _charge_current_value 00C8          _dianchi_qianya_baohu 0268                   __end_ofPL10 37BA  
                 __end_ofPL20 33C5                   __end_ofPL12 1F04                   __end_ofPL30 2791  
                 __end_ofPL22 0E00                   __end_ofPL14 06C6                   __end_ofPL40 27A9  
                 __end_ofPL32 06CF                   __end_ofPL24 0E10                   __end_ofPL16 2789  
                 __end_ofPL50 1F24                   __end_ofPL42 37F3                   __end_ofPL34 06D8  
                 __end_ofPL26 33D2                   __end_ofPL18 33BC                   __end_ofPL60 3402  
                 __end_ofPL52 1F37                   __end_ofPL44 1F15                   __end_ofPL36 06E1  
                 __end_ofPL28 37C4                   __end_ofPL70 27CF                   __end_ofPL62 1F48  
                 __end_ofPL54 33DC                   __end_ofPL46 27BF                   __end_ofPL38 37C8  
                 __end_ofPL80 1F4D                   __end_ofPL72 3423                   __end_ofPL64 0E36  
                 __end_ofPL56 06EA                   __end_ofPL48 0E25                   __end_ofPL90 3480  
                 __end_ofPL82 345C                   __end_ofPL74 343B                   __end_ofPL66 340A  
                 __end_ofPL58 33FB                   __end_ofPL92 3486                   __end_ofPL84 070D  
                 __end_ofPL76 3453                   __end_ofPL68 06F5                   __end_ofPL94 3494  
                 __end_ofPL86 3471                   __end_ofPL78 0704                   __end_ofPL96 34A2  
                 __end_ofPL88 0E3F                   __end_ofPL98 34B0           start_initialization 086D  
        _dianchi_qianya_huifu 02D0       _handle_an9_process_flag 012E                     _Load_Pmax 02C8  
           _Set_Buck_Pwm_Duty 0DA7                    isr@r1_data 0020                   __end_of_isr 027D  
           pnum$text6_split_1 0055           ??_read_param_eeprom 005A            ?_Set_Buck_Pwm_Duty 0023  
           _discharge_i_baohu 02D4             _discharge_i_limit 02D8          start_ad_convert@ad_h 00A1  
        start_ad_convert@ad_l 00A3                 ??_driver_init 0023   __size_of_handle_uart_rx_buf D9FF  
        start_ad_convert@temp 00A5             __size_of_Key_Menu 00B3           ??_Set_Buck_Pwm_Duty 0025  
           __size_of_Init_Ird 0015                 ??_auto_system 0066       _discharge_current_value 00CA  
               ??_middle_init 0066                      ??___flge 0062                      ??___lmul 002B  
                    ??___wmul 0027           __end_of_eeprom_read 2667     __end_of_read_param_eeprom 2650  
        _over_load_time_count 0252        __end_of_handle_ad_loop 1800             ?_Disable_Buck_Pwm 0070  
           _handle_short_flag 0130                   __pdataBANK1 00DD                   __pdataBANK2 0153  
                 __pdataBANK3 01E3                   __pdataBANK4 0254                   __pdataBANK5 02C8  
           Key_Menu@key_value 00A0                      ??_memset 0029             ?_Disable_Bost_Pwm 0070  
     _handle_an2_process_flag 012B                 _open_an0_time 0137                 _open_an1_time 0139  
                  pid_calc@dk 00B4                 _open_an2_time 013A            ??_Disable_Buck_Pwm 0023  
                  pid_calc@pp 00A0                   crc16@uIndex 0026                 _open_an3_time 013B  
               _open_an4_time 013C                 _open_an9_time 013D            ??_Disable_Bost_Pwm 0023  
           __size_of___flpack 004B     __end_of_Set_Buck_Pwm_Duty 0DD2             __size_of___awtofl 001D  
           __size_of___lbtofl 0013                   __pbssBIGRAM 2370                 ??_init_timer1 0023  
                 __pbssCOMMON 007C                     ___latbits 0003             _pv_voltage_status 0142  
           __size_of___lwtofl 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
               __pcstackBANK5 02E8                    pid_init@pp 002B                _init_interrupt 0F78  
            ?_Enable_Buck_Pwm 0070              ?_Enable_Bost_Pwm 0070             __size_of_delay_ms 0025  
                ?_Mppt_Charge 0070              eeprom_write@addr 0065           __size_of_init_uart1 0011  
                   _delay_1us 0DD7             __size_of_init_adc 001F       __size_of_scan_key_value 0115  
           __size_of_init_key 0006             __size_of_init_osc 0008             __size_of_init_pwm 0057  
           __size_of_pid_calc 02AA              ___lwdiv@dividend 002B             __size_of_pid_init 000A  
           _system_check_time 0148           __end_of_driver_init 0EFC                      ?___fladd 0047  
                    ?___fldiv 0047                      ?___flmul 0034                      ?___flsub 0056  
                    ?___fltol 005A                      ?___lldiv 0023               ?_handle_ad_loop 0070  
                    ?___lwdiv 0029   __size_ofi1_Disable_Bost_Pwm 0005           __end_of_auto_system 2291  
         __end_of_middle_init 0DE4              _start_ad_convert 35A5        __end_of_init_interrupt 0F8C  
            __CFG_WDTE$NSLEEP 0000                     _load_cc_I 00E1                __size_of_crc16 002B  
            ___lwdiv@quotient 002E                    pnum$text11 002A                     _init_port 0F3E  
           _Set_Bost_Pwm_Duty 0D6C                     _pid_index 0140           __end_of_init_timer1 0F67  
          ?_Set_Bost_Pwm_Duty 0023                ___wmul@product 0027                      _LATAbits 010C  
                    _LATCbits 010E                _an9_time_count 01B2               pid_calc@PWM_var 00B8  
                   delay_ms@i 0025                     delay_ms@j 0027                     clear_ram0 10DE  
                 _eeprom_read 2650                      _PIE1bits 0091                      _PIE2bits 0092  
             _open_sleep_time 013F                    ?_delay_1us 0070                     _nop_index 0136  
             _sys_temper_flag 016F                      _PIR1bits 0011                      _PIR2bits 0012  
         ??_Set_Bost_Pwm_Duty 0025    __size_of_read_param_eeprom 029B        Set_Bost_Pwm_Duty@dduty 0023  
            _PID_CC_discharge 01C7           _open_discharge_time 013E       _handle_an3_process_flag 012C  
                  _ADCON0bits 009D                    _ADCON1bits 009E             ___wmul@multiplier 0023  
 __end_of_handle_task_process 0D6C    __size_of_Set_Buck_Pwm_Duty 002B               ?_init_interrupt 0070  
          _light_off_pv_level 02DC     __end_of_Set_Bost_Pwm_Duty 0D97           _dianchi_guoya_baohu 0153  
         _cv_level_time_count 023E                     _work_mode 00DA           _dianchi_guoya_huifu 01E7  
           ?_application_init 0070             ___lmul@multiplier 0023                    ?_init_port 0070  
                    _Key_Menu 0A8A            ??_application_init 005A                      _Init_Ird 0EFC  
                 _driver_init 0EEB       read_param_eeprom@byte_h 005A       read_param_eeprom@byte_l 005B  
               _device_status 006A                   _auto_system 2213            _uart1_receive_flag 014D  
                  _APFCONbits 011D                   _middle_init 0DE0              __size_of___fladd 00C7  
            __size_of___fldiv 006B              __size_of___flmul 006E              __size_of___flsub 001C  
            __size_of___fltol 0047              __size_of___lldiv 003F                  ??_init_uart1 0023  
                _uart1_rx_buf 0420              _pv_voltage_value 00D0                      ___flpack 236A  
            __size_of___lwdiv 0025                      _bt_00_hv 0220                  _uart1_tx_buf 03A0  
                    _bt_00_lv 0224                      ___awtofl 2667                      ___lbtofl 2684  
          __end_of__stringtab 3801            _step_01_time_limit 00E5                      ___lwtofl 1B1C  
      _over_temper_time_count 01C4                      _charge_I 0228                   _init_timer1 0F5A  
           _system_time_count 01BE                      _delay_ms 0B3D            _load_voltage_value 00CE  
             ___lwdiv@divisor 0029               ___lwdiv@counter 002D                      _crc_data 007C  
                    __ptext10 0B84                      __ptext11 2988                      __ptext20 1DDA  
                    __ptext12 35A5                      __ptext21 2667                      __ptext13 371D  
                  _T1GCONbits 0019                      __ptext30 0F36                      __ptext22 1B1C  
                    __ptext14 0DD7                      __ptext31 0F30                      __ptext23 0E74  
                    __ptext15 1108                      __ptext40 0B3D                      __ptext32 0F78  
                    __ptext24 10C9                      __ptext16 082E                      __ptext41 0DA7  
                    __ptext33 0F11                      __ptext25 0EEB                      __ptext17 19A2  
                    __ptext42 0D6C                      __ptext34 0EFC                      __ptext26 0F67  
                    __ptext18 1B30                      __ptext51 0EC4                      __ptext43 0DD2  
                    __ptext35 21D0                      __ptext27 0F5A                      __ptext19 1FE4  
                    __ptext52 10CD                      __ptext44 0DA1                      __ptext36 0D97  
                    __ptext28 0F8C                      __ptext45 0B62                      __ptext37 0FE9  
                    __ptext29 0F3E                      __ptext46 236A                      __ptext38 0A8A  
                    __ptext47 1E1A                      __ptext39 0B67                      __ptext48 22FC  
                    __ptext49 2291                _buck_pwm_value 00C6     auto_system@sys_bt_voltage 00AA  
__size_ofi1_Set_Bost_Pwm_Duty 0023                      _ird_data 026C                      _init_adc 0F11  
                    _light_pv 00DD          __size_of_Mppt_Charge 017A                      _init_key 0F30  
               __size_of_main 0058            _step_02_time_limit 00E7                     pnum$text6 0025  
                    _init_osc 0F36                      _init_pwm 0F8C                      _pid_calc 1B30  
     _shuchu_shortout_voltage 01EB            __end_of_init_uart1 0F78                      _pid_init 0D97  
              _scan_key_value 0975                   ??_delay_1us 0023            pnum$text11_split_2 0056  
          pnum$text11_split_3 0057                      _pv_index 0141                pid_calc@dError 00A8  
     _handle_an4_process_flag 012D            _step_03_time_limit 00E9                      _sys_mode 0146  
       ___flmul@f3_as_product 0041                    _FVRCONbits 0117    __size_of_Set_Bost_Pwm_Duty 002B  
                    memset@p1 0023                 _bt_time_count 01C0     __size_of_Disable_Buck_Pwm 0006  
                 ??_init_port 0023        _ird_receive_time_count 0133    __end_of_handle_uart_rx_buf 06AF  
   __size_of_Disable_Bost_Pwm 0005                      intlevel1 0000        __end_of_scan_key_value 0A8A  
            ___lldiv@dividend 0027                 _pv_time_count 02A8            _step_04_time_limit 016B  
    __end_of_start_ad_convert 371D             __CFG_CLKOUTEN$OFF 0000              ??_handle_ad_loop 0066  
   handle_ad_loop@data_cc_var 02E8                 pid_calc@Error 00BC              _ird_receive_flag 0132  
          _involid_time_count 024C                   _mppt_status 01C3              _dianchi_cv_level 01E3  
          _step_05_time_limit 016D              _Adjust_Pout_Flag 00D2              ___lldiv@quotient 002B  
                  _WDTCONbits 0097                   _today_index 006B        _battery_low_time_count 023C  
               ?_eeprom_write 0064                  ___fladd@exp1 0055                  ___fladd@exp2 0054  
             ?_scan_key_value 0070                crc16@usDataLen 0025                  ___fladd@sign 0053  
    __size_of_Enable_Buck_Pwm 0004                  ?_eeprom_read 0070      __size_of_Enable_Bost_Pwm 0005  
        _load_open_time_count 024E              _uart1_time_count 014E    __end_ofi1_Disable_Bost_Pwm 10D2  
